{"version":3,"file":"static/js/7.a26874a1.chunk.js","mappings":"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","sources":["components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx","screens/homePage/HomePage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 300px;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background: var(--color-cream);\n  box-shadow: 0px 4px 16px 0px var(--color-opacity-black);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: var(--color-dark);\n  font-family: 'Poppins';\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--color-transparent-black);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: var(--color-light);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Poppins';\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--color-light);\n  }\n`;\n","import { BtnCloseBlack } from 'components/buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  RadioButton,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n  Dot,\n} from './Filters.styled';\n\nfunction Filters({ onClick, onChange, filterValue }) {\n  return (\n    <Container>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset type=\"button\" onClick={() => onChange('default')}>\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox>\n        <ColorOptionLabel className=\"gray\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('without')}\n            className=\"gray\"\n          />\n          <Dot className=\"gray\"></Dot>\n          Without priority\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"blue\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('low')}\n            className=\"blue\"\n          />\n          <Dot className=\"blue\"></Dot>\n          Low\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"red\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            checked={filterValue === 'medium'}\n            onChange={() => onChange('medium')}\n            className=\"red\"\n          />\n          <Dot className=\"red\"></Dot>\n          Medium\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"green\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            checked={filterValue === 'high'}\n            onChange={() => onChange('high')}\n            className=\"green\"\n          />\n          <Dot className=\"green\"></Dot>\n          High\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 20px 0 20px;\n  box-sizing: border-box;\n  flex-direction: row;\n  margin-bottom: 39px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 26px;\n    padding: 26px 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 10px;\n    padding: 10px 24px 0 24px;\n  }\n`;\nexport const BoardName = styled.h2`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: var(--bg-color-light);\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\n\nconst HeaderDashboard = ({ boardName, filterValue }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters\n            onClick={toggleMenu}\n            onChange={boardFilterHandler}\n            filterValue={filterValue}\n          />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nexport const IconsButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: var(--color-cream);\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: var(--color-dark);\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  margin-bottom: 4px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--color-dark);\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: var(--color-green);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const RadioButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: var(--color-light);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  margin: 0;\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--color-light);\n  }\n`;\n\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer, CloseButton} from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport { BtnCloseBlack } from 'components/buttons/buttons';\n\nconst ColumnForm = ({\n  formTitle,\n  columnTitle,\n  btnText,\n  onSubmit,\n  closeModal,\n}) => {\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import {\n  Container,\n  Title,\n  IconsBox,\n  IconsButton,\n  Icon,\n} from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <IconsButton type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </IconsButton>\n        <IconsButton\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </IconsButton>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n            closeModal={closeModal}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: var(--color-text-card);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid var(--color-transparent-black);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: var(--color-dark);\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  margin-left: auto;\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n\nexport const MenuMUI = styled(Menu)`\n  /* max-height: 180px; */\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  stroke: var(--color-dark);\n\n  direction: ltr;\n\n  &:hover {\n    color: var(--color-green);\n    stroke: var(--color-green);\n  }\n`;\n\nexport const IconDeadline = styled.svg`\nwidth: 16px;\nheight: 16px;\nstroke: var(--color-green);\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n  width: 18px;\n  height: 18px;\n  // flex-shrink: 0;\n  // margin: 0;\n  stroke: var(--color-green);\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\nimport { toast } from 'react-hot-toast';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  useEffect(() => {}, [dateDeadline]);\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          disablePast\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          onChange={newValue => {\n            if (dayjs(newValue).isBefore(dayjs(), 'day')) {\n              toast.error('invalid date');\n              return;\n            }\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          slots={{\n            openPickerIcon: () => (\n              <IconDown aria-label=\"chevron-down\">\n                <use href={sprite + '#icon-chevron-down'}></use>\n              </IconDown>\n            ),\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                color: '',\n                backgroundColor: '#FFFFFF',\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  color: '#161616',\n                  fontFamily: 'Poppins',\n                  fontSize: '12px',\n                  fontStyle: 'normal',\n                  fontWeight: 500,\n                  lineHeight: 'normal',\n                },\n                '& .MuiSvgIcon-root': {\n                  fill: '',\n                },\n\n                '& .MuiTypography-root': {\n                  color: '',\n                  height: '24px',\n                  marginTop: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: '',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '2px',\n                  borderBottomStyle: 'solid',\n                  borderColor: '',\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: '',\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: '#BEDBB0',\n                  color: '#161616',\n                },\n\n                '&.Mui-selected:hover': {\n                  backgroundColor: '',\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: '',\n                  color: '',\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n  RadioButtonContainer,\n  RadioButton,\n  Dot,\n  CloseButton,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\nimport { BtnCloseBlack } from 'components/buttons/buttons';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n  closeModal,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('MM/DD/YYYY');\n  const formattedDateLong = dayjs(selectedDate).format('dddd, MMMM DD');\n  const deadLineDateLong = dayjs(deadline).format('dddd, MMMM DD');\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || 'without',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            as={Textarea}\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <RadioButtonContainer>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"low\"\n                  className=\"blue\"\n                />\n                <Dot className=\"blue\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"medium\"\n                  className=\"red\"\n                />\n                <Dot className=\"red\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"high\"\n                  className=\"green\"\n                />\n                <Dot className=\"green\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"without\"\n                  className=\"gray\"\n                />\n                <Dot className=\"gray\"></Dot>\n              </ColorOptionLabel>\n            </RadioButtonContainer>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDateLong\n                  : deadLineDateLong || `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar parentState={setSelectedDate} />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n  IconDeadline,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(22, 22, 22, 0.30)';\n    }\n\n    return cardBordredColor;\n  };\n\nconst isDeadlineToday = (deadline) => {\n  const today = new Date();\n  const deadlineDate = new Date(deadline);\n  return (\n    today.getFullYear() === deadlineDate.getFullYear() &&\n    today.getMonth() === deadlineDate.getMonth() &&\n    today.getDate() === deadlineDate.getDate()\n  );\n};\n\n  return (\n    <Container\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          {isDeadlineToday(deadline) && (\n            <IconDeadline>\n              <use href={icon + '#icon-bell-01'}></use>\n            </IconDeadline>\n          )}\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            size=\"small\"\n            sx={{\n              padding: 0,\n              maxWidth: '16px',\n              maxHeight: '16px',\n              minWidth: '16px',\n              minHeight: '16px',\n              border: 'none',\n              '&:hover': {\n                backgroundColor: 'transparent',\n              },\n              '&:focus': {\n                outline: '2px solid #000000',\n              },\n            }}\n          >\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </Button>\n          <MenuMUI\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {columns.map(columm => {\n              const currentColumn = columm._id === card.owner;\n\n              return (\n                <MenuItemMUI\n                  key={columm._id + '1'}\n                  onClick={() => replaceCardHandler(columm._id)}\n                  disabled={currentColumn}\n                  sx={{\n                    color: currentColumn ? '#bedbb0' : '#16161680',\n                    stroke: currentColumn ? '#bedbb0' : '#16161680',\n                  }}\n                >\n                  {columm.title}\n                  <TransferRight>\n                    <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n                  </TransferRight>\n                </MenuItemMUI>\n              );\n            })}\n          </MenuMUI>\n\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 82vh;\n  display: flex;\n  padding: 0 20px 0 20px;\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 24px 0 24px;\n    max-height: 87vh;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  max-height: 100%;\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-right: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-right: 34px;\n  }\n`;\n\nexport const ColumnsListItem = styled.li`\n  height: 100%;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  height: 100%;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  max-height: 63vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media screen and (min-width: 1440px) {\n    max-height: 69vh;\n  }\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.ovner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <BtnAdd\n                    onClick={() => openModalCard(column._id)}\n                    btnTitle={btnTitle}\n                    btnColor={btnColor}\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n          closeModal={closeColumnModal}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: var(--color-text-card);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: var(--color-green);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    padding: 0;\n    height: 100vh;\n    max-height: 100%;\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n      padding: 0 0 0 260px;\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} filterValue={data.filter} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\n\nconst HomePage = () => {\n  return (\n    <div>\n      <ScreensPage />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","CloseButton","_templateObject2","Title","_templateObject3","TitleBox","_templateObject4","ResetBox","_templateObject5","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","Dot","_templateObject9","ColorOptionLabel","_templateObject10","RadioButton","_templateObject11","_ref","onClick","onChange","filterValue","_jsxs","children","_jsx","type","BtnCloseBlack","className","name","value","checked","BoardName","Thumb","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","BtnFilter","color","Filters","priotity","IconsBox","IconsButton","Icon","FormContainer","ModalTitle","Input","Textarea","Subtitle","Text","RadioButtonContainer","Field","DeadlineBox","_templateObject12","formTitle","columnTitle","btnText","onSubmit","closeModal","initialValues","title","Formik","values","Form","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","href","icon","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","IconButton","TransferRight","_templateObject13","Edit","_templateObject14","Delete","_templateObject15","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDeadline","_templateObject18","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","disablePast","desktopModeMediaQuery","newValue","isBefore","toast","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","sx","borderRadius","backgroundColor","position","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","formattedDateLong","deadLineDateLong","_objectSpread","concat","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","_useState3","_useState4","anchorEl","setAnchorEl","Boolean","closeCardModal","cardPriorityChecker","cardBordredColor","style","borderLeft","EllipsisText","length","today","Date","deadlineDate","getFullYear","getMonth","getDate","isDeadlineToday","Button","id","undefined","event","currentTarget","size","maxHeight","minHeight","outline","onClose","MenuListProps","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","stroke","deleteCardHandler","CardForm","ColumnsList","ColumnsListItem","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","filter","MainDashboard","board","StartBoard","ScreensPage"],"sourceRoot":""}