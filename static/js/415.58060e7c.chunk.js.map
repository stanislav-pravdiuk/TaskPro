{"version":3,"file":"static/js/415.58060e7c.chunk.js","mappings":"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","sources":["components/forms/loginForm/LoginSchema.jsx","components/forms/loginForm/LoginForm.styled.jsx","components/forms/loginForm/LoginForm.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\nexport default LoginSchema;","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100%;\n  background: linear-gradient(\n    180deg,\n    var(--color-white) 0%,\n    var(--color-white) 25%,\n    var(--color-green) 92.19%\n  );\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\nconst FormContainer = styled.div`\n  text-align: center;\n  background: var(--bg-color-form);\n  border-radius: 8px;\n  padding: 40px;\n\n  @media screen and (max-width: 767px) {\n    padding: 24px;\n  }\n`;\nconst LinkMenu = styled.div`\n  display: flex;\n`;\n\nconst LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--color-white);\n  text-decoration: none;\n`;\n\nconst RegisterLink = styled(Link)`\n  margin-right: 14px;\n  display: inline-block;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--color-pale-white);\n  text-decoration: none;\n`;\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 344px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: var(--color-white);\n    background: var(--bg-color-form-input);\n    opacity: 0.4;\n    border: 1px solid var(--color-green);\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px var(--color-shadow);\n    border-radius: 8px;\n    @media screen and (max-width: 767px) {\n      width: 287px;\n    }\n  }\n`;\n\nconst RegisterBtn = styled.button`\n  font-style: normal;\n  font-weight: 500;\n  font-family: Poppins;\n  font-size: 14px;\n  line-height: 21px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  background: var(--color-green);\n  border-radius: 8px;\n  color: var(--color-dark);\n  cursor: pointer;\n\n  transition: opacity 200ms linear;\n\n  &:hover {\n    opacity: 0.8;\n  }\n  @media screen and (max-width: 767px) {\n    width: 287px;\n  }\n  @media screen and (max-width: 375px) {\n    width: 100%;\n  }\n`;\nconst PasswordInput = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 14px;\n`;\nconst Passwordsvg = styled.svg`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n  stroke: #fff;\n  width: 16.5px;\n  height: 16px;\n  right: 15px;\n  opacity: 0.4;\n  &:hover,\n  &:focus {\n    stroke: #9dc888;\n  }\n`;\n\nconst ErrorText = styled.div`\n  position: absolute;\n  bottom: -15px;\n  right: 0;\n  font-size: 11px;\n  font-weight: 400;\n  font-style: normal;\n  letter-spacing: -1%;\n  opacity: 0.9;\n  color: #fff;\n`;\n\nconst StyledWrapInputAuth = styled.div`\n  position: relative;\n`;\n\nexport {\n  Container,\n  FormContainer,\n  LinkMenu,\n  RegisterLink,\n  LoginLink,\n  InputField,\n  RegisterBtn,\n  ErrorText,\n  PasswordInput,\n  Passwordsvg,\n  StyledWrapInputAuth,\n};\n","import React, { useState } from 'react';\nimport icon from '../../../images/icons.svg';\nimport LoginSchema from \"./LoginSchema\";\nimport { useFormik } from 'formik';\nimport { useDispatch } from \"react-redux\";\nimport { Container, FormContainer, InputField, LinkMenu, LoginLink, RegisterBtn, RegisterLink, ErrorText, PasswordInput, Passwordsvg, StyledWrapInputAuth } from \"./LoginForm.styled\";\nimport { logIn } from \"redux/auth/authOperations\";\nimport { toast } from \"react-hot-toast\";\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async values => {\n      try {\n        await dispatch(logIn(\n          { email: values.email, password: values.password }\n        )).unwrap();\n        toast.success('You have logged in successfully!!!')\n        formik.resetForm();\n      } catch (error) {\n        toast.error(\"Sorry, you entered invalid email or password\")\n      }\n    }\n\n  },);\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevShowPassword) => !prevShowPassword);\n  };\n\n  return (<Container>\n    <FormContainer>\n      <form onSubmit={formik.handleSubmit}>\n        <LinkMenu>\n          <RegisterLink to=\"/auth/register\" underline=\"none\"> Registration </RegisterLink>\n          <LoginLink to=\"/auth/login\" underline=\"none\"> Log In </LoginLink >\n        </LinkMenu>\n        <InputField>\n          <StyledWrapInputAuth>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.email}\n              placeholder=\"Enter your email\"\n            />\n            {formik.touched.email && formik.errors.email ? (\n              <ErrorText>{formik.errors.email}</ErrorText>) : null} </StyledWrapInputAuth>\n          <StyledWrapInputAuth>\n            <PasswordInput><input\n              type={showPassword ? 'text' : 'password'}\n              id=\"password\"\n              name=\"password\"\n              onChange={formik.handleChange}\n              onBlur={formik.handleBlur}\n              value={formik.values.password}\n              placeholder=\"Confirm a password\"\n            />\n              <Passwordsvg width=\"18px\" onClick={togglePasswordVisibility}> < use href={icon + '#icon-eye'}></use> </Passwordsvg > </PasswordInput>\n            {formik.touched.password && formik.errors.password ? (\n              <ErrorText>{formik.errors.password}</ErrorText>\n            ) : null} </StyledWrapInputAuth>\n        </InputField>\n        <RegisterBtn type=\"submit\">Log In Now</RegisterBtn>\n      </form>\n    </FormContainer >\n  </Container>)\n};\n\nexport default LoginForm;"],"names":["Yup","shape","email","required","password","min","Container","styled","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","LinkMenu","_templateObject3","LoginLink","Link","_templateObject4","RegisterLink","_templateObject5","InputField","_templateObject6","RegisterBtn","_templateObject7","PasswordInput","_templateObject8","Passwordsvg","_templateObject9","ErrorText","_templateObject10","StyledWrapInputAuth","_templateObject11","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","formik","useFormik","initialValues","validationSchema","LoginSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","logIn","unwrap","toast","resetForm","t0","stop","_x","apply","arguments","_jsx","children","_jsxs","handleSubmit","to","underline","type","id","name","onChange","handleChange","onBlur","handleBlur","value","placeholder","touched","errors","width","onClick","prevShowPassword","href","icon"],"sourceRoot":""}