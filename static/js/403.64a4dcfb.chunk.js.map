{"version":3,"file":"static/js/403.64a4dcfb.chunk.js","mappings":"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","sources":["components/screensPage/startBoard/StartBoard.styled.jsx","components/screensPage/startBoard/StartBoard.jsx","components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/screensPage/test3/HeaderDashboard.styled.jsx","components/screensPage/test3/HeaderDashboard.jsx","components/forms/cardForm/CardForm.styled.jsx","components/forms/columnForm/ColumnForm.jsx","components/screensPage/titleColumn/TitleColumn.styled.jsx","components/screensPage/titleColumn/TitleColumn.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/forms/cardForm/CardForm.jsx","components/screensPage/test6/Card.styled.jsx","components/screensPage/test6/Card.jsx","components/buttons/btnAdd/BtnAddColumn.jsx","components/screensPage/test4/MainDashboard.styled.jsx","components/screensPage/test4/MainDashboard.jsx","components/screensPage/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 24px;\n  }\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  /* color: var(--color-text-card); */\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.button`\n  color: ${props => props.theme.palette.text.hint};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  margin-left: 3px;\n  margin-right: 3px;\n`;\n","import MainModal from '../../test5/MainModal';\nimport NewBoardForm from 'components/forms/newBoardForm/NewBoardForm';\nimport { useState } from 'react';\nimport { Container, Link, TextBox } from './StartBoard.styled';\nimport { useTheme } from '@mui/material';\nimport { useAddBoardMutation } from 'redux/boards/boardsApi';\n\nconst StartBoard = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  const [addBoard] = useAddBoardMutation();\n\n  const closeModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleSubmit = data => {\n    addBoard({ data });\n    closeModal();\n  };\n\n  const theme = useTheme();\n  return (\n    <Container>\n      <TextBox theme={theme}>\n        Before starting your project, it is essential\n        <Link theme={theme} onClick={() => setOpenModal(true)}>\n          to create a board\n        </Link>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </TextBox>\n      <MainModal modalIsOpen={openModal} closeModal={closeModal}>\n        <NewBoardForm\n          formTitle={'New board'}\n          btnText={'Create'}\n          handleSubmit={handleSubmit}\n          closeModal={closeModal}\n        ></NewBoardForm>\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default StartBoard;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 300px;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  box-shadow: 0px 4px 16px 0px var(--color-opacity-black);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: inherit;\n  font-family: 'Poppins';\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid;\n  border-color: ${props => {\n    return props.theme.palette.secondary.main;\n  }};\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  color: inherit;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n\n  color: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n\n  font-family: 'Poppins';\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid rgba(128, 128, 128, 0.7);\n  }\n`;\n","import { BtnCloseBlack } from '../buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  RadioButton,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n  Dot,\n} from './Filters.styled';\nimport { useTheme } from '@mui/material';\n\nfunction Filters({ onClick, onChange, filterValue }) {\n  const theme = useTheme();\n\n  return (\n    <Container theme={theme}>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox theme={theme}>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset\n          theme={theme}\n          type=\"button\"\n          onClick={() => onChange('default')}\n        >\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox theme={theme}>\n        <ColorOptionLabel theme={theme} className=\"gray\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            checked={filterValue === 'without'}\n            onChange={() => onChange('without')}\n            className=\"gray\"\n          />\n          <Dot className=\"gray\"></Dot>\n          Without priority\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"blue\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('low')}\n            className=\"blue\"\n          />\n          <Dot className=\"blue\"></Dot>\n          Low\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"red\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            checked={filterValue === 'medium'}\n            onChange={() => onChange('medium')}\n            className=\"red\"\n          />\n          <Dot className=\"red\"></Dot>\n          Medium\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"green\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            checked={filterValue === 'high'}\n            onChange={() => onChange('high')}\n            className=\"green\"\n          />\n          <Dot className=\"green\"></Dot>\n          High\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 20px 0 20px;\n  box-sizing: border-box;\n  flex-direction: row;\n  margin-bottom: 39px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 26px;\n    padding: 26px 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 10px;\n    padding: 10px 24px 0 24px;\n  }\n`;\nexport const BoardName = styled.h2`\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from '../../buttons/buttons'\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\n\nconst HeaderDashboard = ({ boardName, filterValue }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const theme = useTheme();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName theme={theme}>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters\n            onClick={toggleMenu}\n            onChange={boardFilterHandler}\n            filterValue={filterValue}\n          />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n`;\n\nexport const Container = styled.div`\n  line-height: 0;\n  position: relative;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 15px;\n  padding-left: 14px;\n  margin: 0;\n  color: var(--color-pastel);\n  font-size: 12px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.palette.text.info};\n  background-color: inherit;\n  color: ${props => props.theme.palette.text.primary};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border-color: ${props => props.theme.palette.text.hint};\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -7px;\n  padding-left: 14px;\n  margin: 0;\n  color: var(--color-pastel);\n  font-size: 12px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.palette.text.info};\n  background-color: inherit;\n  color: ${props => props.theme.palette.text.primary};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border-color: ${props => props.theme.palette.text.hint};\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  margin-bottom: 4px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: inherit;\n`;\n\nexport const Text = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  color: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const RadioButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  margin: 0;\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import * as Yup from 'yup';\nimport React from 'react';\nimport BtnAdd from 'components/buttons/btnAdd/BtnAdd';\nimport { Formik, Form, Field } from 'formik';\nimport { toast } from 'react-hot-toast';\nimport { BtnCloseBlack } from '../../buttons/buttons';\nimport { useTheme } from '@mui/material';\nimport {\n  ModalTitle,\n  Container,\n  Error,\n  Input,\n  FormContainer,\n  CloseButton,\n} from '../cardForm/CardForm.styled';\n\nconst ColumnForm = ({\n  formTitle,\n  columnTitle,\n  btnText,\n  onSubmit,\n  closeModal,\n}) => {\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(3, 'Title must be at least 3 characters long')\n      .required('Title is required'),\n  });\n\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    const title = values.title.trim();\n\n    if (!title || title.length < 3) {\n      toast.error('Title must be at least 3 characters long');\n      return;\n    }\n\n    onSubmit(values);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <FormContainer theme={theme}>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {formik => (\n          <Form>\n            <Container>\n              <Field\n                theme={theme}\n                type=\"text\"\n                name=\"title\"\n                as={Input}\n                placeholder=\"Title\"\n              />\n              <Error name=\"title\" component=\"div\" />\n            </Container>\n\n            <BtnAdd\n              btnTitle={btnText}\n              btnColor={'#BEDBB0'}\n            />\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  min-height: 56px;\n  border-radius: 8px;\n  background: ${props => props.theme.palette.background.paper};\n  color: ${props => props.theme.palette.text.primary};\n  stroke: ${props => props.theme.palette.primary.info};\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nexport const IconsButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n","import icon from '../../../images/icons.svg';\nimport MainModal from '../test4/MainDashboard';\nimport ColumnForm from 'components/forms/columnForm/ColumnForm';\nimport { useState } from 'react';\nimport { useTheme } from '@mui/material';\nimport {\n  Container,\n  Title,\n  IconsBox,\n  IconsButton,\n  Icon,\n} from './TitleColumn.styled';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const theme = useTheme();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container theme={theme}>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <IconsButton type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </IconsButton>\n        <IconsButton\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </IconsButton>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n            closeModal={closeModal}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n  width: 18px;\n  height: 18px;\n  // flex-shrink: 0;\n  // margin: 0;\n  stroke: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n","import sprite from '../../images/icons.svg';\nimport dayjs from 'dayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { useState, useEffect } from 'react';\nimport { IconDown } from './Calendar.styled';\nimport { toast } from 'react-hot-toast';\nimport { useTheme } from '@mui/material';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const theme = useTheme();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  useEffect(() => {}, [dateDeadline]);\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          disablePast\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          onChange={newValue => {\n            if (dayjs(newValue).isBefore(dayjs(), 'day')) {\n              toast.error('invalid date');\n              return;\n            }\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          slots={{\n            openPickerIcon: () => (\n              <IconDown theme={theme} aria-label=\"chevron-down\">\n                <use href={sprite + '#icon-chevron-down'}></use>\n              </IconDown>\n            ),\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                '& .MuiPickersLayout-contentWrapper': {\n                  border: '1px solid',\n                  borderColor: 'primary.main',\n                  borderRadius: '8px',\n                },\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  width: '100%',\n                  justifyContent: 'center',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  color: 'text.primary', // September 2023 (title)\n                  fontFamily: 'Poppins',\n                  fontSize: '16px',\n                  fontStyle: 'normal',\n                  fontWeight: 500,\n                  lineHeight: 'normal',\n                },\n\n                '& .MuiSvgIcon-root': {\n                  fill: 'text.success', // стрілки вправо вліво біля September 2023\n                },\n\n                '& .MuiTypography-root': {\n                  color: 'primary.info', //Назви днів  rgba(22, 22, 22, 0.5)\n                  height: '24px',\n                  marginTop: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: 'text.primary', // числа місяця після вибраної дати\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '1px',\n                  borderBottomStyle: 'solid',\n                  borderColor: 'text.success', // колір лінії під September 2023\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: '', // фон всього календаря\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n\n                '& .MuiPickersDay-root.Mui-disabled': {\n                  // color: 'text.success', // фон неактивних днів цього місяця\n                  // color: 'grey', // фон неактивних днів цього місяця\n                },\n                \n                '& .Mui-disabled:not(.Mui-selected)': {\n                  // color: 'text.success',\n                },\n\n                '& .MuiPickersDay-root.Mui-disabled:not(.Mui-selected)': {\n                  color: 'text.success', // color неактивні дні цього місяця\n                },\n\n                '& .MuiPickersMonth-monthButton': {\n                  color: 'text.secondary', // текст назви місяця\n                  '&:hover': {\n                    bgcolor: 'primary.main', // ???? ховер при виборі місяця\n                  },\n                },\n                '& .MuiPickersMonth-monthButton.Mui-selected': {\n                  color: 'text.primary', // колір текст назви міс. selected\n                  bgcolor: 'primary.main', // фон назви міс. selected\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'primary.main', // фон вибраної дати\n                  color: 'primary.darker', // колір цифри вибраної дати\n                },\n\n                '&.Mui-selected:hover': {\n                  backgroundColor: '', // ховер при виборі дати\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'primary.main',\n                  bgcolor: 'primary.main', // фон сьогоднішньої дати навколо цифри\n                  color: 'text.primary', // колір сьогоднішньої дати (цифри)\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};","import React, { useState } from 'react';\nimport * as Yup from 'yup';\nimport BtnAdd from 'components/buttons/btnAdd/BtnAdd';\nimport dayjs from 'dayjs';\nimport { Formik, Form, Field } from 'formik';\nimport { Calendar } from 'components/calendar/Calendar';\nimport { BtnCloseBlack } from '../../buttons/buttons';\nimport { useTheme } from '@mui/material';\nimport { toast } from 'react-hot-toast';\nimport {\n  FormContainer,\n  ModalTitle,\n  Container,\n  Error,\n  Input,\n  ErrorText,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n  RadioButtonContainer,\n  RadioButton,\n  Dot,\n  CloseButton,\n} from './CardForm.styled';\n\nconst CardForm = ({\n  title,\n  text,\n  priority = 'without',\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n  closeModal,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('MM/DD/YYYY');\n  const formattedDateLong = dayjs(selectedDate).format('dddd, MMMM DD');\n  const deadLineDateLong = dayjs(deadline).format('dddd, MMMM DD');\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(3, 'Title must be at least 3 characters long')\n      .required('Title is required'),\n    text: Yup.string()\n      .min(3, 'Description must be at least 3 characters long')\n      .required('Description is required'),\n  });\n\n  const theme = useTheme();\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || '',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const title = values.title.trim();\n    const text = values.text.trim();\n\n    if (!title || title.length < 3) {\n      toast.error('Title must be at least 3 characters long');\n      return;\n    }\n\n    if (!text || text.length < 3) {\n      toast.error('Description must be at least 3 characters long');\n      return;\n    }\n\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer theme={theme}>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {formik => (\n          <Form>\n            <Container>\n              <Field\n                theme={theme}\n                type=\"text\"\n                name=\"title\"\n                as={Input}\n                placeholder=\"Title\"\n              />\n              <Error name=\"title\" component=\"div\" />\n            </Container>\n            <Container>\n              <Field\n                theme={theme}\n                as={Textarea}\n                type=\"text\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrorText name=\"text\" component=\"div\" />\n            </Container>\n\n            <div>\n              <Subtitle>Label color</Subtitle>\n              <RadioButtonContainer>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"low\"\n                    className=\"blue\"\n                  />\n                  <Dot className=\"blue\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"medium\"\n                    className=\"red\"\n                  />\n                  <Dot className=\"red\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"high\"\n                    className=\"green\"\n                  />\n                  <Dot className=\"green\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"without\"\n                    className=\"gray\"\n                  />\n                  <Dot className=\"gray\"></Dot>\n                </ColorOptionLabel>\n              </RadioButtonContainer>\n            </div>\n            <div>\n              <Subtitle>Deadline</Subtitle>\n              <DeadlineBox>\n                <Text theme={theme}>\n                  {selectedDate\n                    ? formattedDateLong\n                    : deadLineDateLong || `Today, ${dayjs().format('MMMM D')}`}\n                </Text>\n                <Calendar parentState={setSelectedDate} />\n              </DeadlineBox>\n            </div>\n            <BtnAdd btnTitle={btnText} />\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import styled from 'styled-components';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  stroke: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: inherit;\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid;\n  border-color: ${props => {\n    return props.theme.palette.secondary.main;\n  }};\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: inherit;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  margin-left: auto;\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n\nexport const MenuMUI = styled(Menu)`\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n\n  stroke: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n\n  direction: ltr;\n\n  &:hover {\n    color: var(--color-green);\n    stroke: var(--color-green);\n  }\n`;\n\nexport const IconDeadline = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n","import EllipsisText from 'react-ellipsis-text';\nimport Button from '@mui/material/Button';\nimport MainModal from '../../test5/MainModal';\nimport CardForm from 'components/forms/cardForm/CardForm';\nimport icon from '../../../images/icons.svg';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n  IconDeadline,\n} from './Card.styled';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n  const theme = useTheme();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(128, 128, 128, 0.7)';\n    }\n\n    return cardBordredColor;\n  };\n\n  const isDeadlineToday = deadline => {\n    const today = new Date();\n    const deadlineDate = new Date(deadline);\n    return (\n      today.getFullYear() === deadlineDate.getFullYear() &&\n      today.getMonth() === deadlineDate.getMonth() &&\n      today.getDate() === deadlineDate.getDate()\n    );\n  };\n\n  return (\n    <Container\n      theme={theme}\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title theme={theme}>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar theme={theme}>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          {isDeadlineToday(deadline) && (\n            <IconDeadline theme={theme}>\n              <use href={icon + '#icon-bell-01'}></use>\n            </IconDeadline>\n          )}\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            size=\"small\"\n            sx={{\n              padding: 0,\n              maxWidth: '16px',\n              maxHeight: '16px',\n              minWidth: '16px',\n              minHeight: '16px',\n              border: 'none',\n              '&:hover': {\n                backgroundColor: 'transparent',\n              },\n              '&:focus': {\n                outline: '2px solid #000000',\n              },\n            }}\n          >\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </Button>\n          <MenuMUI\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {columns.map(columm => {\n              const currentColumn = columm._id === card.owner;\n\n              return (\n                <MenuItemMUI\n                  theme={theme}\n                  key={columm._id + '1'}\n                  onClick={() => replaceCardHandler(columm._id)}\n                  disabled={currentColumn}\n                  sx={{\n                    color: currentColumn ? '#bedbb0' : 'text.secondary',\n                    stroke: currentColumn ? '#bedbb0' : 'text.secondary',\n                  }}\n                >\n                  {columm.title}\n                  <TransferRight>\n                    <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n                  </TransferRight>\n                </MenuItemMUI>\n              );\n            })}\n          </MenuMUI>\n\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;","import icon from '../../../images/icons.svg';\nimport {\n  ContainerColumn,\n  PlusIconColumn,\n  TitleButtonColumn,\n} from './BtnAdd.styled';\nimport {\n  ButtonPlusColumn,\n} from '../buttons.styled';\nimport { useTheme } from '@mui/material';\n\nconst BtnAddColumn = ({ data, btnTitle, btnColor, onClick }) => {\n\n  const theme = useTheme();\n\n  return (\n    <ContainerColumn theme={theme} onClick={onClick}>\n      <ButtonPlusColumn theme={theme}>\n        <PlusIconColumn theme={theme}>\n          <use href={icon + '#icon-plus-1'}></use>\n        </PlusIconColumn>\n      </ButtonPlusColumn>\n      <TitleButtonColumn theme={theme}>{btnTitle}</TitleButtonColumn>\n    </ContainerColumn>\n  );\n};\n\nexport default BtnAddColumn;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 78vh;\n  display: flex;\n  padding: 0 20px 0 20px;\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  ::-webkit-scrollbar {\n    background-color: ${props => props.theme.palette.background.disabled};\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.palette.background.hint};\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 0 32px;\n    max-height: 82vh;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 24px 0 24px;\n    max-height: 87vh;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  max-height: 100%;\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-right: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-right: 34px;\n  }\n`;\n\nexport const ColumnsListItem = styled.li``;\n\nexport const Column = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  max-height: 58vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media screen and (min-width: 768px) {\n    max-height: 63vh;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: 69vh;\n  }\n`;\n","\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../test6/Card';\nimport MainModal from '../../test5/MainModal';\nimport ColumnForm from 'components/forms/columnForm/ColumnForm';\nimport CardForm from 'components/forms/cardForm/CardForm';\nimport BtnAdd from '../../buttons/btnAdd/BtnAdd';\nimport BtnAddColumn from '../../buttons/btnAdd/BtnAddColumn';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\nimport { useState } from 'react';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\n\nconst MainDashboard = ({ columns }) => {\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const theme = useTheme();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container theme={theme}>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.ovner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <BtnAdd\n                    btnTitle={'Add another card'}\n                    onClick={() => openModalCard(column._id)}\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <BtnAddColumn\n        btnTitle={'Add another column'}\n        onClick={() => setOpenColumnModal(true)}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n          closeModal={closeColumnModal}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;","import StartBoard from './startBoard/StartBoard';\nimport HeaderDashboard from './test3/HeaderDashboard';\nimport MainDashboard from './test4/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const theme = useTheme();\n\n  const Container = styled.div`\n    height: 100vh;\n    max-height: 100%;\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: ${props => {\n      return props.theme.palette.primary.darker;\n    }};\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n      padding: 0 0 0 260px;\n    }\n\n    ::-webkit-scrollbar {\n      background-color: ${theme.palette.background.warning};\n      width: 8px;\n      border-radius: 12px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: ${theme.palette.background.info};\n      border-radius: 12px;\n    }\n  `;\n\n  return (\n    <Container theme={theme}>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} filterValue={data.filter} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","TextBox","_templateObject2","props","theme","palette","text","secondary","Link","_templateObject3","hint","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","_useAddBoardMutation","useAddBoardMutation","addBoard","closeModal","useTheme","_jsxs","children","_jsx","onClick","MainModal","modalIsOpen","NewBoardForm","formTitle","btnText","handleSubmit","data","background","paper","primary","CloseButton","Title","TitleBox","_templateObject4","ResetBox","_templateObject5","main","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","info","Dot","_templateObject9","ColorOptionLabel","_templateObject10","RadioButton","_templateObject11","_ref","onChange","filterValue","type","BtnCloseBlack","className","name","value","checked","BoardName","Thumb","boardName","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","BtnFilter","color","Filters","priotity","FormContainer","ModalTitle","Error","ErrorMessage","Input","ErrorText","Textarea","Subtitle","Text","RadioButtonContainer","_templateObject12","_templateObject13","Field","_templateObject14","DeadlineBox","_templateObject15","columnTitle","onSubmit","validationSchema","Yup","shape","title","min","required","initialValues","Formik","values","trim","length","toast","formik","Form","as","placeholder","component","BtnAdd","btnTitle","btnColor","IconsBox","IconsButton","Icon","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","href","icon","_id","deleteColumnHandler","ColumnForm","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","disablePast","desktopModeMediaQuery","newValue","isBefore","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","sx","borderRadius","border","borderColor","position","left","transform","width","justifyContent","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","margin","padding","display","alignItems","borderBottomWidth","borderBottomStyle","boxSizing","minWidth","maxWidth","bgcolor","backgroundColor","borderWidth","textField","variant","_ref$priority","priority","deadline","selectedDate","setSelectedDate","formattedDate","formattedDateLong","deadLineDateLong","_objectSpread","concat","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","IconButton","TransferRight","Edit","Delete","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDeadline","_templateObject18","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","_useState3","_useState4","anchorEl","setAnchorEl","Boolean","closeCardModal","cardPriorityChecker","cardBordredColor","style","borderLeft","EllipsisText","today","Date","deadlineDate","getFullYear","getMonth","getDate","isDeadlineToday","Button","id","undefined","event","currentTarget","size","maxHeight","minHeight","outline","onClose","MenuListProps","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","stroke","deleteCardHandler","CardForm","ContainerColumn","ButtonPlusColumn","PlusIconColumn","TitleButtonColumn","ColumnsList","ColumnsListItem","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","BtnAddColumn","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","darker","warning","HeaderDashboard","filter","MainDashboard","board","StartBoard"],"sourceRoot":""}