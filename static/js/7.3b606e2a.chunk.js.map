{"version":3,"file":"static/js/7.3b606e2a.chunk.js","mappings":"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","sources":["components/buttons/buttons.jsx","components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx","screens/homePage/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport icon from '../iconSvg/icon.svg';\n\nimport {\n  ButtonTaskPro,\n  ButtonTaskProIcon,\n  ButtonTaskProIconSvg,\n  ButtonTaskProIconText,\n  ButtonTaskProIconThumb,\n  ButtonPlus,\n  ButtonPlusSvg,\n  ButtonPlusIcon,\n  ButtonCreate,\n  ButtonCreateIcon,\n  ButtonCreateSvg,\n  ButtonCreateThumb,\n  ButtonCreateText,\n  ButtonLogOut,\n  ButtonLogOutThumb,\n  ButtonLogOutIcon,\n  ButtonLogOutSvg,\n  ButtonLogOutText,\n  ButtonTaskProIconThumbViolet,\n  ButtonTaskProIconSvgViolet,\n  ButtonCreateTextViolet,\n  ButtonCreateThumbViolet,\n  ButtonCreateIconViolet,\n  ButtonCreateSvgViolet,\n  ButtonCreateViolet,\n  ButtonPlusViolet,\n  ButtonPlusIconViolet,\n  ButtonPlusSvgViolet,\n  ButtonLogOutSvgViolet,\n  ButtonLogOutIconViolet,\n  ButtonDelete,\n  ButtonDeleteIcon,\n  ButtonDeleteSvg,\n  ButtonUpDate,\n  ButtonUpDateIcon,\n  ButtonUpDateSvg,\n  ButtonClose,\n  ButtonCloseIcon,\n  ButtonFilter,\n  ButtonFilterIcon,\n  ButtonFilterThumb,\n} from './buttons.styled';\n\nexport const BtnLogOut = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIcon>\n          <ButtonLogOutSvg href={icon + '#icon-login'}></ButtonLogOutSvg>\n        </ButtonLogOutIcon>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnTaskPro = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumb>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvg\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvg>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumb>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreate = ({ children }) => {\n  return (\n    <ButtonCreate>\n      <ButtonCreateThumb>\n        <ButtonCreateIcon>\n          <ButtonCreateSvg href={icon + '#icon-plus-1'}></ButtonCreateSvg>\n        </ButtonCreateIcon>\n      </ButtonCreateThumb>\n\n      <ButtonCreateText>{children}</ButtonCreateText>\n    </ButtonCreate>\n  );\n};\n\nexport const BtnPlus = () => {\n  return (\n    <ButtonPlus>\n      <ButtonPlusIcon>\n        <ButtonPlusSvg href={icon + '#icon-plus-2'}></ButtonPlusSvg>\n      </ButtonPlusIcon>\n    </ButtonPlus>\n  );\n};\n\nexport const BtnTaskProViolet = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumbViolet>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvgViolet\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvgViolet>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumbViolet>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreateViolet = ({ children }) => {\n  return (\n    <ButtonCreateViolet>\n      <ButtonCreateThumbViolet>\n        <ButtonCreateIconViolet>\n          <ButtonCreateSvgViolet\n            href={icon + '#icon-plus-2'}\n          ></ButtonCreateSvgViolet>\n        </ButtonCreateIconViolet>\n      </ButtonCreateThumbViolet>\n\n      <ButtonCreateTextViolet>{children}</ButtonCreateTextViolet>\n    </ButtonCreateViolet>\n  );\n};\n\nexport const BtnPlusViolet = () => {\n  return (\n    <ButtonPlusViolet>\n      <ButtonPlusIconViolet>\n        <ButtonPlusSvgViolet href={icon + '#icon-plus-1'}></ButtonPlusSvgViolet>\n      </ButtonPlusIconViolet>\n    </ButtonPlusViolet>\n  );\n};\n\nexport const BtnLogOutViolet = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIconViolet>\n          <ButtonLogOutSvgViolet\n            href={icon + '#icon-login-3'}\n          ></ButtonLogOutSvgViolet>\n        </ButtonLogOutIconViolet>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnDelete = () => {\n  return (\n    <ButtonDelete>\n      <ButtonDeleteIcon>\n        <ButtonDeleteSvg href={icon + '#icon-trash-04'}></ButtonDeleteSvg>\n      </ButtonDeleteIcon>\n    </ButtonDelete>\n  );\n};\n\nexport const BtnUpDate = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-pencil-01'}></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnRight = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg\n          href={icon + '#icon-arrow-circle-broken-right'}\n        ></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnClose = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnCloseBlack = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close-2'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnFilter = ({ color, onClick }) => {\n  return (\n    <ButtonFilter onClick={onClick}>\n      <ButtonFilterThumb>\n        <ButtonFilterIcon style={{ stroke: `${color}` }}>\n          <use href={icon + '#icon-filter'}></use>\n        </ButtonFilterIcon>\n      </ButtonFilterThumb>\n      Filters\n    </ButtonFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 300px;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background: var(--color-cream);\n  box-shadow: 0px 4px 16px 0px var(--color-opacity-black);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: var(--color-dark);\n  font-family: 'Poppins';\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--color-dark);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: var(--color-light);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n\n  font-family: 'Poppins';\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--color-light);\n  }\n`;\n","import { BtnCloseBlack } from 'components/buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  RadioButton,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n  Dot,\n} from './Filters.styled';\n\nfunction Filters({ onClick, onChange, filterValue }) {\n  return (\n    <Container>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset type=\"button\" onClick={() => onChange('default')}>\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox>\n        <ColorOptionLabel className=\"gray\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('without')}\n            className=\"gray\"\n          />\n          <Dot className=\"gray\"></Dot>\n          Without priority\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"blue\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('low')}\n            className=\"blue\"\n          />\n          <Dot className=\"blue\"></Dot>\n          Low\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"red\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            checked={filterValue === 'medium'}\n            onChange={() => onChange('medium')}\n            className=\"red\"\n          />\n          <Dot className=\"red\"></Dot>\n          Medium\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"green\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            checked={filterValue === 'high'}\n            onChange={() => onChange('high')}\n            className=\"green\"\n          />\n          <Dot className=\"green\"></Dot>\n          High\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 20px 0 20px;\n  box-sizing: border-box;\n  flex-direction: row;\n  margin-bottom: 39px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 26px;\n    padding: 26px 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 10px;\n    padding: 10px 24px 0 24px;\n  }\n`;\nexport const BoardName = styled.h2`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: var(--bg-color-light);\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\n\nconst HeaderDashboard = ({ boardName, filterValue }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters\n            onClick={toggleMenu}\n            onChange={boardFilterHandler}\n            filterValue={filterValue}\n          />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nexport const IconsButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n","import styled from 'styled-components';\nimport { Field } from 'formik';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: var(--color-cream);\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: var(--color-dark);\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  margin-bottom: 4px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--color-dark);\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: var(--color-green);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const RadioButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: var(--color-light);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  margin: 0;\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid var(--color-light);\n  }\n`;\n\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer } from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport Button from '@mui/material/Button';\n\nconst ColumnForm = ({\n  formTitle,\n  columnTitle,\n  btnText,\n  onSubmit,\n  closeModal,\n}) => {\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <Button\n        onClick={closeModal}\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import {\n  Container,\n  Title,\n  IconsBox,\n  IconsButton,\n  Icon,\n} from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <IconsButton type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </IconsButton>\n        <IconsButton\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </IconsButton>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n            closeModal={closeModal}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: var(--color-text-card);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid var(--color-transparent-black);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: var(--color-dark);\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  margin-left: auto;\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n\nexport const MenuMUI = styled(Menu)`\n  /* max-height: 180px; */\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  stroke: var(--color-dark);\n\n  direction: ltr;\n\n  &:hover {\n    color: var(--color-green);\n    stroke: var(--color-green);\n  }\n`;\n\nexport const IconDeadline = styled.svg`\nwidth: 16px;\nheight: 16px;\nstroke: var(--color-green);\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n  width: 18px;\n  height: 18px;\n  // flex-shrink: 0;\n  // margin: 0;\n  stroke: var(--color-green);\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\nimport { toast } from 'react-hot-toast';\n\nexport const Calendar = ({ parentState, initial }) => {\n    dayjs().format();\n\n    const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n    useEffect(() => {\n    }, [dateDeadline]);\n\n    return (\n        <>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    views={['month', 'day']}\n                    value={dateDeadline}\n                    desktopModeMediaQuery=\"\"\n                    onChange={newValue => {\n                        if (dayjs(newValue).isBefore(dayjs(), 'day')) {\n                            toast.error('invalid date');\n                        return;\n                        };\n                        setDateDeadline(newValue);\n                        parentState(newValue);\n                    }}\n                    slots={{\n                        openPickerIcon: () => (\n                            <IconDown aria-label=\"chevron-down\">\n                                <use href={sprite + '#icon-chevron-down'}></use>\n                            </IconDown>\n                        ),\n                    }}\n                    dayOfWeekFormatter={day => day.slice(0, 2)}\n                    slotProps={{\n                        desktopPaper: {\n                            sx: {\n                                borderRadius: '8px',\n                                color: '',\n                                backgroundColor: '#FFFFFF',\n                                '& .MuiPickersCalendarHeader-labelContainer': {\n                                    position: 'absolute',\n                                    left: '50%',\n                                    transform: 'translateX(-50%)',\n                                },\n                                '& .MuiPickersCalendarHeader-label': {\n                                    color: '#161616',\n                                    fontFamily: 'Poppins',\n                                    fontSize: '12px',\n                                    fontStyle: 'normal',\n                                    fontWeight: 500,\n                                    lineHeight: 'normal',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    fill: '',\n                                },\n\n                                '& .MuiTypography-root': {\n                                    color: '',\n                                    height: '24px',\n                                    marginTop: '14px',\n                                },\n                                '& .MuiDayCalendar-weekContainer': {\n                                    justifyContent: 'space-between',\n                                },\n\n                                '& .MuiButtonBase-root': {\n                                    color: '',\n                                    margin: 0,\n                                    padding: 0,\n                                    fontSize: '14px',\n                                    fontStyle: 'normal',\n                                    fontWeight: '400',\n                                    lineHeight: '18px',\n                                },\n                                '& .MuiPickersArrowSwitcher-root': {\n                                    width: '100%',\n                                    justifyContent: 'space-between',\n                                },\n                                '& .MuiPickersCalendarHeader-switchViewButton': {\n                                    display: 'none',\n                                },\n                                '& .MuiPickersCalendarHeader-root': {\n                                    padding: '0',\n                                    alignItems: 'baseline',\n                                    margin: '0',\n                                    borderBottomWidth: '2px',\n                                    borderBottomStyle: 'solid',\n                                    borderColor: '',\n                                },\n\n                                '& .MuiPickersArrowSwitcher-button': {\n                                    height: '21px',\n                                },\n\n                                '& .MuiDateCalendar-root': {\n                                    width: '233px',\n                                    height: '254px',\n                                    padding: '18px',\n                                    boxSizing: 'border-box',\n                                    background: '',\n                                },\n\n                                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                                    height: '24px',\n                                    width: '24px',\n                                    minWidth: '24px',\n                                    maxWidth: '24px',\n                                },\n                            },\n                        },\n                        day: {\n                            sx: {\n                                height: '24px',\n                                width: '24px',\n                                minWidth: '24px',\n                                maxWidth: '24px',\n                                fontSize: '14px',\n\n                                '&.MuiPickersDay-root.Mui-selected': {\n                                    backgroundColor: '#BEDBB0',\n                                    color: '#161616',\n                                },\n\n                                '&.Mui-selected:hover': {\n                                    backgroundColor: '',\n                                },\n                                '&.MuiPickersDay-today': {\n                                    borderWidth: 1,\n                                    borderColor: '',\n                                    color: '',\n                                },\n                            },\n                        },\n                        textField: {\n                            variant: 'outlined',\n                            sx: {\n\n                                '& input': { display: 'none' },\n                                '& fieldset': { border: 'none' },\n                            },\n                        },\n                    }}\n                />\n            </LocalizationProvider>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n  RadioButtonContainer,\n  RadioButton,\n  Dot,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport Button from '@mui/material/Button';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n  closeModal,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('MM/DD/YYYY');\n  const formattedDateLong = dayjs(selectedDate).format('dddd, MMMM DD');\n  const deadLineDateLong = dayjs(deadline).format('dddd, MMMM DD');\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || 'without',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <Button\n        onClick={closeModal}\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            as={Textarea}\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <RadioButtonContainer>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"low\"\n                  className=\"blue\"\n                />\n                <Dot className=\"blue\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"medium\"\n                  className=\"red\"\n                />\n                <Dot className=\"red\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"high\"\n                  className=\"green\"\n                />\n                <Dot className=\"green\"></Dot>\n              </ColorOptionLabel>\n              <ColorOptionLabel>\n                <RadioButton\n                  type=\"radio\"\n                  name=\"priority\"\n                  value=\"without\"\n                  className=\"gray\"\n                />\n                <Dot className=\"gray\"></Dot>\n              </ColorOptionLabel>\n            </RadioButtonContainer>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDateLong\n                  : deadLineDateLong || `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar parentState={setSelectedDate} />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n  IconDeadline,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(22, 22, 22, 0.30)';\n    }\n\n    return cardBordredColor;\n  };\n\nconst isDeadlineToday = (deadline) => {\n  const today = new Date();\n  const deadlineDate = new Date(deadline);\n  return (\n    today.getFullYear() === deadlineDate.getFullYear() &&\n    today.getMonth() === deadlineDate.getMonth() &&\n    today.getDate() === deadlineDate.getDate()\n  );\n};\n\n  return (\n    <Container\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          {isDeadlineToday(deadline) && (\n            <IconDeadline>\n              <use href={icon + '#icon-bell-01'}></use>\n            </IconDeadline>\n          )}\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            size=\"small\"\n            sx={{\n              padding: 0,\n              maxWidth: '16px',\n              maxHeight: '16px',\n              minWidth: '16px',\n              minHeight: '16px',\n              border: 'none',\n              '&:hover': {\n                backgroundColor: 'transparent',\n              },\n              '&:focus': {\n                outline: '2px solid #000000',\n              },\n            }}\n          >\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </Button>\n          <MenuMUI\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {columns.map(columm => {\n              const currentColumn = columm._id === card.owner;\n\n              return (\n                <MenuItemMUI\n                  key={columm._id + '1'}\n                  onClick={() => replaceCardHandler(columm._id)}\n                  disabled={currentColumn}\n                  sx={{\n                    color: currentColumn ? '#bedbb0' : '#16161680',\n                    stroke: currentColumn ? '#bedbb0' : '#16161680',\n                  }}\n                >\n                  {columm.title}\n                  <TransferRight>\n                    <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n                  </TransferRight>\n                </MenuItemMUI>\n              );\n            })}\n          </MenuMUI>\n\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 82vh;\n  display: flex;\n  padding: 0 20px 0 20px;\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 24px 0 24px;\n    max-height: 87vh;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  max-height: 100%;\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-right: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-right: 34px;\n  }\n`;\n\nexport const ColumnsListItem = styled.li`\n  height: 100%;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  height: 100%;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  max-height: 63vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media screen and (min-width: 1440px) {\n    max-height: 69vh;\n  }\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.ovner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <BtnAdd\n                    onClick={() => openModalCard(column._id)}\n                    btnTitle={btnTitle}\n                    btnColor={btnColor}\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n          closeModal={closeColumnModal}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: var(--color-text-card);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: var(--color-green);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    padding: 0;\n    height: 100vh;\n    max-height: 100%;\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n      padding: 0 0 0 260px;\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} filterValue={data.filter} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\n\nconst HomePage = () => {\n  return (\n    <div>\n      <ScreensPage />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["BtnCloseBlack","_jsx","ButtonClose","children","ButtonCloseIcon","ButtonUpDateSvg","href","icon","BtnFilter","_ref3","color","onClick","_jsxs","ButtonFilter","ButtonFilterThumb","ButtonFilterIcon","style","stroke","concat","Container","styled","_templateObject","_taggedTemplateLiteral","CloseButton","_templateObject2","Title","_templateObject3","TitleBox","_templateObject4","ResetBox","_templateObject5","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","Dot","_templateObject9","ColorOptionLabel","_templateObject10","RadioButton","_templateObject11","_ref","onChange","filterValue","type","className","name","value","checked","BoardName","Thumb","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","Filters","priotity","IconsBox","IconsButton","Icon","FormContainer","ModalTitle","Input","Textarea","Subtitle","Text","RadioButtonContainer","Field","DeadlineBox","_templateObject12","formTitle","columnTitle","btnText","onSubmit","closeModal","initialValues","title","Button","sx","position","top","right","zIndex","Formik","values","Form","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","IconButton","TransferRight","_templateObject13","Edit","_templateObject14","Delete","_templateObject15","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDeadline","_templateObject18","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","newValue","isBefore","toast","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","borderRadius","backgroundColor","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","formattedDateLong","deadLineDateLong","_objectSpread","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","_useState3","_useState4","anchorEl","setAnchorEl","Boolean","closeCardModal","cardPriorityChecker","cardBordredColor","borderLeft","EllipsisText","length","today","Date","deadlineDate","getFullYear","getMonth","getDate","isDeadlineToday","id","undefined","event","currentTarget","size","maxHeight","minHeight","outline","onClose","MenuListProps","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","deleteCardHandler","CardForm","ColumnsList","ColumnsListItem","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","filter","MainDashboard","board","StartBoard","ScreensPage"],"sourceRoot":""}