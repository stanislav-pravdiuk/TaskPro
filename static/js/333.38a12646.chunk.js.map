{"version":3,"file":"static/js/333.38a12646.chunk.js","mappings":"iPAuMaA,EAAgB,WAC3B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAW,CAAAC,UACVF,EAAAA,EAAAA,KAACG,EAAAA,GAAe,CAAAD,UACdF,EAAAA,EAAAA,KAACI,EAAAA,GAAe,CAACC,KAAMC,EAAAA,EAAO,uBAItC,EAEaC,EAAY,SAAHC,GAA4B,IAAtBC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QACjC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,GAAY,CAACF,QAASA,EAAQR,SAAA,EAC7BF,EAAAA,EAAAA,KAACa,EAAAA,GAAiB,CAAAX,UAChBF,EAAAA,EAAAA,KAACc,EAAAA,GAAgB,CAACC,MAAO,CAAEC,OAAO,GAADC,OAAKR,IAAUP,UAC9CF,EAAAA,EAAAA,KAACkB,EAAAA,GAAe,CAACb,KAAMC,EAAAA,EAAO,sBAGlCN,EAAAA,EAAAA,KAACmB,EAAAA,GAAgB,CAACJ,MAAO,CAAEN,MAAOA,GAAQP,SAAC,cAGjD,E,UC1NakB,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qNAWtBC,EAAcH,EAAAA,GAAAA,OAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,+DAM3BG,EAAQL,EAAAA,GAAAA,EAAQM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,8IAShBK,EAAWP,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uFAMrBO,EAAWT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,8GAOrBS,EAAaX,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,sKAUrBW,EAAWb,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,4NAWxBa,EAASf,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uDAKtBe,EAAmBjB,EAAAA,GAAAA,MAAYkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,swBCO5C,I,oGAAA,GA7DA,SAAgBiB,GAAyB,IAAtB9B,EAAO8B,EAAP9B,QAAS+B,EAAQD,EAARC,SAC1B,OACE9B,EAAAA,EAAAA,MAACS,EAAS,CAAAlB,SAAA,EACRS,EAAAA,EAAAA,MAACiB,EAAQ,CAAA1B,SAAA,EACPF,EAAAA,EAAAA,KAAC0B,EAAK,CAAAxB,SAAC,aACPF,EAAAA,EAAAA,KAACwB,EAAW,CAACkB,KAAK,SAAShC,QAASA,EAAQR,UAC1CF,EAAAA,EAAAA,KAACD,EAAa,UAGlBY,EAAAA,EAAAA,MAACmB,EAAQ,CAAA5B,SAAA,EACPF,EAAAA,EAAAA,KAACgC,EAAU,CAAA9B,SAAC,iBACZF,EAAAA,EAAAA,KAACkC,EAAQ,CAACQ,KAAK,SAAShC,QAAS,kBAAM+B,EAAS,UAAU,EAACvC,SAAC,iBAI9DS,EAAAA,EAAAA,MAACyB,EAAM,CAAAlC,SAAA,EACLF,EAAAA,EAAAA,KAACsC,EAAgB,CAACK,UAAU,OAAMzC,UAChCF,EAAAA,EAAAA,KAAA,UACE0C,KAAK,QACLE,KAAK,WACLC,MAAM,UACNnC,QAAS,kBAAM+B,EAAS,UAAU,EAACvC,SACpC,wBAIHF,EAAAA,EAAAA,KAACsC,EAAgB,CAACK,UAAU,OAAMzC,UAChCF,EAAAA,EAAAA,KAAA,UACE0C,KAAK,QACLE,KAAK,WACLC,MAAM,MACNnC,QAAS,kBAAM+B,EAAS,MAAM,EAACvC,SAChC,WAIHF,EAAAA,EAAAA,KAACsC,EAAgB,CAACK,UAAU,MAAKzC,UAC/BF,EAAAA,EAAAA,KAAA,UACE0C,KAAK,QACLE,KAAK,WACLC,MAAM,SACNnC,QAAS,kBAAM+B,EAAS,SAAS,EAACvC,SACnC,cAIHF,EAAAA,EAAAA,KAACsC,EAAgB,CAACK,UAAU,QAAOzC,UACjCF,EAAAA,EAAAA,KAAA,UACE0C,KAAK,QACLE,KAAK,WACLC,MAAM,OACNnC,QAAS,kBAAM+B,EAAS,OAAO,EAACvC,SACjC,gBAOX,ECtEakB,GAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+LAUtBuB,GAAYzB,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,sPAgBrBwB,GAAQ1B,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,iC,WCQ/B,GA7BwB,SAAHiB,GAAuB,IAAjBQ,EAASR,EAATQ,UACzBC,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAGhCI,GAAsBC,EAAAA,EAAAA,MAAfC,GAAuCL,EAAAA,EAAAA,GAAAG,EAAA,GAA5B,GAECG,GAAYC,EAAAA,GAAAA,MAAvBX,UAEFY,EAAa,WACjBN,GAAeD,EACjB,EAMA,OACE1C,EAAAA,EAAAA,MAACS,GAAS,CAAAlB,SAAA,EACRF,EAAAA,EAAAA,KAAC8C,GAAS,CAAA5C,SAAE8C,KACZrC,EAAAA,EAAAA,MAACoC,GAAK,CAAA7C,SAAA,EACJF,EAAAA,EAAAA,KAACO,EAAS,CAACE,MAlBF,UAkBiBC,QAASkD,IAClCP,IACCrD,EAAAA,EAAAA,KAAC6D,GAAO,CAACnD,QAASkD,EAAYnB,SAVX,SAAAqB,GACzBL,EAAY,CAAEC,QAAAA,EAASI,SAAAA,GACzB,SAaF,EChCa1C,GAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4OAYtBG,GAAQL,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JASjBwC,GAAW1C,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,uEAKrByC,GAAO3C,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,iE,sBC1BjB0C,GAAgB5C,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8IAS1B2C,GAAa7C,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wFAOtB4C,GAAQ9C,EAAAA,GAAAA,MAAYM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,mYAqBpB6C,GAAW/C,EAAAA,GAAAA,SAAeQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wWAoB1B8C,GAAWhD,EAAAA,GAAAA,GAASU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oIASpB+C,GAAOjD,EAAAA,GAAAA,EAAQY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,4HAcfe,IANcjB,EAAAA,GAAAA,OAAac,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,+DAMRF,EAAAA,GAAAA,MAAYgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,ouBA8C/BgD,GAAclD,EAAAA,GAAAA,IAAUkB,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,4E,sBC5FrC,GA9BmB,SAAHiB,GAAuD,IAAjDgC,EAAShC,EAATgC,UAAWC,EAAWjC,EAAXiC,YAAaC,EAAOlC,EAAPkC,QAASC,EAAQnC,EAARmC,SAC/CC,EAAgB,CACpBC,MAAOJ,GAAe,IAOxB,OACE9D,EAAAA,EAAAA,MAACsD,GAAa,CAAA/D,SAAA,EACZF,EAAAA,EAAAA,KAAC8E,GAAAA,EAAU,CACTC,GAAI,CACFC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,MAGZnF,EAAAA,EAAAA,KAACkE,GAAU,CAAAhE,SAAEsE,KACbxE,EAAAA,EAAAA,KAACoF,GAAAA,GAAM,CAACR,cAAeA,EAAeD,SAfrB,SAAAU,GACnBV,EAASU,EACX,EAaiEnF,UAC3DS,EAAAA,EAAAA,MAAC2E,GAAAA,GAAI,CAAApF,SAAA,EACHF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,OAAOE,KAAK,QAAQ4C,GAAIrB,GAAOsB,YAAY,WACvDzF,EAAAA,EAAAA,KAAC0F,GAAAA,EAAM,CAACC,SAAUjB,EAASkB,SAAU,mBAK/C,ECsCA,GA7DoB,SAAHpD,GAAoC,IAA9BqC,EAAKrC,EAALqC,MAAOgB,EAAKrD,EAALqD,MAAOC,EAAQtD,EAARsD,SACnC7C,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhC8C,EAAI5C,EAAA,GAAE6C,EAAO7C,EAAA,GAEpB8C,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAyC/C,EAAAA,EAAAA,GAAA6C,EAAA,GAA7B,GACnBG,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAyClD,EAAAA,EAAAA,GAAAgD,EAAA,GAA7B,GAEbG,EAAa,WACjBP,GAAQ,EACV,EAsBA,OACErF,EAAAA,EAAAA,MAACS,GAAS,CAAAlB,SAAA,EACRF,EAAAA,EAAAA,KAAC0B,GAAK,CAAAxB,SAAE2E,KAERlE,EAAAA,EAAAA,MAACoD,GAAQ,CAAA7D,SAAA,EACPF,EAAAA,EAAAA,KAAA,UAAQ0C,KAAK,SAAShC,QAAS,kBAAMsF,GAAQ,EAAK,EAAC9F,UACjDF,EAAAA,EAAAA,KAACgE,GAAI,CAAA9D,UACHF,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAO,yBAGtBN,EAAAA,EAAAA,KAAA,UACE0C,KAAK,SACLhC,QAAS,kBArBW,SAACmF,EAAOC,GAMlCQ,EAAa,CAAEE,KALF,CACXC,IAAKX,EACLD,MAAAA,IAIJ,CAcuBa,CAAoBb,EAAOC,EAAS,EAAC5F,UAEpDF,EAAAA,EAAAA,KAACgE,GAAI,CAAA9D,UACHF,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAO,wBAGtBN,EAAAA,EAAAA,KAAC2G,GAAAA,EAAS,CAACC,YAAab,EAAMQ,WAAYA,EAAWrG,UACnDF,EAAAA,EAAAA,KAAC6G,GAAU,CACTrC,UAAW,cACXE,QAAS,OACTC,SA1CkB,SAAA9B,GAC1B,IAAM2D,EAAO,CACXC,IAAKX,EACLD,MAAAA,EACAhB,MAAOhC,EAAMgC,OAGfsB,EAAa,CAAEK,KAAAA,IACfD,GACF,EAkCU9B,YAAaI,WAMzB,E,iCClEazD,GAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sIAQtBG,GAAQL,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,4JASjBuF,GAAczF,EAAAA,GAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,gMAUxBwF,GAAY1F,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,oLAQtByF,GAAa3F,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,4BAIvB0F,GAAU5F,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iCAGpB2F,GAAc7F,EAAAA,GAAAA,IAAUc,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oDAKxB4F,GAAc9F,EAAAA,GAAAA,EAAQgB,KAAAA,IAAAd,EAAAA,EAAAA,GAAA,2JAQtB+C,GAAOjD,EAAAA,GAAAA,IAAUkB,KAAAA,IAAAhB,EAAAA,EAAAA,GAAA,8IASjB6F,GAAS/F,EAAAA,GAAAA,IAAUgG,KAAAA,IAAA9F,EAAAA,EAAAA,GAAA,yFAMnBwC,GAAW1C,EAAAA,GAAAA,IAAUiG,KAAAA,IAAA/F,EAAAA,EAAAA,GAAA,uFAOrBgG,GAAalG,EAAAA,GAAAA,OAAamG,KAAAA,IAAAjG,EAAAA,EAAAA,GAAA,gFAM1BkG,GAAgBpG,EAAAA,GAAAA,IAAUqG,KAAAA,IAAAnG,EAAAA,EAAAA,GAAA,+DAK1BoG,GAAOtG,EAAAA,GAAAA,IAAUuG,KAAAA,IAAArG,EAAAA,EAAAA,GAAA,+DAKjBsG,GAASxG,EAAAA,GAAAA,IAAUyG,KAAAA,IAAAvG,EAAAA,EAAAA,GAAA,+DAMnBwG,IAAU1G,EAAAA,EAAAA,IAAO2G,GAAAA,EAAP3G,CAAY4G,KAAAA,IAAA1G,EAAAA,EAAAA,GAAA,kTAmBtB2G,IAAc7G,EAAAA,EAAAA,IAAO8G,GAAAA,EAAP9G,CAAgB+G,KAAAA,IAAA7G,EAAAA,EAAAA,GAAA,sL,kECxH9B8G,GAAWhH,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,gHCMrB+G,GAAW,SAAH9F,GAAkC,IAA5B+F,EAAW/F,EAAX+F,YAAaC,EAAOhG,EAAPgG,QACpCC,OAAQC,SAER,IAAAzF,GAAwCC,EAAAA,EAAAA,UAASsF,GAAoB,IAAGrF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjE0F,EAAYxF,EAAA,GAAEyF,EAAezF,EAAA,GAKpC,OAHA0F,EAAAA,EAAAA,YAAU,WACV,GAAG,CAACF,KAGA3I,EAAAA,EAAAA,KAAA8I,EAAAA,SAAA,CAAA5I,UACIF,EAAAA,EAAAA,KAAC+I,GAAAA,EAAoB,CAACC,YAAaC,GAAAA,EAAa/I,UAC5CF,EAAAA,EAAAA,KAACkJ,GAAAA,EAAU,CACPC,MAAO,CAAC,QAAS,OACjBtG,MAAO8F,EACPS,sBAAsB,GACtB3G,SAAU,SAAA4G,GACNT,EAAgBS,GAChBd,EAAYc,EAChB,EACAC,MAAO,CACHC,eAAgB,kBACZvJ,EAAAA,EAAAA,KAACqI,GAAQ,CAAC,aAAW,eAAcnI,UAC/BF,EAAAA,EAAAA,KAAA,OAAKK,KAAMmJ,EAAAA,EAAS,wBACb,GAGnBC,mBAAoB,SAAAC,GAAG,OAAIA,EAAIC,MAAM,EAAG,EAAE,EAC1CC,UAAW,CACPC,aAAc,CACV9E,GAAI,CACA+E,aAAc,MACdrJ,MAAO,GACPsJ,gBAAiB,UACjB,6CAA8C,CAC1C/E,SAAU,WACVgF,KAAM,MACNC,UAAW,oBAEf,oCAAqC,CACjCxJ,MAAO,UACPyJ,WAAY,UACZC,SAAU,OACVC,UAAW,SACXC,WAAY,IACZC,WAAY,UAEhB,qBAAsB,CAClBC,KAAM,IAGV,wBAAyB,CACrB9J,MAAO,GACP+J,OAAQ,OACRC,UAAW,QAEf,kCAAmC,CAC/BC,eAAgB,iBAGpB,wBAAyB,CACrBjK,MAAO,GACPkK,OAAQ,EACRC,QAAS,EACTT,SAAU,OACVC,UAAW,SACXC,WAAY,MACZC,WAAY,QAEhB,kCAAmC,CAC/BO,MAAO,OACPH,eAAgB,iBAEpB,+CAAgD,CAC5CI,QAAS,QAEb,mCAAoC,CAChCF,QAAS,IACTG,WAAY,WACZJ,OAAQ,IACRK,kBAAmB,MACnBC,kBAAmB,QACnBC,YAAa,IAGjB,oCAAqC,CACjCV,OAAQ,QAGZ,0BAA2B,CACvBK,MAAO,QACPL,OAAQ,QACRI,QAAS,OACTO,UAAW,aACXC,WAAY,IAGhB,0CAA2C,CACvCZ,OAAQ,OACRK,MAAO,OACPQ,SAAU,OACVC,SAAU,UAItB5B,IAAK,CACD3E,GAAI,CACAyF,OAAQ,OACRK,MAAO,OACPQ,SAAU,OACVC,SAAU,OACVnB,SAAU,OAEV,oCAAqC,CACjCJ,gBAAiB,UACjBtJ,MAAO,WAGX,uBAAwB,CACpBsJ,gBAAiB,IAErB,wBAAyB,CACrBwB,YAAa,EACbL,YAAa,GACbzK,MAAO,MAInB+K,UAAW,CACPC,QAAS,WACT1G,GAAI,CAEA,UAAW,CAAE+F,QAAS,QACtB,aAAc,CAAEY,OAAQ,gBAQxD,EC9CA,GArFiB,SAAHlJ,GASP,IARLqC,EAAKrC,EAALqC,MACA8G,EAAInJ,EAAJmJ,KACAC,EAAQpJ,EAARoJ,SACApH,EAAShC,EAATgC,UACAE,EAAOlC,EAAPkC,QACAC,EAAQnC,EAARmC,SACAkH,EAAQrJ,EAARqJ,SACAhG,EAAKrD,EAALqD,MAEA5C,GAAwCC,EAAAA,EAAAA,YAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C6I,EAAY3I,EAAA,GAAE4I,EAAe5I,EAAA,GAC9B6I,EAAgBvD,KAAMqD,GAAcpD,OAAO,iBAE3C9D,EAAgB,CACpBC,MAAOA,GAAS,GAChB8G,KAAMA,GAAQ,GACdC,SAAUA,GAAY,UACtBC,SAAAA,GAaF,OACElL,EAAAA,EAAAA,MAACsD,GAAa,CAAA/D,SAAA,EACZF,EAAAA,EAAAA,KAAC8E,GAAAA,EAAU,CACTC,GAAI,CACFC,SAAU,WACVC,IAAK,MACLC,MAAO,MACPC,OAAQ,MAGZnF,EAAAA,EAAAA,KAACkE,GAAU,CAAAhE,SAAEsE,KACbxE,EAAAA,EAAAA,KAACoF,GAAAA,GAAM,CAACR,cAAeA,EAAeD,SArBrB,SAAAU,GACnB,IAAMmB,GAAIyF,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACL5G,GAAM,IACTwG,SAAUG,EACVnG,MAAAA,IAGFlB,EAAS6B,EACX,EAaiEtG,UAC3DS,EAAAA,EAAAA,MAAC2E,GAAAA,GAAI,CAAApF,SAAA,EACHF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,OAAOE,KAAK,QAAQ4C,GAAIrB,GAAOsB,YAAY,WACvDzF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CACJC,GAAIpB,GACJ1B,KAAK,OACLE,KAAK,OACL6C,YAAY,iBAEd9E,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACEF,EAAAA,EAAAA,KAACqE,GAAQ,CAAAnE,SAAC,iBACVS,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACEF,EAAAA,EAAAA,KAACsC,GAAgB,CAACK,UAAU,OAAMzC,UAChCF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,QAAQE,KAAK,WAAWC,MAAM,WAE5C7C,EAAAA,EAAAA,KAACsC,GAAgB,CAACK,UAAU,MAAKzC,UAC/BF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,QAAQE,KAAK,WAAWC,MAAM,cAE5C7C,EAAAA,EAAAA,KAACsC,GAAgB,CAACK,UAAU,QAAOzC,UACjCF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,QAAQE,KAAK,WAAWC,MAAM,YAE5C7C,EAAAA,EAAAA,KAACsC,GAAgB,CAACK,UAAU,OAAMzC,UAChCF,EAAAA,EAAAA,KAACuF,GAAAA,GAAK,CAAC7C,KAAK,QAAQE,KAAK,WAAWC,MAAM,qBAIhDlC,EAAAA,EAAAA,MAAA,OAAAT,SAAA,EACEF,EAAAA,EAAAA,KAACqE,GAAQ,CAAAnE,SAAC,cACVS,EAAAA,EAAAA,MAAC4D,GAAW,CAAArE,SAAA,EACVF,EAAAA,EAAAA,KAACsE,GAAI,CAAApE,SACF4L,EACGE,EACAH,GAAQ,UAAA5K,OAAcwH,OAAQC,OAAO,cAE3C1I,EAAAA,EAAAA,KAACsI,GAAQ,CAACC,YAAawD,WAG3B/L,EAAAA,EAAAA,KAAC0F,GAAAA,EAAM,CAACC,SAAUjB,EAASkB,SAAU,mBAK/C,E,qBCoGA,GAtKa,SAAHpD,GAAqE,IAA/DqC,EAAKrC,EAALqC,MAAO8G,EAAInJ,EAAJmJ,KAAMC,EAAQpJ,EAARoJ,SAAUC,EAAQrJ,EAARqJ,SAAUK,EAAI1J,EAAJ0J,KAAMxI,EAAOlB,EAAPkB,QAASyI,EAAO3J,EAAP2J,QAC9DlJ,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDmJ,EAAajJ,EAAA,GAAEkJ,EAAgBlJ,EAAA,GAEtCmJ,GAAsBC,EAAAA,EAAAA,MAAfC,GAAuCpJ,EAAAA,EAAAA,GAAAkJ,EAAA,GAA5B,GAClBG,GAAqBC,EAAAA,EAAAA,MAAdC,GAAqCvJ,EAAAA,EAAAA,GAAAqJ,EAAA,GAA3B,GACjBG,GAAqBC,EAAAA,EAAAA,MAAdC,GAAqC1J,EAAAA,EAAAA,GAAAwJ,EAAA,GAA3B,GAET5J,GAAcW,EAAAA,GAAAA,MAAdX,UAEF+J,EAAiB,WACrBV,GAAiB,EACnB,EAoCMW,EAAsB,SAAApB,GAC1B,IAAIqB,EAAmB,KAEvB,OAAQrB,GACN,IAAK,MACHqB,EAAmB,UACnB,MACF,IAAK,SACHA,EAAmB,UACnB,MACF,IAAK,OACHA,EAAmB,UACnB,MAEF,QACEA,EAAmB,yBAGvB,OAAOA,CACT,EAEA,OACEtM,EAAAA,EAAAA,MAACS,GAAS,CACRL,MAAO,CAAEmM,WAAW,aAADjM,OAAe+L,EAAoBpB,KAAc1L,SAAA,EAEpEF,EAAAA,EAAAA,KAAC0B,GAAK,CAAAxB,SAAE2E,KACR7E,EAAAA,EAAAA,KAAC8G,GAAW,CAAA5G,UACVF,EAAAA,EAAAA,KAACmN,GAAAA,QAAY,CAACxB,KAAMA,EAAMyB,OAAQ,QAEpCzM,EAAAA,EAAAA,MAACoG,GAAS,CAAA7G,SAAA,EACRS,EAAAA,EAAAA,MAACqG,GAAU,CAAA9G,SAAA,EACTS,EAAAA,EAAAA,MAACsG,GAAO,CAAA/G,SAAA,EACNF,EAAAA,EAAAA,KAACmH,GAAW,CAAAjH,SAAC,cACbS,EAAAA,EAAAA,MAACuG,GAAW,CAAAhH,SAAA,EACVF,EAAAA,EAAAA,KAACoH,GAAM,CACLrG,MAAO,CAAEgJ,gBAAgB,GAAD9I,OAAK+L,EAAoBpB,QAEnD5L,EAAAA,EAAAA,KAACsE,GAAI,CAAApE,SAAE0L,WAGXjL,EAAAA,EAAAA,MAACsG,GAAO,CAAA/G,SAAA,EACNF,EAAAA,EAAAA,KAACmH,GAAW,CAAAjH,SAAC,cACbF,EAAAA,EAAAA,KAACsE,GAAI,CAAApE,SAAE2L,WAGXlL,EAAAA,EAAAA,MAACoD,GAAQ,CAAA7D,SAAA,EACPF,EAAAA,EAAAA,KAACqN,GAAAA,EAAQ,CAAAnN,UACPS,EAAAA,EAAAA,MAAC2M,GAAAA,EAAU,CACTC,KAAK,KACLxI,GAAI,CACF2G,OAAQ,OACR,UAAW,CACT3B,gBAAiB,eAEnB,UAAW,CACTyD,QAAS,sBAEXtN,SAAA,EAEFF,EAAAA,EAAAA,KAACyH,GAAa,CAAAvH,UACZF,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAO,uCAEpBN,EAAAA,EAAAA,KAAC+H,GAAO,CAAA7H,SACLiM,EAAQsB,KAAI,SAAAC,GACX,IAAMC,EAAgBD,EAAOjH,MAAQyF,EAAKrG,MAE1C,OACElF,EAAAA,EAAAA,MAACuH,GAAW,CAEVxH,QAAS,kBAvGF,SAAAkN,GACzB,IAAMpH,EAAO,CACXX,MAAOqG,EAAKrG,MACZY,IAAKyF,EAAKzF,IACVmH,SAAAA,GAKFpB,EAAY,CAAE9I,QAFEV,EAEOwD,KAAAA,GACzB,CA6FmCqH,CAAmBH,EAAOjH,IAAI,EAC7CqH,SAAUH,EACV5I,GAAI,CACFtE,MAAOkN,EAAgB,UAAY,YACnC3M,OAAQ2M,EAAgB,UAAY,aACpCzN,SAAA,CAEDwN,EAAO7I,OACR7E,EAAAA,EAAAA,KAACyH,GAAa,CAAAvH,UACZF,EAAAA,EAAAA,KAAA,OACEK,KAAMC,EAAAA,EAAO,wCAXZoN,EAAOjH,IAAM,IAgBxB,YAINzG,EAAAA,EAAAA,KAACuH,GAAU,CAAC7E,KAAK,SAAShC,QAAS,kBAAM2L,GAAiB,EAAK,EAACnM,UAC9DF,EAAAA,EAAAA,KAAC2H,GAAI,CAAAzH,UACHF,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAO,yBAGtBN,EAAAA,EAAAA,KAACuH,GAAU,CACT7E,KAAK,SACLhC,QAAS,kBAxGO,SAACgD,EAASwI,GAClC,IAAM1F,EAAO,CACXX,MAAOqG,EAAKrG,MACZY,IAAKyF,EAAKzF,KAGZqG,EAAW,CAAEpJ,QAAAA,EAAS8C,KAAAA,GACxB,CAiGyBuH,CAAkBrK,EAASwI,EAAK,EAAChM,UAEhDF,EAAAA,EAAAA,KAAC6H,GAAM,CAAA3H,UACLF,EAAAA,EAAAA,KAAA,OAAKK,KAAMC,EAAAA,EAAO,8BAM1BN,EAAAA,EAAAA,KAAC2G,GAAAA,EAAS,CAACC,YAAawF,EAAe7F,WAAYwG,EAAe7M,UAChEF,EAAAA,EAAAA,KAACgO,GAAQ,CACPxJ,UAAW,YACXE,QAAS,OACTG,MAAOqH,EAAKrH,MACZ8G,KAAMO,EAAKP,KACXC,SAAUM,EAAKN,SACfC,SAAUK,EAAKL,SACflH,SAtIkB,SAAA9B,GACxB,IAAM2D,GAAIyF,EAAAA,GAAAA,IAAAA,EAAAA,GAAAA,GAAA,GACLpJ,GAAK,IACRgD,MAAOqG,EAAKrG,MACZY,IAAKyF,EAAKzF,MAKZkG,EAAW,CAAEjJ,QAFGV,EAEMwD,KAAAA,IACtBuG,GACF,QAgIF,ECpMa3L,GAAYC,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,2WAqBtB0M,GAAS5M,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,QAEnB2M,GAAe7M,EAAAA,GAAAA,GAASM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,mMC6FrC,GAxGsB,SAAHiB,GAAqB,IAAf2J,EAAO3J,EAAP2J,QAMvBgC,GAAkBC,EAAAA,EAAAA,MAAXC,GAA+BjL,EAAAA,EAAAA,GAAA+K,EAAA,GAAxB,GACdG,GAAoBC,EAAAA,EAAAA,MAAbC,GAAmCpL,EAAAA,EAAAA,GAAAkL,EAAA,GAA1B,GAEhBrL,GAA0CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDmJ,EAAajJ,EAAA,GAAEkJ,EAAgBlJ,EAAA,GACtCsL,GAA8CvL,EAAAA,EAAAA,WAAS,GAAMwL,GAAAtL,EAAAA,EAAAA,GAAAqL,EAAA,GAAtDE,EAAeD,EAAA,GAAEE,EAAkBF,EAAA,GAC1CG,GAAgC3L,EAAAA,EAAAA,UAAS,IAAG4L,GAAA1L,EAAAA,EAAAA,GAAAyL,EAAA,GAArC/I,EAAQgJ,EAAA,GAAEC,EAAWD,EAAA,GAEpB9L,GAAcW,EAAAA,GAAAA,MAAdX,UASFgM,EAAmB,WACvBJ,GAAmB,EACrB,EAQM7B,EAAiB,WACrBV,GAAiB,EACnB,EASA,OACE1L,EAAAA,EAAAA,MAACS,GAAS,CAAAlB,SAAA,CACPiM,GACCA,EAAQsB,KAAI,SAAAwB,GACV,OACEtO,EAAAA,EAAAA,MAACsN,GAAM,CAAA/N,SAAA,EACLF,EAAAA,EAAAA,KAACkP,GAAW,CACVrK,MAAOoK,EAAOpK,MACdgB,MAAOoJ,EAAOpJ,MACdC,SAAUmJ,EAAOxI,OAEnBzG,EAAAA,EAAAA,KAACkO,GAAY,CAAAhO,SACV+O,EAAOE,MAAM1B,KAAI,SAAAvB,GAChB,OACElM,EAAAA,EAAAA,KAACoP,GAAI,CAEHvK,MAAOqH,EAAKrH,MACZ8G,KAAMO,EAAKP,KACXC,SAAUM,EAAKN,SACfC,SAAUK,EAAKL,SACfhG,MAAOqG,EAAKmD,MACZ3L,QAASuL,EAAOpJ,MAChBqG,KAAMA,EACNC,QAASA,GARJD,EAAKzF,IAWhB,OAEFzG,EAAAA,EAAAA,KAAC0F,GAAAA,EAAM,CACLhF,QAAS,kBA9CD,SAAAoF,GACpBiJ,EAAYjJ,GAEZuG,GAAiB,EACnB,CA0C6BiD,CAAcL,EAAOxI,IAAI,EACxCd,SAxEG,mBAyEHC,SAxEG,cA8CMqJ,EAAOxI,IA8BxB,KACFzG,EAAAA,EAAAA,KAAC0F,GAAAA,EAAM,CACLhF,QAAS,kBAAMkO,GAAmB,EAAK,EACvCjJ,SA9EY,qBA+EZC,SA9EY,aAiFd5F,EAAAA,EAAAA,KAAC2G,GAAAA,EAAS,CAACC,YAAa+H,EAAiBpI,WAAYyI,EAAiB9O,UACpEF,EAAAA,EAAAA,KAAC6G,GAAU,CACTrC,UAAW,aACXE,QAAS,MACTC,SArDa,SAAA9B,GAGnB2L,EAAU,CAAE9K,QAFIV,EAEKwD,KAAM3D,IAC3BmM,GACF,OAmDIhP,EAAAA,EAAAA,KAAC2G,GAAAA,EAAS,CAACC,YAAawF,EAAe7F,WAAYwG,EAAe7M,UAChEF,EAAAA,EAAAA,KAACgO,GAAQ,CACPxJ,UAAW,WACXE,QAAS,MACTmB,MAAOC,EACPnB,SAlFgB,SAAA9B,GAGtBwL,EAAQ,CAAE3K,QAFMV,EAEGwD,KAAM3D,IACzBkK,GACF,QAkFF,EClHa3L,GAAYC,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,0HAQtBgO,GAAUlO,EAAAA,GAAAA,IAAUI,KAAAA,IAAAF,EAAAA,EAAAA,GAAA,iPAcpBiO,GAAOnO,EAAAA,GAAAA,EAAQM,KAAAA,IAAAJ,EAAAA,EAAAA,GAAA,4ICN5B,GAfmB,WAEf,OACIvB,EAAAA,EAAAA,KAACoB,GAAS,CAAAlB,UACNS,EAAAA,EAAAA,MAAC4O,GAAO,CAAArP,SAAA,CAAC,iDAELF,EAAAA,EAAAA,KAACwP,GAAI,CAACnP,KAAK,0EAAyEH,SAAC,wBAA0B,0LAO/H,EC4CA,GApDoB,WAClB,IAAQ8C,GAAcW,EAAAA,GAAAA,MAAdX,UAC6CyM,GAA/BC,EAAAA,EAAAA,IAAqB1M,GAAnCwD,KAAAA,OAAI,IAAAiJ,EAAG,CAAC,EAACA,EACjBxM,GAA4CC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnD0M,EAAcxM,EAAA,GAAEyM,EAAiBzM,EAAA,GACxCsL,GAA0CvL,EAAAA,EAAAA,UAAS,MAAKwL,GAAAtL,EAAAA,EAAAA,GAAAqL,EAAA,GAAjDoB,EAAanB,EAAA,GAAEoB,EAAgBpB,EAAA,GACtCG,GAA0C3L,EAAAA,EAAAA,UAAS,MAAK4L,GAAA1L,EAAAA,EAAAA,GAAAyL,EAAA,GAAjDkB,EAAajB,EAAA,GAAEkB,EAAgBlB,EAAA,IAEtCjG,EAAAA,EAAAA,YAAU,WACJrC,EAAK4E,aACPwE,EAAkBpJ,EAAK4E,WAAW6E,SAClCH,EAAiBtJ,EAAK4E,WAAW8E,QACjCF,EAAiBxJ,EAAK4E,WAAW+E,QAErC,GAAG,CAAC3J,IAEJ,IAAMpF,EAAYC,EAAAA,GAAAA,IAAUC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,wcAMFwO,EAQEF,EAIAF,GAI5B,OACE3P,EAAAA,EAAAA,KAACoB,EAAS,CAAAlB,SACP8C,GACCrC,EAAAA,EAAAA,MAAAmI,EAAAA,SAAA,CAAA5I,SAAA,EACEF,EAAAA,EAAAA,KAACoQ,GAAe,CAACpN,UAAWwD,EAAK3B,SAEjC7E,EAAAA,EAAAA,KAACqQ,GAAa,CAACC,MAAO9J,EAAM2F,QAAS3F,EAAK2F,cAG5CnM,EAAAA,EAAAA,KAACuQ,GAAU,KAInB,C","sources":["components/buttons/buttons.jsx","components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import React from 'react';\nimport icon from '../iconSvg/icon.svg';\n\nimport {\n  ButtonTaskPro,\n  ButtonTaskProIcon,\n  ButtonTaskProIconSvg,\n  ButtonTaskProIconText,\n  ButtonTaskProIconThumb,\n  ButtonPlus,\n  ButtonPlusSvg,\n  ButtonPlusIcon,\n  ButtonCreate,\n  ButtonCreateIcon,\n  ButtonCreateSvg,\n  ButtonCreateThumb,\n  ButtonCreateText,\n  ButtonLogOut,\n  ButtonLogOutThumb,\n  ButtonLogOutIcon,\n  ButtonLogOutSvg,\n  ButtonLogOutText,\n  ButtonTaskProIconThumbViolet,\n  ButtonTaskProIconSvgViolet,\n  ButtonCreateTextViolet,\n  ButtonCreateThumbViolet,\n  ButtonCreateIconViolet,\n  ButtonCreateSvgViolet,\n  ButtonCreateViolet,\n  ButtonPlusViolet,\n  ButtonPlusIconViolet,\n  ButtonPlusSvgViolet,\n  ButtonLogOutSvgViolet,\n  ButtonLogOutIconViolet,\n  ButtonDelete,\n  ButtonDeleteIcon,\n  ButtonDeleteSvg,\n  ButtonUpDate,\n  ButtonUpDateIcon,\n  ButtonUpDateSvg,\n  ButtonClose,\n  ButtonCloseIcon,\n  ButtonFilter,\n  ButtonFilterIcon,\n  ButtonFilterSvg,\n  ButtonFilterText,\n  ButtonFilterThumb,\n} from './buttons.styled';\n\nexport const BtnLogOut = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIcon>\n          <ButtonLogOutSvg href={icon + '#icon-login'}></ButtonLogOutSvg>\n        </ButtonLogOutIcon>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnTaskPro = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumb>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvg\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvg>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumb>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreate = ({ children }) => {\n  return (\n    <ButtonCreate>\n      <ButtonCreateThumb>\n        <ButtonCreateIcon>\n          <ButtonCreateSvg href={icon + '#icon-plus-1'}></ButtonCreateSvg>\n        </ButtonCreateIcon>\n      </ButtonCreateThumb>\n\n      <ButtonCreateText>{children}</ButtonCreateText>\n    </ButtonCreate>\n  );\n};\n\nexport const BtnPlus = () => {\n  return (\n    <ButtonPlus>\n      <ButtonPlusIcon>\n        <ButtonPlusSvg href={icon + '#icon-plus-2'}></ButtonPlusSvg>\n      </ButtonPlusIcon>\n    </ButtonPlus>\n  );\n};\n\nexport const BtnTaskProViolet = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumbViolet>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvgViolet\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvgViolet>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumbViolet>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreateViolet = ({ children }) => {\n  return (\n    <ButtonCreateViolet>\n      <ButtonCreateThumbViolet>\n        <ButtonCreateIconViolet>\n          <ButtonCreateSvgViolet\n            href={icon + '#icon-plus-2'}\n          ></ButtonCreateSvgViolet>\n        </ButtonCreateIconViolet>\n      </ButtonCreateThumbViolet>\n\n      <ButtonCreateTextViolet>{children}</ButtonCreateTextViolet>\n    </ButtonCreateViolet>\n  );\n};\n\nexport const BtnPlusViolet = () => {\n  return (\n    <ButtonPlusViolet>\n      <ButtonPlusIconViolet>\n        <ButtonPlusSvgViolet href={icon + '#icon-plus-1'}></ButtonPlusSvgViolet>\n      </ButtonPlusIconViolet>\n    </ButtonPlusViolet>\n  );\n};\n\nexport const BtnLogOutViolet = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIconViolet>\n          <ButtonLogOutSvgViolet\n            href={icon + '#icon-login-3'}\n          ></ButtonLogOutSvgViolet>\n        </ButtonLogOutIconViolet>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnDelete = () => {\n  return (\n    <ButtonDelete>\n      <ButtonDeleteIcon>\n        <ButtonDeleteSvg href={icon + '#icon-trash-04'}></ButtonDeleteSvg>\n      </ButtonDeleteIcon>\n    </ButtonDelete>\n  );\n};\n\nexport const BtnUpDate = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-pencil-01'}></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnRight = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg\n          href={icon + '#icon-arrow-circle-broken-right'}\n        ></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnClose = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnCloseBlack = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close-2'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnFilter = ({ color, onClick }) => {\n  return (\n    <ButtonFilter onClick={onClick}>\n      <ButtonFilterThumb>\n        <ButtonFilterIcon style={{ stroke: `${color}` }}>\n          <ButtonFilterSvg href={icon + '#icon-filter'}></ButtonFilterSvg>\n        </ButtonFilterIcon>\n      </ButtonFilterThumb>\n      <ButtonFilterText style={{ color: color }}>Filters</ButtonFilterText>\n    </ButtonFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background: #fcfcfc;\n  box-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid #1616161a;\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  margin-right: 130px;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: rgba(22, 22, 22, 0.5);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: #8fa1d0;\n  }\n\n  &.red::before {\n    background-color: #e09cb5;\n  }\n\n  &.green::before {\n    background-color: #bedbb0;\n  }\n\n  &.gray::before {\n    background-color: #1616164d;\n  }\n\n  &:active::before {\n    border-color: #ffffff;\n  }\n`;\n","import { BtnCloseBlack } from 'components/buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n} from './Filters.styled';\n\nfunction Filters({ onClick, onChange }) {\n  return (\n    <Container>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset type=\"button\" onClick={() => onChange('default')}>\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox>\n        <ColorOptionLabel className=\"gray\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            onClick={() => onChange('without')}\n          >\n            Without priority\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"blue\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            onClick={() => onChange('low')}\n          >\n            Low\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"red\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            onClick={() => onChange('medium')}\n          >\n            Medium\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"green\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            onClick={() => onChange('high')}\n          >\n            High\n          </button>\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 48px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  box-sizing: border-box;\n  flex-direction: row;\n`;\nexport const BoardName = styled.h2`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: #f6f6f7;\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\n\nconst HeaderDashboard = ({ boardName }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters onClick={toggleMenu} onChange={boardFilterHandler} />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: #fff;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-bottom: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: #fcfcfc;\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: #161616;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: #16161680;\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: #bedbb0;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-right: 8px;\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: #8fa1d0;\n  }\n\n  &.red::before {\n    background-color: #e09cb5;\n  }\n\n  &.green::before {\n    background-color: #bedbb0;\n  }\n\n  &.gray::before {\n    background-color: #1616164d;\n  }\n\n  &:active::before {\n    border-color: #ffffff;\n  }\n`;\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer } from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\n\nconst ColumnForm = ({ formTitle, columnTitle, btnText, onSubmit }) => {\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import { Container, Title, IconsBox, Icon } from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <button type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </button>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/joy/Menu';\nimport MenuItem from '@mui/joy/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: #fff;\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: rgba(22, 22, 22, 0.7);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid rgba(22, 22, 22, 0.1);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: rgba(22, 22, 22, 0.5);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: #16161680;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n\nexport const MenuMUI = styled(Menu)`\n  max-height: 180px;\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: #e8e8e8;\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(22, 22, 22, 0.1);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  stroke: #16161680;\n\n  direction: ltr;\n\n  &:hover {\n    color: #bedbb0;\n    stroke: #bedbb0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n    width: 18px;\n    height: 18px;\n    // flex-shrink: 0;\n    // margin: 0;\n    stroke: #BEDBB0;\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\n\nexport const Calendar = ({ parentState, initial }) => {\n    dayjs().format();\n\n    const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n    useEffect(() => {\n    }, [dateDeadline]);\n\n    return (\n        <>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    views={['month', 'day']}\n                    value={dateDeadline}\n                    desktopModeMediaQuery=\"\"\n                    onChange={newValue => {\n                        setDateDeadline(newValue);\n                        parentState(newValue);\n                    }}\n                    slots={{\n                        openPickerIcon: () => (\n                            <IconDown aria-label=\"chevron-down\">\n                                <use href={sprite + '#icon-chevron-down'}></use>\n                            </IconDown>\n                        ),\n                    }}\n                    dayOfWeekFormatter={day => day.slice(0, 2)}\n                    slotProps={{\n                        desktopPaper: {\n                            sx: {\n                                borderRadius: '8px',\n                                color: '',\n                                backgroundColor: '#FFFFFF',\n                                '& .MuiPickersCalendarHeader-labelContainer': {\n                                    position: 'absolute',\n                                    left: '50%',\n                                    transform: 'translateX(-50%)',\n                                },\n                                '& .MuiPickersCalendarHeader-label': {\n                                    color: '#161616',\n                                    fontFamily: 'Poppins',\n                                    fontSize: '12px',\n                                    fontStyle: 'normal',\n                                    fontWeight: 500,\n                                    lineHeight: 'normal',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    fill: '',\n                                },\n\n                                '& .MuiTypography-root': {\n                                    color: '',\n                                    height: '24px',\n                                    marginTop: '14px',\n                                },\n                                '& .MuiDayCalendar-weekContainer': {\n                                    justifyContent: 'space-between',\n                                },\n\n                                '& .MuiButtonBase-root': {\n                                    color: '',\n                                    margin: 0,\n                                    padding: 0,\n                                    fontSize: '14px',\n                                    fontStyle: 'normal',\n                                    fontWeight: '400',\n                                    lineHeight: '18px',\n                                },\n                                '& .MuiPickersArrowSwitcher-root': {\n                                    width: '100%',\n                                    justifyContent: 'space-between',\n                                },\n                                '& .MuiPickersCalendarHeader-switchViewButton': {\n                                    display: 'none',\n                                },\n                                '& .MuiPickersCalendarHeader-root': {\n                                    padding: '0',\n                                    alignItems: 'baseline',\n                                    margin: '0',\n                                    borderBottomWidth: '2px',\n                                    borderBottomStyle: 'solid',\n                                    borderColor: '',\n                                },\n\n                                '& .MuiPickersArrowSwitcher-button': {\n                                    height: '21px',\n                                },\n\n                                '& .MuiDateCalendar-root': {\n                                    width: '233px',\n                                    height: '254px',\n                                    padding: '18px',\n                                    boxSizing: 'border-box',\n                                    background: '',\n                                },\n\n                                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                                    height: '24px',\n                                    width: '24px',\n                                    minWidth: '24px',\n                                    maxWidth: '24px',\n                                },\n                            },\n                        },\n                        day: {\n                            sx: {\n                                height: '24px',\n                                width: '24px',\n                                minWidth: '24px',\n                                maxWidth: '24px',\n                                fontSize: '14px',\n\n                                '&.MuiPickersDay-root.Mui-selected': {\n                                    backgroundColor: '#BEDBB0',\n                                    color: '#161616',\n                                },\n\n                                '&.Mui-selected:hover': {\n                                    backgroundColor: '',\n                                },\n                                '&.MuiPickersDay-today': {\n                                    borderWidth: 1,\n                                    borderColor: '',\n                                    color: '',\n                                },\n                            },\n                        },\n                        textField: {\n                            variant: 'outlined',\n                            sx: {\n\n                                '& input': { display: 'none' },\n                                '& fieldset': { border: 'none' },\n                            },\n                        },\n                    }}\n                />\n            </LocalizationProvider>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('dddd, MMMM DD');\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || 'without',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            as={Textarea}\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <div>\n              <ColorOptionLabel className=\"blue\">\n                <Field type=\"radio\" name=\"priority\" value=\"low\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"red\">\n                <Field type=\"radio\" name=\"priority\" value=\"medium\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"green\">\n                <Field type=\"radio\" name=\"priority\" value=\"high\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"gray\">\n                <Field type=\"radio\" name=\"priority\" value=\"without\" />\n              </ColorOptionLabel>\n            </div>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDate\n                  : deadline || `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar parentState={setSelectedDate} />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\nimport MenuButton from '@mui/joy/MenuButton';\nimport Dropdown from '@mui/joy/Dropdown';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(22, 22, 22, 0.30)';\n    }\n\n    return cardBordredColor;\n  };\n\n  return (\n    <Container\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          <Dropdown>\n            <MenuButton\n              size=\"sx\"\n              sx={{\n                border: 'none',\n                '&:hover': {\n                  backgroundColor: 'transparent',\n                },\n                '&:focus': {\n                  outline: '2px solid #000000',\n                },\n              }}\n            >\n              <TransferRight>\n                <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n              </TransferRight>\n              <MenuMUI>\n                {columns.map(columm => {\n                  const currentColumn = columm._id === card.owner;\n\n                  return (\n                    <MenuItemMUI\n                      key={columm._id + '1'}\n                      onClick={() => replaceCardHandler(columm._id)}\n                      disabled={currentColumn}\n                      sx={{\n                        color: currentColumn ? '#bedbb0' : '#16161680',\n                        stroke: currentColumn ? '#bedbb0' : '#16161680',\n                      }}\n                    >\n                      {columm.title}\n                      <TransferRight>\n                        <use\n                          href={icon + '#icon-arrow-circle-broken-right'}\n                        ></use>\n                      </TransferRight>\n                    </MenuItemMUI>\n                  );\n                })}\n              </MenuMUI>\n            </MenuButton>\n          </Dropdown>\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 87vh;\n  display: flex;\n  gap: 24px;\n  padding: 0 24px 16px 0;\n\n  overflow-x: auto;\n\n  ::-webkit-scrollbar {\n    background-color: #e8e8e8;\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(22, 22, 22, 0.1);\n    border-radius: 12px;\n  }\n`;\nexport const Column = styled.div``;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  margin-bottom: 14px;\n  max-height: 69vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport { Container, Column, GalleryCards } from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns &&\n        columns.map(column => {\n          return (\n            <Column key={column._id}>\n              <TitleColumn\n                title={column.title}\n                owner={column.owner}\n                columnId={column._id}\n              />\n              <GalleryCards>\n                {column.cards.map(card => {\n                  return (\n                    <Card\n                      key={card._id}\n                      title={card.title}\n                      text={card.text}\n                      priority={card.priority}\n                      deadline={card.deadline}\n                      owner={card.ovner}\n                      boardId={column.owner}\n                      card={card}\n                      columns={columns}\n                    />\n                  );\n                })}\n              </GalleryCards>\n              <BtnAdd\n                onClick={() => openModalCard(column._id)}\n                btnTitle={btnTitle}\n                btnColor={btnColor}\n              />\n            </Column>\n          );\n        })}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: rgba(22, 22, 22, 0.7);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: #bedbb0;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    height: 100vh;\n    max-height: 100vh;\n    padding: 64px 24px 0 24px;\n    margin-left: 260px;\n\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["BtnCloseBlack","_jsx","ButtonClose","children","ButtonCloseIcon","ButtonUpDateSvg","href","icon","BtnFilter","_ref3","color","onClick","_jsxs","ButtonFilter","ButtonFilterThumb","ButtonFilterIcon","style","stroke","concat","ButtonFilterSvg","ButtonFilterText","Container","styled","_templateObject","_taggedTemplateLiteral","CloseButton","_templateObject2","Title","_templateObject3","TitleBox","_templateObject4","ResetBox","_templateObject5","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","ColorOptionLabel","_templateObject9","_ref","onChange","type","className","name","value","BoardName","Thumb","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","Filters","priotity","IconsBox","Icon","FormContainer","ModalTitle","Input","Textarea","Subtitle","Text","DeadlineBox","formTitle","columnTitle","btnText","onSubmit","initialValues","title","ModalClose","sx","position","top","right","zIndex","Formik","values","Form","Field","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","closeModal","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","_templateObject10","_templateObject11","IconButton","_templateObject12","TransferRight","_templateObject13","Edit","_templateObject14","Delete","_templateObject15","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","newValue","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","borderRadius","backgroundColor","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","_objectSpread","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","closeCardModal","cardPriorityChecker","cardBordredColor","borderLeft","EllipsisText","length","Dropdown","MenuButton","size","outline","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","deleteCardHandler","CardForm","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","_useState3","_useState4","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","MainDashboard","board","StartBoard"],"sourceRoot":""}