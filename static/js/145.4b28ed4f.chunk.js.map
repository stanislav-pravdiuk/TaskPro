{"version":3,"file":"static/js/145.4b28ed4f.chunk.js","mappings":"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","sources":["components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/buttons/buttons.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 48px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  box-sizing: border-box;\n  flex-direction: row;\n`;\nexport const BoardName = styled.h2`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: #f6f6f7;\n`;\n","import React from 'react';\nimport icon from '../iconSvg/icon.svg';\n\nimport {\n  ButtonTaskPro,\n  ButtonTaskProIcon,\n  ButtonTaskProIconSvg,\n  ButtonTaskProIconText,\n  ButtonTaskProIconThumb,\n  ButtonPlus,\n  ButtonPlusSvg,\n  ButtonPlusIcon,\n  ButtonCreate,\n  ButtonCreateIcon,\n  ButtonCreateSvg,\n  ButtonCreateThumb,\n  ButtonCreateText,\n  ButtonLogOut,\n  ButtonLogOutThumb,\n  ButtonLogOutIcon,\n  ButtonLogOutSvg,\n  ButtonLogOutText,\n  ButtonTaskProIconThumbViolet,\n  ButtonTaskProIconSvgViolet,\n  ButtonCreateTextViolet,\n  ButtonCreateThumbViolet,\n  ButtonCreateIconViolet,\n  ButtonCreateSvgViolet,\n  ButtonCreateViolet,\n  ButtonPlusViolet,\n  ButtonPlusIconViolet,\n  ButtonPlusSvgViolet,\n  ButtonLogOutSvgViolet,\n  ButtonLogOutIconViolet,\n  ButtonDelete,\n  ButtonDeleteIcon,\n  ButtonDeleteSvg,\n  ButtonUpDate,\n  ButtonUpDateIcon,\n  ButtonUpDateSvg,\n  ButtonClose,\n  ButtonCloseIcon,\n  ButtonFilter,\n  ButtonFilterIcon,\n  ButtonFilterSvg,\n  ButtonFilterText,\n  ButtonFilterThumb,\n\n\n} from './buttons.styled';\n\n\nexport const BtnLogOut = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIcon>\n          <ButtonLogOutSvg\n            href={icon + '#icon-login'}\n          ></ButtonLogOutSvg>\n        </ButtonLogOutIcon>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\n\n\n\nexport const BtnTaskPro = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumb>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvg\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvg>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumb>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreate = ({children}) => {\n  return (\n    <ButtonCreate>\n      <ButtonCreateThumb>\n        <ButtonCreateIcon>\n          <ButtonCreateSvg href={icon + '#icon-plus-1'}></ButtonCreateSvg>\n        </ButtonCreateIcon>\n      </ButtonCreateThumb>\n\n      <ButtonCreateText>{children}</ButtonCreateText>\n    </ButtonCreate>\n  );\n};\n\nexport const BtnPlus = () => {\n  return (\n    <ButtonPlus>\n      <ButtonPlusIcon>\n        <ButtonPlusSvg href={icon + '#icon-plus-2'}></ButtonPlusSvg>\n      </ButtonPlusIcon>\n    </ButtonPlus>\n  );\n};\n\n\n\nexport const BtnTaskProViolet = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumbViolet>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvgViolet\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvgViolet>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumbViolet>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\n\nexport const BtnCreateViolet = ({children}) => {\n  return (\n    <ButtonCreateViolet>\n      <ButtonCreateThumbViolet>\n        <ButtonCreateIconViolet>\n          <ButtonCreateSvgViolet href={icon + '#icon-plus-2'}></ButtonCreateSvgViolet>\n        </ButtonCreateIconViolet>\n      </ButtonCreateThumbViolet>\n\n      <ButtonCreateTextViolet>{children}</ButtonCreateTextViolet>\n    </ButtonCreateViolet>\n  );\n};\n\nexport const BtnPlusViolet = () => {\n  return (\n    <ButtonPlusViolet>\n      <ButtonPlusIconViolet>\n        <ButtonPlusSvgViolet href={icon + '#icon-plus-1'}></ButtonPlusSvgViolet>\n      </ButtonPlusIconViolet>\n    </ButtonPlusViolet>\n  );\n};\n\n\nexport const BtnLogOutViolet = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIconViolet>\n          <ButtonLogOutSvgViolet\n            href={icon + '#icon-login-3'}\n          ></ButtonLogOutSvgViolet>\n        </ButtonLogOutIconViolet>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\n\n\nexport const BtnDelete = () => {\n  return (\n    <ButtonDelete>\n      <ButtonDeleteIcon>\n        <ButtonDeleteSvg href={icon + '#icon-trash-04'}></ButtonDeleteSvg>\n      </ButtonDeleteIcon>\n    </ButtonDelete>\n  );\n};\n\n\nexport const BtnUpDate = () => {\n  return (\n    <ButtonUpDate>\n      < ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-pencil-01'}></ButtonUpDateSvg>\n      </ ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnRight = () => {\n  return (\n    <ButtonUpDate>\n      < ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-arrow-circle-broken-right'}></ButtonUpDateSvg>\n      </ ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\n\nexport const BtnClose = () => {\n  return (\n    <ButtonClose>\n      < ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close'}></ButtonUpDateSvg>\n      </ ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnCloseBlack = () => {\n  return (\n    <ButtonClose>\n      < ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close-2'}></ButtonUpDateSvg>\n      </ ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\n\nexport const BtnFilter = ({ color }) => {\n  return (\n    <ButtonFilter>\n      <ButtonFilterThumb>\n        <ButtonFilterIcon\n          style={{ stroke: `${color}` }}>\n          <ButtonFilterSvg\n            href={icon + '#icon-filter'}>\n          </ButtonFilterSvg>\n        </ButtonFilterIcon>\n      </ButtonFilterThumb>\n      <ButtonFilterText style={{ color: color }}>\n        Filters\n      </ButtonFilterText>\n    </ButtonFilter>\n  );\n};","import { BoardName, Container } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\n\nconst HeaderDashboard = ({ boardName }) => {\n\n    const stroke = '#161616'\n\n    return (\n        <Container>\n            <BoardName>{boardName}</BoardName>\n            <BtnFilter color={stroke} />\n        </Container>\n    );\n};\n\nexport default HeaderDashboard;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: #fff;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-bottom: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: #fcfcfc;\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: #161616;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  margin-top: 14px;\n  border-radius: 8px;\n  border: 1px solid #bedbb0;\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: #16161680;\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: #bedbb0;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-right: 8px;\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: #8fa1d0;\n  }\n\n  &.red::before {\n    background-color: #e09cb5;\n  }\n\n  &.green::before {\n    background-color: #bedbb0;\n  }\n\n  &.gray::before {\n    background-color: #1616164d;\n  }\n\n  &:active::before {\n    border-color: #ffffff;\n  }\n`;\nexport const DeadlineBox = styled.div`\ndisplay:flex;\nalign-items:center;\nmargin-bottom: 40px;\n`\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer } from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\n\nconst ColumnForm = ({ formTitle, btnText, onSubmit }) => {\n  const initialValues = {\n    title: '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import { Container, Title, IconsBox, Icon } from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <button type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </button>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: #fff;\n  padding: 14px 20px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  color: rgba(22, 22, 22, 0.7);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid rgba(22, 22, 22, 0.1);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: rgba(22, 22, 22, 0.5);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  // background:tomato;\n  // margin-left: 112px;\n`;\nexport const TransferRight = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n  margin-right: 8px;\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n  margin-right: 8px;\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n    width: 18px;\n    height: 18px;\n    // flex-shrink: 0;\n    // margin: 0;\n    stroke: #BEDBB0;\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\n\nexport const Calendar = ({ parentState, initial }) => {\n    dayjs().format();\n\n    const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n    useEffect(() => {\n    }, [dateDeadline]);\n\n    return (\n        <>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    views={['month', 'day']}\n                    value={dateDeadline}\n                    desktopModeMediaQuery=\"\"\n                    onChange={newValue => {\n                        setDateDeadline(newValue);\n                        parentState(newValue);\n                    }}\n                    slots={{\n                        openPickerIcon: () => (\n                            <IconDown aria-label=\"chevron-down\">\n                                <use href={sprite + '#icon-chevron-down'}></use>\n                            </IconDown>\n                        ),\n                    }}\n                    dayOfWeekFormatter={day => day.slice(0, 2)}\n                    slotProps={{\n                        desktopPaper: {\n                            sx: {\n                                borderRadius: '8px',\n                                color: '',\n                                backgroundColor: '#FFFFFF',\n                                '& .MuiPickersCalendarHeader-labelContainer': {\n                                    position: 'absolute',\n                                    left: '50%',\n                                    transform: 'translateX(-50%)',\n                                },\n                                '& .MuiPickersCalendarHeader-label': {\n                                    color: '#161616',\n                                    fontFamily: 'Poppins',\n                                    fontSize: '12px',\n                                    fontStyle: 'normal',\n                                    fontWeight: 500,\n                                    lineHeight: 'normal',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    fill: '',\n                                },\n\n                                '& .MuiTypography-root': {\n                                    color: '',\n                                    height: '24px',\n                                    marginTop: '14px',\n                                },\n                                '& .MuiDayCalendar-weekContainer': {\n                                    justifyContent: 'space-between',\n                                },\n\n                                '& .MuiButtonBase-root': {\n                                    color: '',\n                                    margin: 0,\n                                    padding: 0,\n                                    fontSize: '14px',\n                                    fontStyle: 'normal',\n                                    fontWeight: '400',\n                                    lineHeight: '18px',\n                                },\n                                '& .MuiPickersArrowSwitcher-root': {\n                                    width: '100%',\n                                    justifyContent: 'space-between',\n                                },\n                                '& .MuiPickersCalendarHeader-switchViewButton': {\n                                    display: 'none',\n                                },\n                                '& .MuiPickersCalendarHeader-root': {\n                                    padding: '0',\n                                    alignItems: 'baseline',\n                                    margin: '0',\n                                    borderBottomWidth: '2px',\n                                    borderBottomStyle: 'solid',\n                                    borderColor: '',\n                                },\n\n                                '& .MuiPickersArrowSwitcher-button': {\n                                    height: '21px',\n                                },\n\n                                '& .MuiDateCalendar-root': {\n                                    width: '233px',\n                                    height: '254px',\n                                    padding: '18px',\n                                    boxSizing: 'border-box',\n                                    background: '',\n                                },\n\n                                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                                    height: '24px',\n                                    width: '24px',\n                                    minWidth: '24px',\n                                    maxWidth: '24px',\n                                },\n                            },\n                        },\n                        day: {\n                            sx: {\n                                height: '24px',\n                                width: '24px',\n                                minWidth: '24px',\n                                maxWidth: '24px',\n                                fontSize: '14px',\n\n                                '&.MuiPickersDay-root.Mui-selected': {\n                                    backgroundColor: '#BEDBB0',\n                                    color: '#161616',\n                                },\n\n                                '&.Mui-selected:hover': {\n                                    backgroundColor: '',\n                                },\n                                '&.MuiPickersDay-today': {\n                                    borderWidth: 1,\n                                    borderColor: '',\n                                    color: '',\n                                },\n                            },\n                        },\n                        textField: {\n                            variant: 'outlined',\n                            sx: {\n\n                                '& input': { display: 'none' },\n                                '& fieldset': { border: 'none' },\n                            },\n                        },\n                    }}\n                />\n            </LocalizationProvider>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  deadline,\n  formTitle,\n  btnText,\n  onSubmit,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('DD/MM/YYYY');\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || '',\n    deadline: deadline || '',\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            component={Textarea}\n            as={Input}\n            name=\"text\"\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <div>\n              <ColorOptionLabel className=\"blue\">\n                <Field type=\"radio\" name=\"priority\" value=\"low\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"red\">\n                <Field type=\"radio\" name=\"priority\" value=\"medium\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"green\">\n                <Field type=\"radio\" name=\"priority\" value=\"high\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"gray\">\n                <Field type=\"radio\" name=\"priority\" value=\"without\" />\n              </ColorOptionLabel>\n            </div>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDate\n                  : `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar\n                parentState={setSelectedDate}\n                initial={initialValues.deadline}\n              />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\n\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst Card = ({ title, text, priority, deadline, card, boardId }) => {\n  const colorPriority = '#8FA1D0';\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = () => {\n    const data = {\n      owner: '64ee0546879ad176a9c27e8f',\n      _id: '64ee056a879ad176a9c27ea4',\n      newOwner: '64eece1643dec532f6e1fb63',\n    };\n\n    const boardId = '64ee053b879ad176a9c27e83';\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  return (\n    <Container style={{ borderLeft: `4px solid ${colorPriority}` }}>\n      <Title>{title}</Title>\n      <Description>{text}</Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce style={{ backgroundColor: colorPriority }}></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          <button type=\"button\" onClick={replaceCardHandler}>\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </button>\n          <button type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </button>\n          <button\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </button>\n        </IconsBox>\n      </BottomBar>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 24px;\n  padding: 0 24px 16px 0;\n\n  overflow-x: auto;\n\n  ::-webkit-scrollbar {\n    background-color: #e8e8e8;\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(22, 22, 22, 0.1);\n    border-radius: 12px;\n  }\n`;\nexport const Column = styled.div``;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  margin-bottom: 14px;\n  max-height: 69vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport { Container, Column, GalleryCards } from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ board, columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns &&\n        columns.map(column => {\n          return (\n            <Column key={column._id}>\n              <TitleColumn\n                title={column.title}\n                owner={column.owner}\n                columnId={column._id}\n              />\n              <GalleryCards>\n                {column.cards.map(card => {\n                  return (\n                    <Card\n                      key={card._id}\n                      title={card.title}\n                      text={card.text}\n                      priority={card.priority}\n                      deadline={card.deadline}\n                      owner={card.ovner}\n                      boardId={column.owner}\n                      card={card}\n                    />\n                  );\n                })}\n              </GalleryCards>\n              <BtnAdd\n                onClick={() => openModalCard(column._id)}\n                btnTitle={btnTitle}\n                btnColor={btnColor}\n              />\n            </Column>\n          );\n        })}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: rgba(22, 22, 22, 0.7);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: #bedbb0;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    height: 100vh;\n    max-height: 100vh;\n    padding: 64px 24px 0 24px;\n    margin-left: 260px;\n\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","BoardName","_templateObject2","BtnFilter","_ref3","color","_jsxs","ButtonFilter","children","_jsx","ButtonFilterThumb","ButtonFilterIcon","style","stroke","concat","ButtonFilterSvg","href","icon","ButtonFilterText","_ref","boardName","Title","IconsBox","_templateObject3","Icon","_templateObject4","FormContainer","ModalTitle","Input","Textarea","Subtitle","_templateObject5","Text","_templateObject6","ColorOptionLabel","_templateObject7","_templateObject8","DeadlineBox","_templateObject9","formTitle","btnText","onSubmit","ModalClose","sx","position","top","right","zIndex","Formik","initialValues","title","values","Form","Field","type","name","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","_useState","useState","_useState2","_slicedToArray","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","closeModal","onClick","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","value","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","_templateObject10","_templateObject11","TransferRight","_templateObject12","Edit","_templateObject13","Delete","_templateObject14","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","onChange","newValue","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","borderRadius","backgroundColor","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","_objectSpread","component","className","card","boardId","colorPriority","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","useParams","closeCardModal","borderLeft","newOwner","deleteCardHandler","CardForm","Column","GalleryCards","board","columns","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","_useState3","_useState4","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","map","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","MainDashboard","StartBoard"],"sourceRoot":""}