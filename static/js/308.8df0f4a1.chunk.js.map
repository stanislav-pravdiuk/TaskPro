{"version":3,"file":"static/js/308.8df0f4a1.chunk.js","mappings":"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","sources":["components/loginForm/LoginSchema.jsx","components/loginForm/LoginForm.styled.jsx","components/loginForm/LoginForm.jsx"],"sourcesContent":["import * as Yup from 'yup';\n\nconst LoginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Invalid email')\n    .required('Email is required'),\n  password: Yup.string()\n    .min(6, 'Password must be at least 6 characters')\n    .required('Password is required'),\n});\n\n  export default LoginSchema","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 100%;\n  background: linear-gradient(\n    180deg,\n    var(--color-white) 0%,\n    var(--color-white) 25%,\n    var(--color-green) 92.19%\n  );\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\nconst FormContainer = styled.div`\n  text-align: center;\n  background: var(--bg-color-form);\n  border-radius: 8px;\n  padding: 40px;\n\n  @media screen and (max-width: 767px) {\n    padding: 24px;\n  }\n`;\nconst LinkMenu = styled.div`\n  display: flex;\n`;\n\nconst LoginLink = styled(Link)`\n  left: 160px;\n  top: 40px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--color-white);\n  text-decoration: none;\n`;\n\nconst RegisterLink = styled(Link)`\n  margin-right: 14px;\n  display: inline-block;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 27px;\n  letter-spacing: -0.02em;\n  color: var(--color-pale-white);\n  text-decoration: none;\n`;\n\n\nconst InputField = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  gap: 14px;\n\n  input {\n    width: 344px;\n    height: 49px;\n    left: 40px;\n    top: 107px;\n    color: var(--color-white);\n    background: var(--bg-color-form-input);\n    opacity: 0.4;\n    border: 1px solid var(--color-green);\n    padding-left: 18px;\n    box-shadow: 0px 4px 16px var(--color-shadow);\n    border-radius: 8px;\n    @media screen and (max-width: 767px) {\n      width: 287px;\n    }\n  }\n`;\n\nconst RegisterBtn = styled.button`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 21px;\n  text-align: center;\n  letter-spacing: -0.02em;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  background: var(--color-green);\n  border-radius: 8px;\n  color: var(--color-dark);\n  cursor: pointer;\n  &:hover {\n    opacity: 0.8;\n  }\n  @media screen and (max-width: 767px) {\n    width: 287px;\n  }\n  @media screen and (max-width: 375px) {\n    width: 100%;\n  }\n`;\nconst PasswordInput = styled.div `\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 14px;\n`\nconst Passwordsvg = styled.svg`\n  position: absolute;\n  right: 18px;\n  top: 19px;\n  cursor: pointer;\n  color: var(--color-white);\n  width: 16.5px;\n  height: 16px;\n  right: 15px;\n  opacity: 0.4;\n`;\n\nconst ErrorText = styled.div`\n  font-size: 15px;\n  color: var(--color-white);\n`;\n\nexport  {Container, FormContainer, LinkMenu, RegisterLink, LoginLink, InputField , RegisterBtn, ErrorText, PasswordInput, Passwordsvg  }\n","import { useDispatch } from \"react-redux\";\nimport React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport LoginSchema from \"./LoginSchema\";\nimport { Container, FormContainer, InputField, LinkMenu, LoginLink, RegisterBtn, RegisterLink, ErrorText, PasswordInput, Passwordsvg } from \"../loginForm/LoginForm.styled\";\nimport { logIn } from \"redux/auth/authOperations\";\nimport { toast } from \"react-hot-toast\";\nimport sprite from '../../components/iconSvg/icon.svg';\n\nconst LoginForm = () => {\n    const dispatch = useDispatch();\n    const [showPassword, setShowPassword] = useState(false);\n\n    const formik = useFormik({\n      initialValues: {\n        email: '',\n        password: '',\n      },\n      validationSchema: LoginSchema, \n      onSubmit: async values => {\n        try {\n          await dispatch(logIn(\n            { email: values.email, password: values.password }\n          )).unwrap();\n        toast.success('You have logged in successfully!!!')\n        formik.resetForm();\n        } catch (error) {\n          toast.error(\"Sorry, you entered invalid email or password\")\n        }\n      } \n\n      },);\n      const togglePasswordVisibility = () => {\n        setShowPassword((prevShowPassword) => !prevShowPassword);\n      };\n\n    return (   <Container> \n      <FormContainer> \n        <form onSubmit={formik.handleSubmit}>\n            <LinkMenu>\n              <RegisterLink to=\"/auth/register\" underline=\"none\"> Registration </RegisterLink>\n              <LoginLink to=\"/auth/login\" underline=\"none\"> Log In </LoginLink >\n            </LinkMenu>\n        <InputField>\n        <input\n          type=\"email\"\n          id=\"email\"\n          name=\"email\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.email}\n          placeholder=\"Enter your email\"\n/>\n      {formik.touched.email && formik.errors.email ? (\n      <ErrorText>{formik.errors.email}</ErrorText>) : null}\n          <PasswordInput><input\n           type={showPassword ? 'text' : 'password'}\n            id=\"password\"\n            name=\"password\"\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            value={formik.values.password}\n            placeholder=\"Create a password\"\n          />\n          <Passwordsvg  width=\"18px\" onClick={togglePasswordVisibility}> < use href={`${sprite}#icon-eye`}></use> </Passwordsvg > </PasswordInput>\n          {formik.touched.password && formik.errors.password ? (\n            <ErrorText>{formik.errors.password}</ErrorText>\n          ) : null}\n        </InputField>\n        <RegisterBtn type=\"submit\">Log In Now</RegisterBtn>\n      </form>\n      </FormContainer >\n      </Container>) \n};\n\nexport default LoginForm;"],"names":["Yup","shape","email","required","password","min","Container","styled","_templateObject","_taggedTemplateLiteral","FormContainer","_templateObject2","LinkMenu","_templateObject3","LoginLink","Link","_templateObject4","RegisterLink","_templateObject5","InputField","_templateObject6","RegisterBtn","_templateObject7","PasswordInput","_templateObject8","Passwordsvg","_templateObject9","ErrorText","_templateObject10","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","formik","useFormik","initialValues","validationSchema","LoginSchema","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","logIn","unwrap","toast","resetForm","t0","stop","_x","apply","arguments","_jsx","children","_jsxs","handleSubmit","to","underline","type","id","name","onChange","handleChange","onBlur","handleBlur","value","placeholder","touched","errors","width","onClick","prevShowPassword","href","concat","sprite"],"sourceRoot":""}