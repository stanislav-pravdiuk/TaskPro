{"version":3,"file":"static/js/333.95600685.chunk.js","mappings":"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","sources":["components/buttons/buttons.jsx","components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import React from 'react';\nimport icon from '../iconSvg/icon.svg';\n\nimport {\n  ButtonTaskPro,\n  ButtonTaskProIcon,\n  ButtonTaskProIconSvg,\n  ButtonTaskProIconText,\n  ButtonTaskProIconThumb,\n  ButtonPlus,\n  ButtonPlusSvg,\n  ButtonPlusIcon,\n  ButtonCreate,\n  ButtonCreateIcon,\n  ButtonCreateSvg,\n  ButtonCreateThumb,\n  ButtonCreateText,\n  ButtonLogOut,\n  ButtonLogOutThumb,\n  ButtonLogOutIcon,\n  ButtonLogOutSvg,\n  ButtonLogOutText,\n  ButtonTaskProIconThumbViolet,\n  ButtonTaskProIconSvgViolet,\n  ButtonCreateTextViolet,\n  ButtonCreateThumbViolet,\n  ButtonCreateIconViolet,\n  ButtonCreateSvgViolet,\n  ButtonCreateViolet,\n  ButtonPlusViolet,\n  ButtonPlusIconViolet,\n  ButtonPlusSvgViolet,\n  ButtonLogOutSvgViolet,\n  ButtonLogOutIconViolet,\n  ButtonDelete,\n  ButtonDeleteIcon,\n  ButtonDeleteSvg,\n  ButtonUpDate,\n  ButtonUpDateIcon,\n  ButtonUpDateSvg,\n  ButtonClose,\n  ButtonCloseIcon,\n  ButtonFilter,\n  ButtonFilterIcon,\n  ButtonFilterThumb,\n} from './buttons.styled';\n\nexport const BtnLogOut = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIcon>\n          <ButtonLogOutSvg href={icon + '#icon-login'}></ButtonLogOutSvg>\n        </ButtonLogOutIcon>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnTaskPro = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumb>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvg\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvg>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumb>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreate = ({ children }) => {\n  return (\n    <ButtonCreate>\n      <ButtonCreateThumb>\n        <ButtonCreateIcon>\n          <ButtonCreateSvg href={icon + '#icon-plus-1'}></ButtonCreateSvg>\n        </ButtonCreateIcon>\n      </ButtonCreateThumb>\n\n      <ButtonCreateText>{children}</ButtonCreateText>\n    </ButtonCreate>\n  );\n};\n\nexport const BtnPlus = () => {\n  return (\n    <ButtonPlus>\n      <ButtonPlusIcon>\n        <ButtonPlusSvg href={icon + '#icon-plus-2'}></ButtonPlusSvg>\n      </ButtonPlusIcon>\n    </ButtonPlus>\n  );\n};\n\nexport const BtnTaskProViolet = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumbViolet>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvgViolet\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvgViolet>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumbViolet>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreateViolet = ({ children }) => {\n  return (\n    <ButtonCreateViolet>\n      <ButtonCreateThumbViolet>\n        <ButtonCreateIconViolet>\n          <ButtonCreateSvgViolet\n            href={icon + '#icon-plus-2'}\n          ></ButtonCreateSvgViolet>\n        </ButtonCreateIconViolet>\n      </ButtonCreateThumbViolet>\n\n      <ButtonCreateTextViolet>{children}</ButtonCreateTextViolet>\n    </ButtonCreateViolet>\n  );\n};\n\nexport const BtnPlusViolet = () => {\n  return (\n    <ButtonPlusViolet>\n      <ButtonPlusIconViolet>\n        <ButtonPlusSvgViolet href={icon + '#icon-plus-1'}></ButtonPlusSvgViolet>\n      </ButtonPlusIconViolet>\n    </ButtonPlusViolet>\n  );\n};\n\nexport const BtnLogOutViolet = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIconViolet>\n          <ButtonLogOutSvgViolet\n            href={icon + '#icon-login-3'}\n          ></ButtonLogOutSvgViolet>\n        </ButtonLogOutIconViolet>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\nexport const BtnDelete = () => {\n  return (\n    <ButtonDelete>\n      <ButtonDeleteIcon>\n        <ButtonDeleteSvg href={icon + '#icon-trash-04'}></ButtonDeleteSvg>\n      </ButtonDeleteIcon>\n    </ButtonDelete>\n  );\n};\n\nexport const BtnUpDate = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-pencil-01'}></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnRight = () => {\n  return (\n    <ButtonUpDate>\n      <ButtonUpDateIcon>\n        <ButtonUpDateSvg\n          href={icon + '#icon-arrow-circle-broken-right'}\n        ></ButtonUpDateSvg>\n      </ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnClose = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnCloseBlack = () => {\n  return (\n    <ButtonClose>\n      <ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close-2'}></ButtonUpDateSvg>\n      </ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnFilter = ({ color, onClick }) => {\n  return (\n    <ButtonFilter onClick={onClick}>\n      <ButtonFilterThumb>\n        <ButtonFilterIcon style={{ stroke: `${color}` }}>\n          <use href={icon + '#icon-filter'}></use>\n        </ButtonFilterIcon>\n      </ButtonFilterThumb>\n      Filters\n    </ButtonFilter>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background: var(--color-cream);\n  box-shadow: 0px 4px 16px 0px var(--color-opacity-black);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid var(--color-dark);\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  margin-right: 130px;\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: var(--color-blue);\n  }\n\n  &.red::before {\n    background-color: var(--color-pink);\n  }\n\n  &.green::before {\n    background-color: var(--color-green);\n  }\n\n  &.gray::before {\n    background-color: var(--color-dark);\n  }\n\n  &:active::before {\n    border-color: var(--color-white);\n  }\n`;\n","import { BtnCloseBlack } from 'components/buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n} from './Filters.styled';\n\nfunction Filters({ onClick, onChange }) {\n  return (\n    <Container>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset type=\"button\" onClick={() => onChange('default')}>\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox>\n        <ColorOptionLabel className=\"gray\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            onClick={() => onChange('without')}\n          >\n            Without priority\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"blue\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            onClick={() => onChange('low')}\n          >\n            Low\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"red\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            onClick={() => onChange('medium')}\n          >\n            Medium\n          </button>\n        </ColorOptionLabel>\n        <ColorOptionLabel className=\"green\">\n          <button\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            onClick={() => onChange('high')}\n          >\n            High\n          </button>\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 20px 0 20px;\n  box-sizing: border-box;\n  flex-direction: row;\n  margin-bottom: 39px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 26px;\n    padding: 26px 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 10px;\n    padding: 10px 24px 0 24px;\n  }\n`;\nexport const BoardName = styled.h2`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: var(--bg-color-light);\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\n\nconst HeaderDashboard = ({ boardName }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters onClick={toggleMenu} onChange={boardFilterHandler} />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nexport const IconsButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: var(--color-cream);\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: var(--color-dark);\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid var(--border-color);\n  background-color: var(--color-cream);\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid var(--color-green);\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: var(--color-dark);\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: var(--color-green);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-right: 8px;\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: var(--color-blue);\n  }\n\n  &.red::before {\n    background-color: var(--color-pink);\n  }\n\n  &.green::before {\n    background-color: var(--color-green);\n  }\n\n  &.gray::before {\n    background-color: var( --color-light);\n  }\n\n  &:active::before {\n    border-color: var(--color-white);\n  }\n`;\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer } from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport Button from '@mui/material/Button';\n\nconst ColumnForm = ({\n  formTitle,\n  columnTitle,\n  btnText,\n  onSubmit,\n  closeModal,\n}) => {\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <Button\n        onClick={closeModal}\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import {\n  Container,\n  Title,\n  IconsBox,\n  IconsButton,\n  Icon,\n} from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <IconsButton type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </IconsButton>\n        <IconsButton\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </IconsButton>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n            closeModal={closeModal}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: var(--color-white);\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: var(--color-text-card);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid var(--color-transparent-black);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: var(--color-text-dark);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: var(--color-dark);\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: var(--color-dark);\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  margin-left: auto;\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: var(--color-text-dark);\n`;\n\nexport const MenuMUI = styled(Menu)`\n  /* max-height: 180px; */\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  stroke: var(--color-dark);\n\n  direction: ltr;\n\n  &:hover {\n    color: var(--color-green);\n    stroke: var(--color-green);\n  }\n`;\n\nexport const IconDeadline = styled.svg`\nwidth: 16px;\nheight: 16px;\nstroke: var(--color-green);\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n  width: 18px;\n  height: 18px;\n  // flex-shrink: 0;\n  // margin: 0;\n  stroke: var(--color-green);\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\n\nexport const Calendar = ({ parentState, initial }) => {\n    dayjs().format();\n\n    const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n    useEffect(() => {\n    }, [dateDeadline]);\n\n    return (\n        <>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    views={['month', 'day']}\n                    value={dateDeadline}\n                    desktopModeMediaQuery=\"\"\n                    onChange={newValue => {\n                        setDateDeadline(newValue);\n                        parentState(newValue);\n                    }}\n                    slots={{\n                        openPickerIcon: () => (\n                            <IconDown aria-label=\"chevron-down\">\n                                <use href={sprite + '#icon-chevron-down'}></use>\n                            </IconDown>\n                        ),\n                    }}\n                    dayOfWeekFormatter={day => day.slice(0, 2)}\n                    slotProps={{\n                        desktopPaper: {\n                            sx: {\n                                borderRadius: '8px',\n                                color: '',\n                                backgroundColor: '#FFFFFF',\n                                '& .MuiPickersCalendarHeader-labelContainer': {\n                                    position: 'absolute',\n                                    left: '50%',\n                                    transform: 'translateX(-50%)',\n                                },\n                                '& .MuiPickersCalendarHeader-label': {\n                                    color: '#161616',\n                                    fontFamily: 'Poppins',\n                                    fontSize: '12px',\n                                    fontStyle: 'normal',\n                                    fontWeight: 500,\n                                    lineHeight: 'normal',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    fill: '',\n                                },\n\n                                '& .MuiTypography-root': {\n                                    color: '',\n                                    height: '24px',\n                                    marginTop: '14px',\n                                },\n                                '& .MuiDayCalendar-weekContainer': {\n                                    justifyContent: 'space-between',\n                                },\n\n                                '& .MuiButtonBase-root': {\n                                    color: '',\n                                    margin: 0,\n                                    padding: 0,\n                                    fontSize: '14px',\n                                    fontStyle: 'normal',\n                                    fontWeight: '400',\n                                    lineHeight: '18px',\n                                },\n                                '& .MuiPickersArrowSwitcher-root': {\n                                    width: '100%',\n                                    justifyContent: 'space-between',\n                                },\n                                '& .MuiPickersCalendarHeader-switchViewButton': {\n                                    display: 'none',\n                                },\n                                '& .MuiPickersCalendarHeader-root': {\n                                    padding: '0',\n                                    alignItems: 'baseline',\n                                    margin: '0',\n                                    borderBottomWidth: '2px',\n                                    borderBottomStyle: 'solid',\n                                    borderColor: '',\n                                },\n\n                                '& .MuiPickersArrowSwitcher-button': {\n                                    height: '21px',\n                                },\n\n                                '& .MuiDateCalendar-root': {\n                                    width: '233px',\n                                    height: '254px',\n                                    padding: '18px',\n                                    boxSizing: 'border-box',\n                                    background: '',\n                                },\n\n                                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                                    height: '24px',\n                                    width: '24px',\n                                    minWidth: '24px',\n                                    maxWidth: '24px',\n                                },\n                            },\n                        },\n                        day: {\n                            sx: {\n                                height: '24px',\n                                width: '24px',\n                                minWidth: '24px',\n                                maxWidth: '24px',\n                                fontSize: '14px',\n\n                                '&.MuiPickersDay-root.Mui-selected': {\n                                    backgroundColor: '#BEDBB0',\n                                    color: '#161616',\n                                },\n\n                                '&.Mui-selected:hover': {\n                                    backgroundColor: '',\n                                },\n                                '&.MuiPickersDay-today': {\n                                    borderWidth: 1,\n                                    borderColor: '',\n                                    color: '',\n                                },\n                            },\n                        },\n                        textField: {\n                            variant: 'outlined',\n                            sx: {\n\n                                '& input': { display: 'none' },\n                                '& fieldset': { border: 'none' },\n                            },\n                        },\n                    }}\n                />\n            </LocalizationProvider>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport Button from '@mui/material/Button';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n  closeModal,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('MM/DD/YYYY');\n  const formattedDateLong = dayjs(selectedDate).format('dddd, MMMM DD');\n  const deadLineDateLong = dayjs(deadline).format('dddd, MMMM DD');\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || 'without',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <Button\n        onClick={closeModal}\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            as={Textarea}\n            type=\"text\"\n            name=\"text\"\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <div>\n              <ColorOptionLabel className=\"blue\">\n                <Field type=\"radio\" name=\"priority\" value=\"low\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"red\">\n                <Field type=\"radio\" name=\"priority\" value=\"medium\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"green\">\n                <Field type=\"radio\" name=\"priority\" value=\"high\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"gray\">\n                <Field type=\"radio\" name=\"priority\" value=\"without\" />\n              </ColorOptionLabel>\n            </div>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDateLong\n                  : deadLineDateLong || `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar parentState={setSelectedDate} />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n  IconDeadline,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(22, 22, 22, 0.30)';\n    }\n\n    return cardBordredColor;\n  };\n\nconst isDeadlineToday = (deadline) => {\n  const today = new Date();\n  const deadlineDate = new Date(deadline);\n  return (\n    today.getFullYear() === deadlineDate.getFullYear() &&\n    today.getMonth() === deadlineDate.getMonth() &&\n    today.getDate() === deadlineDate.getDate()\n  );\n};\n\n  return (\n    <Container\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          {isDeadlineToday(deadline) && (\n            <IconDeadline>\n              <use href={icon + '#icon-bell-01'}></use>\n            </IconDeadline>\n          )}\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            size=\"small\"\n            sx={{\n              padding: 0,\n              maxWidth: '16px',\n              maxHeight: '16px',\n              minWidth: '16px',\n              minHeight: '16px',\n              border: 'none',\n              '&:hover': {\n                backgroundColor: 'transparent',\n              },\n              '&:focus': {\n                outline: '2px solid #000000',\n              },\n            }}\n          >\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </Button>\n          <MenuMUI\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {columns.map(columm => {\n              const currentColumn = columm._id === card.owner;\n\n              return (\n                <MenuItemMUI\n                  key={columm._id + '1'}\n                  onClick={() => replaceCardHandler(columm._id)}\n                  disabled={currentColumn}\n                  sx={{\n                    color: currentColumn ? '#bedbb0' : '#16161680',\n                    stroke: currentColumn ? '#bedbb0' : '#16161680',\n                  }}\n                >\n                  {columm.title}\n                  <TransferRight>\n                    <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n                  </TransferRight>\n                </MenuItemMUI>\n              );\n            })}\n          </MenuMUI>\n\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 82vh;\n  display: flex;\n  padding: 0 20px 0 20px;\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 24px 0 24px;\n    max-height: 87vh;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  max-height: 100%;\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-right: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-right: 34px;\n  }\n`;\n\nexport const ColumnsListItem = styled.li`\n  height: 100%;\n`;\n\nexport const Column = styled.div`\n  display: flex;\n  height: 100%;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  max-height: 63vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media screen and (min-width: 1440px) {\n    max-height: 69vh;\n  }\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.ovner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <BtnAdd\n                    onClick={() => openModalCard(column._id)}\n                    btnTitle={btnTitle}\n                    btnColor={btnColor}\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n          closeModal={closeColumnModal}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: var(--color-text-card);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: var(--color-green);\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    padding: 0;\n    height: 100vh;\n    max-height: 100%;\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n      padding: 0 0 0 260px;\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["BtnCloseBlack","_jsx","ButtonClose","children","ButtonCloseIcon","ButtonUpDateSvg","href","icon","BtnFilter","_ref3","color","onClick","_jsxs","ButtonFilter","ButtonFilterThumb","ButtonFilterIcon","style","stroke","concat","Container","styled","_templateObject","_taggedTemplateLiteral","CloseButton","_templateObject2","Title","_templateObject3","TitleBox","_templateObject4","ResetBox","_templateObject5","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","ColorOptionLabel","_templateObject9","_ref","onChange","type","className","name","value","BoardName","Thumb","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","Filters","priotity","IconsBox","IconsButton","Icon","FormContainer","ModalTitle","Input","Textarea","Subtitle","Text","DeadlineBox","formTitle","columnTitle","btnText","onSubmit","closeModal","initialValues","title","Button","sx","position","top","right","zIndex","Formik","values","Form","Field","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","_templateObject10","_templateObject11","IconButton","_templateObject12","TransferRight","_templateObject13","Edit","_templateObject14","Delete","_templateObject15","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDeadline","_templateObject18","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","newValue","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","borderRadius","backgroundColor","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","formattedDateLong","deadLineDateLong","_objectSpread","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","_useState3","_useState4","anchorEl","setAnchorEl","Boolean","closeCardModal","cardPriorityChecker","cardBordredColor","borderLeft","EllipsisText","length","today","Date","deadlineDate","getFullYear","getMonth","getDate","isDeadlineToday","id","undefined","event","currentTarget","size","maxHeight","minHeight","outline","onClose","MenuListProps","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","deleteCardHandler","CardForm","ColumnsList","ColumnsListItem","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","MainDashboard","board","StartBoard"],"sourceRoot":""}