{"version":3,"file":"static/js/7.14703423.chunk.js","mappings":"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","sources":["components/buttons/buttons.jsx","components/filters/Filters.styled.jsx","components/filters/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/titleColumn/TitleColumn.styled.jsx","components/cardForm/CardForm.styled.jsx","components/columnCard/ColumnCard.jsx","components/ScreensPage/titleColumn/TitleColumn.jsx","components/ScreensPage/card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/cardForm/CardForm.jsx","components/ScreensPage/card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/startBoard/StartBoard.styled.jsx","components/ScreensPage/startBoard/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx","screens/homePage/HomePage.jsx"],"sourcesContent":["import React from 'react';\nimport icon from '../iconSvg/icon.svg';\n\nimport {\n  ButtonTaskPro,\n  ButtonTaskProIcon,\n  ButtonTaskProIconSvg,\n  ButtonTaskProIconText,\n  ButtonTaskProIconThumb,\n  ButtonPlus,\n  ButtonPlusSvg,\n  ButtonPlusIcon,\n  ButtonCreate,\n  ButtonCreateIcon,\n  ButtonCreateSvg,\n  ButtonCreateThumb,\n  ButtonCreateText,\n  ButtonLogOut,\n  ButtonLogOutThumb,\n  ButtonLogOutIcon,\n  ButtonLogOutSvg,\n  ButtonLogOutText,\n  ButtonTaskProIconThumbViolet,\n  ButtonTaskProIconSvgViolet,\n  ButtonCreateTextViolet,\n  ButtonCreateThumbViolet,\n  ButtonCreateIconViolet,\n  ButtonCreateSvgViolet,\n  ButtonCreateViolet,\n  ButtonPlusViolet,\n  ButtonPlusIconViolet,\n  ButtonPlusSvgViolet,\n  ButtonLogOutSvgViolet,\n  ButtonLogOutIconViolet,\n  ButtonDelete,\n  ButtonDeleteIcon,\n  ButtonDeleteSvg,\n  ButtonUpDate,\n  ButtonUpDateIcon,\n  ButtonUpDateSvg,\n  ButtonClose,\n  ButtonCloseIcon,\n  ButtonFilter,\n  ButtonFilterIcon,\n  ButtonFilterSvg,\n  ButtonFilterText,\n  ButtonFilterThumb,\n\n\n} from './buttons.styled';\n\n\nexport const BtnLogOut = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIcon>\n          <ButtonLogOutSvg\n            href={icon + '#icon-login'}\n          ></ButtonLogOutSvg>\n        </ButtonLogOutIcon>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\n\n\n\nexport const BtnTaskPro = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumb>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvg\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvg>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumb>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\nexport const BtnCreate = ({children}) => {\n  return (\n    <ButtonCreate>\n      <ButtonCreateThumb>\n        <ButtonCreateIcon>\n          <ButtonCreateSvg href={icon + '#icon-plus-1'}></ButtonCreateSvg>\n        </ButtonCreateIcon>\n      </ButtonCreateThumb>\n\n      <ButtonCreateText>{children}</ButtonCreateText>\n    </ButtonCreate>\n  );\n};\n\nexport const BtnPlus = () => {\n  return (\n    <ButtonPlus>\n      <ButtonPlusIcon>\n        <ButtonPlusSvg href={icon + '#icon-plus-2'}></ButtonPlusSvg>\n      </ButtonPlusIcon>\n    </ButtonPlus>\n  );\n};\n\n\n\nexport const BtnTaskProViolet = () => {\n  return (\n    <ButtonTaskPro>\n      <ButtonTaskProIconThumbViolet>\n        <ButtonTaskProIcon>\n          <ButtonTaskProIconSvgViolet\n            href={icon + '#icon-Vector-3'}\n          ></ButtonTaskProIconSvgViolet>\n        </ButtonTaskProIcon>\n      </ButtonTaskProIconThumbViolet>\n      <ButtonTaskProIconText>Task Pro</ButtonTaskProIconText>\n    </ButtonTaskPro>\n  );\n};\n\n\nexport const BtnCreateViolet = ({children}) => {\n  return (\n    <ButtonCreateViolet>\n      <ButtonCreateThumbViolet>\n        <ButtonCreateIconViolet>\n          <ButtonCreateSvgViolet href={icon + '#icon-plus-2'}></ButtonCreateSvgViolet>\n        </ButtonCreateIconViolet>\n      </ButtonCreateThumbViolet>\n\n      <ButtonCreateTextViolet>{children}</ButtonCreateTextViolet>\n    </ButtonCreateViolet>\n  );\n};\n\nexport const BtnPlusViolet = () => {\n  return (\n    <ButtonPlusViolet>\n      <ButtonPlusIconViolet>\n        <ButtonPlusSvgViolet href={icon + '#icon-plus-1'}></ButtonPlusSvgViolet>\n      </ButtonPlusIconViolet>\n    </ButtonPlusViolet>\n  );\n};\n\n\nexport const BtnLogOutViolet = () => {\n  return (\n    <ButtonLogOut>\n      <ButtonLogOutThumb>\n        <ButtonLogOutIconViolet>\n          <ButtonLogOutSvgViolet\n            href={icon + '#icon-login-3'}\n          ></ButtonLogOutSvgViolet>\n        </ButtonLogOutIconViolet>\n      </ButtonLogOutThumb>\n      <ButtonLogOutText>Log out </ButtonLogOutText>\n    </ButtonLogOut>\n  );\n};\n\n\n\nexport const BtnDelete = () => {\n  return (\n    <ButtonDelete>\n      <ButtonDeleteIcon>\n        <ButtonDeleteSvg href={icon + '#icon-trash-04'}></ButtonDeleteSvg>\n      </ButtonDeleteIcon>\n    </ButtonDelete>\n  );\n};\n\n\nexport const BtnUpDate = () => {\n  return (\n    <ButtonUpDate>\n      < ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-pencil-01'}></ButtonUpDateSvg>\n      </ ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\nexport const BtnRight = () => {\n  return (\n    <ButtonUpDate>\n      < ButtonUpDateIcon>\n        <ButtonUpDateSvg href={icon + '#icon-arrow-circle-broken-right'}></ButtonUpDateSvg>\n      </ ButtonUpDateIcon>\n    </ButtonUpDate>\n  );\n};\n\n\nexport const BtnClose = () => {\n  return (\n    <ButtonClose>\n      < ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close'}></ButtonUpDateSvg>\n      </ ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\nexport const BtnCloseBlack = () => {\n  return (\n    <ButtonClose>\n      < ButtonCloseIcon>\n        <ButtonUpDateSvg href={icon + '#icon-x-close-2'}></ButtonUpDateSvg>\n      </ ButtonCloseIcon>\n    </ButtonClose>\n  );\n};\n\n\nexport const BtnFilter = ({ color }) => {\n  return (\n    <ButtonFilter>\n      <ButtonFilterThumb>\n        <ButtonFilterIcon\n          style={{ stroke: `${color}` }}>\n          <ButtonFilterSvg\n            href={icon + '#icon-filter'}>\n          </ButtonFilterSvg>\n        </ButtonFilterIcon>\n      </ButtonFilterThumb>\n      <ButtonFilterText style={{ color: color }}>\n        Filters\n      </ButtonFilterText>\n    </ButtonFilter>\n  );\n};","import styled from 'styled-components';\n\nexport const Container = styled.div`\nposition: absolute;\nborder-radius: 8px;\nbackground: #FCFCFC;\nbox-shadow: 0px 4px 16px 0px rgba(22, 22, 22, 0.05);\npadding: 24px;\n`;\n\nexport const Title = styled.p`\ncolor: #161616;\nfont-family: Poppins;\nfont-size: 18px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\n`;\n\nexport const TitleBox = styled.div`\ndisplay:flex;\njustify-content: space-between;\nmargin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\ndisplay: flex;\nborder-top: 1px solid #1616161A;\nmargin-bottom: 14px;\npadding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\nmargin-right: 130px;\ncolor: #161616;\nfont-family: Poppins;\nfont-size: 14px;\nfont-style: normal;\nfont-weight: 500;\nline-height: normal;\n`;\n\nexport const BtnReset = styled.button`\ncolor: rgba(22, 22, 22, 0.50);\nfont-family: Poppins;\nfont-size: 12px;\nfont-style: normal;\nfont-weight: 400;\nline-height: normal;\nletter-spacing: -0.24px;\ntext-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\ndisplay: flex;\nflex-direction: column;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  \n      &:not(:last-child) {\n    margin-bottom: 12px;\n    }\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: #8fa1d0;\n  }\n\n  &.red::before {\n    background-color: #e09cb5;\n  }\n\n  &.green::before {\n    background-color: #bedbb0;\n  }\n\n  &.gray::before {\n    background-color: #1616164d;\n  }\n\n  &:active::before {\n    border-color: #ffffff;\n  }\n`;\n\n","import { BtnCloseBlack } from \"components/buttons/buttons\";\nimport { BtnBox, BtnReset, ColorOptionLabel, ResetBox, ResetTitle, Title, TitleBox, Container } from \"./Filters.styled\";\n\nfunction Filters() {\n    return (\n        <Container>\n            <TitleBox>\n                <Title>Filters</Title>\n                <BtnCloseBlack />\n            </TitleBox>\n            <ResetBox>\n                <ResetTitle>Lable color</ResetTitle>\n                <BtnReset>Show all</BtnReset>\n            </ResetBox>\n            <BtnBox>\n                <ColorOptionLabel className=\"blue\">\n                    <button type=\"radio\" name=\"priority\" value=\"low\" />\n                </ColorOptionLabel>\n                <ColorOptionLabel className=\"red\">\n                    <button type=\"radio\" name=\"priority\" value=\"medium\" />\n                </ColorOptionLabel>\n                <ColorOptionLabel className=\"green\">\n                    <button type=\"radio\" name=\"priority\" value=\"high\" />\n                </ColorOptionLabel>\n                <ColorOptionLabel className=\"gray\">\n                    <button type=\"radio\" name=\"priority\" value=\"without\" />\n                </ColorOptionLabel>\n            </BtnBox>\n        </Container>\n    );\n};\n\nexport default Filters;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 48px;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 24px;\n  box-sizing: border-box;\n  flex-direction: row;\n`;\nexport const BoardName = styled.h2`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: #f6f6f7;\n`;\n","import Filters from 'components/filters/Filters';\nimport { BoardName, Container } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\n\nconst HeaderDashboard = ({ boardName }) => {\n\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const stroke = '#161616'\nconsole.log(isMenuOpen)\n    const toggleMenu = () => {\n        setIsMenuOpen(!isMenuOpen);\n    };\n\n    return (\n        <Container>\n            <BoardName>{boardName}</BoardName>\n            <BtnFilter color={stroke} onClick={toggleMenu} />\n            {isMenuOpen && <Filters />}\n        </Container>\n    );\n};\n\nexport default HeaderDashboard;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: 56px;\n  border-radius: 8px;\n  background: #fff;\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-bottom: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: #16161680;\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background-color: #fcfcfc;\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n  color: #161616;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  margin-top: 14px;\n  border-radius: 8px;\n  border: 1px solid rgba(190, 219, 176, 0.4);\n  background-color: #fcfcfc;\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border: 1px solid #bedbb0;\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: #16161680;\n`;\n\nexport const Text = styled.p`\n  // margin-top: 4px;\n  // margin-bottom: 40px;\n  font-family: Poppins;\n  font-size: 14px;\n  color: #bedbb0;\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  display: inline-block;\n  margin-right: 8px;\n  font-size: 14px;\n\n  input[type='radio'] {\n    display: none;\n  }\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  &::before {\n    content: '';\n    display: inline-block;\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: transparent;\n    border: 2px solid transparent;\n  }\n\n  &.blue::before {\n    background-color: #8fa1d0;\n  }\n\n  &.red::before {\n    background-color: #e09cb5;\n  }\n\n  &.green::before {\n    background-color: #bedbb0;\n  }\n\n  &.gray::before {\n    background-color: #1616164d;\n  }\n\n  &:active::before {\n    border-color: #ffffff;\n  }\n`;\nexport const DeadlineBox = styled.div`\ndisplay:flex;\nalign-items:center;\nmargin-bottom: 40px;\n`\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport { ModalTitle, Input, FormContainer } from '../cardForm/CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\n\nconst ColumnForm = ({ formTitle, btnText, onSubmit }) => {\n  const initialValues = {\n    title: '',\n  };\n\n  const handleSubmit = values => {\n    onSubmit(values);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import { Container, Title, IconsBox, Icon } from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <button type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </button>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/joy/Menu';\nimport MenuItem from '@mui/joy/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background: #fff;\n  padding: 14px 20px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  color: rgba(22, 22, 22, 0.7);\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid rgba(22, 22, 22, 0.1);\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: rgba(22, 22, 22, 0.5);\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: #161616;\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: #16161680;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n\nexport const MenuMUI = styled(Menu)`\n  max-height: 180px;\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: #e8e8e8;\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(22, 22, 22, 0.1);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n  stroke: #16161680;\n\n  direction: ltr;\n\n  &:hover {\n    color: #bedbb0;\n    stroke: #bedbb0;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n    width: 18px;\n    height: 18px;\n    // flex-shrink: 0;\n    // margin: 0;\n    stroke: #BEDBB0;\n`;","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\n\nexport const Calendar = ({ parentState, initial }) => {\n    dayjs().format();\n\n    const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n    useEffect(() => {\n    }, [dateDeadline]);\n\n    return (\n        <>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n                <DatePicker\n                    views={['month', 'day']}\n                    value={dateDeadline}\n                    desktopModeMediaQuery=\"\"\n                    onChange={newValue => {\n                        setDateDeadline(newValue);\n                        parentState(newValue);\n                    }}\n                    slots={{\n                        openPickerIcon: () => (\n                            <IconDown aria-label=\"chevron-down\">\n                                <use href={sprite + '#icon-chevron-down'}></use>\n                            </IconDown>\n                        ),\n                    }}\n                    dayOfWeekFormatter={day => day.slice(0, 2)}\n                    slotProps={{\n                        desktopPaper: {\n                            sx: {\n                                borderRadius: '8px',\n                                color: '',\n                                backgroundColor: '#FFFFFF',\n                                '& .MuiPickersCalendarHeader-labelContainer': {\n                                    position: 'absolute',\n                                    left: '50%',\n                                    transform: 'translateX(-50%)',\n                                },\n                                '& .MuiPickersCalendarHeader-label': {\n                                    color: '#161616',\n                                    fontFamily: 'Poppins',\n                                    fontSize: '12px',\n                                    fontStyle: 'normal',\n                                    fontWeight: 500,\n                                    lineHeight: 'normal',\n                                },\n                                '& .MuiSvgIcon-root': {\n                                    fill: '',\n                                },\n\n                                '& .MuiTypography-root': {\n                                    color: '',\n                                    height: '24px',\n                                    marginTop: '14px',\n                                },\n                                '& .MuiDayCalendar-weekContainer': {\n                                    justifyContent: 'space-between',\n                                },\n\n                                '& .MuiButtonBase-root': {\n                                    color: '',\n                                    margin: 0,\n                                    padding: 0,\n                                    fontSize: '14px',\n                                    fontStyle: 'normal',\n                                    fontWeight: '400',\n                                    lineHeight: '18px',\n                                },\n                                '& .MuiPickersArrowSwitcher-root': {\n                                    width: '100%',\n                                    justifyContent: 'space-between',\n                                },\n                                '& .MuiPickersCalendarHeader-switchViewButton': {\n                                    display: 'none',\n                                },\n                                '& .MuiPickersCalendarHeader-root': {\n                                    padding: '0',\n                                    alignItems: 'baseline',\n                                    margin: '0',\n                                    borderBottomWidth: '2px',\n                                    borderBottomStyle: 'solid',\n                                    borderColor: '',\n                                },\n\n                                '& .MuiPickersArrowSwitcher-button': {\n                                    height: '21px',\n                                },\n\n                                '& .MuiDateCalendar-root': {\n                                    width: '233px',\n                                    height: '254px',\n                                    padding: '18px',\n                                    boxSizing: 'border-box',\n                                    background: '',\n                                },\n\n                                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                                    height: '24px',\n                                    width: '24px',\n                                    minWidth: '24px',\n                                    maxWidth: '24px',\n                                },\n                            },\n                        },\n                        day: {\n                            sx: {\n                                height: '24px',\n                                width: '24px',\n                                minWidth: '24px',\n                                maxWidth: '24px',\n                                fontSize: '14px',\n\n                                '&.MuiPickersDay-root.Mui-selected': {\n                                    backgroundColor: '#BEDBB0',\n                                    color: '#161616',\n                                },\n\n                                '&.Mui-selected:hover': {\n                                    backgroundColor: '',\n                                },\n                                '&.MuiPickersDay-today': {\n                                    borderWidth: 1,\n                                    borderColor: '',\n                                    color: '',\n                                },\n                            },\n                        },\n                        textField: {\n                            variant: 'outlined',\n                            sx: {\n\n                                '& input': { display: 'none' },\n                                '& fieldset': { border: 'none' },\n                            },\n                        },\n                    }}\n                />\n            </LocalizationProvider>\n        </>\n    );\n};","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport {\n  FormContainer,\n  ModalTitle,\n  Input,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n} from './CardForm.styled';\nimport BtnAdd from 'components/ScreensPage/btnAdd/BtnAdd';\nimport ModalClose from '@mui/joy/ModalClose';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\n\nconst CardForm = ({\n  title,\n  text,\n  priority,\n  deadline,\n  formTitle,\n  btnText,\n  onSubmit,\n  owner,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('DD/MM/YYYY');\n\n  const initialValues = {\n    title: '',\n    text: '',\n    priority: '',\n    deadline: '',\n  };\n\n  const handleSubmit = values => {\n    const data = {\n      ...values,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer>\n      <ModalClose\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n        }}\n      />\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Field type=\"text\" name=\"title\" as={Input} placeholder=\"Title\" />\n          <Field\n            type=\"text\"\n            name=\"description\"\n            as={Textarea}\n            placeholder=\"Description\"\n          />\n          <div>\n            <Subtitle>Label color</Subtitle>\n            <div>\n              <ColorOptionLabel className=\"blue\">\n                <Field type=\"radio\" name=\"priority\" value=\"low\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"red\">\n                <Field type=\"radio\" name=\"priority\" value=\"medium\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"green\">\n                <Field type=\"radio\" name=\"priority\" value=\"high\" />\n              </ColorOptionLabel>\n              <ColorOptionLabel className=\"gray\">\n                <Field type=\"radio\" name=\"priority\" value=\"without\" />\n              </ColorOptionLabel>\n            </div>\n          </div>\n          <div>\n            <Subtitle>Deadline</Subtitle>\n            <DeadlineBox>\n              <Text>\n                {selectedDate\n                  ? formattedDate\n                  : `Today, ${dayjs().format('MMMM D')}`}\n              </Text>\n              <Calendar\n                parentState={setSelectedDate}\n                initial={initialValues.deadline}\n              />\n            </DeadlineBox>\n          </div>\n          <BtnAdd btnTitle={btnText} btnColor={'#BEDBB0'} />\n        </Form>\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\nimport MenuButton from '@mui/joy/MenuButton';\nimport Dropdown from '@mui/joy/Dropdown';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const colorPriority = '#8FA1D0';\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  return (\n    <Container style={{ borderLeft: `4px solid ${colorPriority}` }}>\n      <Title>{title}</Title>\n      <Description>{text}</Description>\n      <BottomBar>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce style={{ backgroundColor: colorPriority }}></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          <Dropdown>\n            <MenuButton\n              size=\"sx\"\n              sx={{\n                border: 'none',\n                '&:hover': {\n                  backgroundColor: 'transparent',\n                },\n                '&:focus': {\n                  outline: '2px solid #000000',\n                },\n              }}\n            >\n              <TransferRight>\n                <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n              </TransferRight>\n              <MenuMUI>\n                {columns.map(columm => {\n                  const currentColumn = columm._id === card.owner;\n\n                  return (\n                    <MenuItemMUI\n                      key={columm._id + '1'}\n                      onClick={() => replaceCardHandler(columm._id)}\n                      disabled={currentColumn}\n                      sx={{\n                        color: currentColumn ? '#bedbb0' : '#16161680',\n                        stroke: currentColumn ? '#bedbb0' : '#16161680',\n                      }}\n                    >\n                      {columm.title}\n                      <TransferRight>\n                        <use\n                          href={icon + '#icon-arrow-circle-broken-right'}\n                        ></use>\n                      </TransferRight>\n                    </MenuItemMUI>\n                  );\n                })}\n              </MenuMUI>\n            </MenuButton>\n          </Dropdown>\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  gap: 24px;\n  padding: 0 24px 16px 0;\n\n  overflow-x: auto;\n\n  ::-webkit-scrollbar {\n    background-color: #e8e8e8;\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: rgba(22, 22, 22, 0.1);\n    border-radius: 12px;\n  }\n`;\nexport const Column = styled.div``;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  margin-bottom: 14px;\n  max-height: 69vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n","import { useState } from 'react';\nimport TitleColumn from '../titleColumn/TitleColumn';\nimport Card from '../card/Card';\nimport { Container, Column, GalleryCards } from './MainDashboard.styled';\nimport BtnAdd from '../btnAdd/BtnAdd';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/columnCard/ColumnCard';\nimport CardForm from 'components/cardForm/CardForm';\nimport { useParams } from 'react-router-dom';\n\nconst MainDashboard = ({ columns }) => {\n  const btnTitle = 'Add another card';\n  const btnColor = '#BEDBB0';\n  const btnTitle2 = 'Add another column';\n  const btnColor2 = '#FFFFFF';\n\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container>\n      {columns &&\n        columns.map(column => {\n          return (\n            <Column key={column._id}>\n              <TitleColumn\n                title={column.title}\n                owner={column.owner}\n                columnId={column._id}\n              />\n              <GalleryCards>\n                {column.cards.map(card => {\n                  return (\n                    <Card\n                      key={card._id}\n                      title={card.title}\n                      text={card.text}\n                      priority={card.priority}\n                      deadline={card.deadline}\n                      owner={card.ovner}\n                      boardId={column.owner}\n                      card={card}\n                      columns={columns}\n                    />\n                  );\n                })}\n              </GalleryCards>\n              <BtnAdd\n                onClick={() => openModalCard(column._id)}\n                btnTitle={btnTitle}\n                btnColor={btnColor}\n              />\n            </Column>\n          );\n        })}\n      <BtnAdd\n        onClick={() => setOpenColumnModal(true)}\n        btnTitle={btnTitle2}\n        btnColor={btnColor2}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  color: rgba(22, 22, 22, 0.7);\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.a`\n  color: #bedbb0;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n`;\n","import { Container, Link, TextBox } from \"./StartBoard.styled\";\n\n\nconst StartBoard = () => {\n\n    return (\n        <Container>\n            <TextBox>\n                Before starting your project, it is essential\n                <Link href=\"https://cs13.pikabu.ru/post_img/big/2021/01/15/0/161065904215981081.jpg\"> to create a board </Link>\n                to visualize and track all the necessary tasks and milestones.\n                This board serves as a powerful tool to organize the workflow\n                and ensure effective collaboration among team members.\n            </TextBox>\n        </Container>\n    );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './startBoard/StartBoard';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const Container = styled.div`\n    height: 100vh;\n    max-height: 100vh;\n    padding: 64px 24px 0 24px;\n    margin-left: 260px;\n\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: #f6f6f7;\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n    }\n  `;\n\n  return (\n    <Container>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n","import ScreensPage from 'components/ScreensPage/ScreensPage';\n\n\nconst HomePage = () => {\n  return (\n    <div>\n      <ScreensPage />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["BtnCloseBlack","_jsx","ButtonClose","children","ButtonCloseIcon","ButtonUpDateSvg","href","icon","BtnFilter","_ref3","color","_jsxs","ButtonFilter","ButtonFilterThumb","ButtonFilterIcon","style","stroke","concat","ButtonFilterSvg","ButtonFilterText","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","TitleBox","_templateObject3","ResetBox","_templateObject4","ResetTitle","_templateObject5","BtnReset","_templateObject6","BtnBox","_templateObject7","ColorOptionLabel","_templateObject8","className","type","name","value","BoardName","_ref","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","console","log","onClick","Filters","IconsBox","Icon","FormContainer","ModalTitle","Input","Textarea","Subtitle","Text","DeadlineBox","_templateObject9","formTitle","btnText","onSubmit","ModalClose","sx","position","top","right","zIndex","Formik","initialValues","title","values","Form","Field","as","placeholder","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","closeModal","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","_templateObject10","_templateObject11","IconButton","_templateObject12","TransferRight","_templateObject13","Edit","_templateObject14","Delete","_templateObject15","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","desktopModeMediaQuery","onChange","newValue","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","borderRadius","backgroundColor","left","transform","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","justifyContent","margin","padding","width","display","alignItems","borderBottomWidth","borderBottomStyle","borderColor","boxSizing","background","minWidth","maxWidth","borderWidth","textField","variant","border","text","priority","deadline","selectedDate","setSelectedDate","formattedDate","_objectSpread","card","boardId","columns","colorPriority","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","useParams","closeCardModal","borderLeft","Dropdown","MenuButton","size","outline","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","deleteCardHandler","CardForm","Column","GalleryCards","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","_useState3","_useState4","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","TextBox","Link","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","HeaderDashboard","MainDashboard","board","StartBoard","ScreensPage"],"sourceRoot":""}