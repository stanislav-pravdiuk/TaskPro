{"version":3,"file":"static/js/902.c2963a91.chunk.js","mappings":"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","sources":["components/Filter/Filters.styled.jsx","components/Filter/Filters.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.styled.jsx","components/ScreensPage/HeaderDashboard/HeaderDashboard.jsx","components/ScreensPage/ColumnTitle/TitleColumn.styled.jsx","components/FormCard/CardForm.styled.jsx","components/FormColumn/ColumnCard.jsx","components/ScreensPage/ColumnTitle/TitleColumn.jsx","components/ScreensPage/Card/Card.styled.jsx","components/calendar/Calendar.styled.jsx","components/calendar/Calendar.jsx","components/FormCard/CardForm.jsx","components/ScreensPage/Card/Card.jsx","components/ScreensPage/MainDashboard/MainDashboard.styled.jsx","components/buttons/btnAdd/BtnAddColumn.jsx","components/ScreensPage/MainDashboard/MainDashboard.jsx","components/ScreensPage/StartScreen/StartBoard.styled.jsx","components/ScreensPage/StartScreen/StartBoard.jsx","components/ScreensPage/ScreensPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  width: 300px;\n  left: 0;\n  transform: translateX(-70%);\n  z-index: 5;\n  border-radius: 8px;\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  box-shadow: 0px 4px 16px 0px var(--color-opacity-black);\n  padding: 24px;\n`;\n\nexport const CloseButton = styled.div`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const Title = styled.p`\n  color: inherit;\n  font-family: 'Poppins';\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const TitleBox = styled.div`\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const ResetBox = styled.div`\n  display: flex;\n  border-top: 1px solid;\n  border-color: ${props => {\n    return props.theme.palette.secondary.main;\n  }};\n  margin-bottom: 14px;\n  padding-top: 14px;\n`;\n\nexport const ResetTitle = styled.p`\n  display: flex;\n  flex-shrink: 0;\n  margin-right: auto;\n  color: inherit;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n`;\n\nexport const BtnReset = styled.button`\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  letter-spacing: -0.24px;\n  text-decoration-line: underline;\n`;\n\nexport const BtnBox = styled.button`\n  display: flex;\n  flex-direction: column;\n\n  color: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  cursor: pointer;\n  position: relative;\n  display: inline-flex;\n  gap: 8px;\n  justify-content: center;\n  align-items: center;\n  color: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n\n  font-family: 'Poppins';\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n  font-size: 14px;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled.input`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 4px;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid rgba(128, 128, 128, 0.7);\n  }\n`;\n","import { BtnCloseBlack } from 'components/buttons/buttons';\nimport {\n  BtnBox,\n  BtnReset,\n  ColorOptionLabel,\n  RadioButton,\n  ResetBox,\n  ResetTitle,\n  Title,\n  TitleBox,\n  Container,\n  CloseButton,\n  Dot,\n} from './Filters.styled';\nimport { useTheme } from '@mui/material';\n\nfunction Filters({ onClick, onChange, filterValue }) {\n  const theme = useTheme();\n\n  return (\n    <Container theme={theme}>\n      <TitleBox>\n        <Title>Filters</Title>\n        <CloseButton type=\"button\" onClick={onClick}>\n          <BtnCloseBlack />\n        </CloseButton>\n      </TitleBox>\n      <ResetBox theme={theme}>\n        <ResetTitle>Lable color</ResetTitle>\n        <BtnReset\n          theme={theme}\n          type=\"button\"\n          onClick={() => onChange('default')}\n        >\n          Show all\n        </BtnReset>\n      </ResetBox>\n      <BtnBox theme={theme}>\n        <ColorOptionLabel theme={theme} className=\"gray\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"without\"\n            checked={filterValue === 'without'}\n            onChange={() => onChange('without')}\n            className=\"gray\"\n          />\n          <Dot className=\"gray\"></Dot>\n          Without priority\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"blue\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"low\"\n            checked={filterValue === 'low'}\n            onChange={() => onChange('low')}\n            className=\"blue\"\n          />\n          <Dot className=\"blue\"></Dot>\n          Low\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"red\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"medium\"\n            checked={filterValue === 'medium'}\n            onChange={() => onChange('medium')}\n            className=\"red\"\n          />\n          <Dot className=\"red\"></Dot>\n          Medium\n        </ColorOptionLabel>\n        <ColorOptionLabel theme={theme} className=\"green\">\n          <RadioButton\n            type=\"radio\"\n            name=\"priority\"\n            value=\"high\"\n            checked={filterValue === 'high'}\n            onChange={() => onChange('high')}\n            className=\"green\"\n          />\n          <Dot className=\"green\"></Dot>\n          High\n        </ColorOptionLabel>\n      </BtnBox>\n    </Container>\n  );\n}\n\nexport default Filters;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 14px 20px 0 20px;\n  box-sizing: border-box;\n  flex-direction: row;\n  margin-bottom: 39px;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 26px;\n    padding: 26px 32px 0 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 10px;\n    padding: 10px 24px 0 24px;\n  }\n`;\nexport const BoardName = styled.h2`\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  font-family: Poppins;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n\n  padding-left: 5px;\n  padding-right: 5px;\n\n  border-radius: 8px;\n\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n`;\n\nexport const Thumb = styled.div`\n  position: relative;\n`;\n","import Filters from 'components/Filter/Filters';\nimport { BoardName, Container, Thumb } from './HeaderDashboard.styled';\nimport { BtnFilter } from 'components/buttons/buttons';\nimport { useState } from 'react';\nimport { useBoardFilterMutation } from 'redux/boards/boardsApi';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\n\nconst HeaderDashboard = ({ boardName, filterValue }) => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const stroke = '#161616';\n\n  const [boardFilter] = useBoardFilterMutation();\n\n  const theme = useTheme();\n\n  const { boardName: boardId } = useParams();\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const boardFilterHandler = priotity => {\n    boardFilter({ boardId, priotity });\n  };\n\n  return (\n    <Container>\n      <BoardName theme={theme}>{boardName}</BoardName>\n      <Thumb>\n        <BtnFilter color={stroke} onClick={toggleMenu}></BtnFilter>\n        {isMenuOpen && (\n          <Filters\n            onClick={toggleMenu}\n            onChange={boardFilterHandler}\n            filterValue={filterValue}\n          />\n        )}\n      </Thumb>\n    </Container>\n  );\n};\n\nexport default HeaderDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 334px;\n  min-height: 56px;\n  border-radius: 8px;\n  background: ${props => props.theme.palette.background.paper};\n  color: ${props => props.theme.palette.text.primary};\n  stroke: ${props => props.theme.palette.primary.info};\n  padding-left: 20px;\n  padding-right: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\nexport const Title = styled.h3`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: normal;\n  margin: 0;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 8px;\n`;\n\nexport const IconsButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n`;\n\nexport const Icon = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n","import styled from 'styled-components';\nimport { Field, ErrorMessage } from 'formik';\n\nexport const FormContainer = styled.div`\n  position: relative;\n  background: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  width: 100vw;\n  max-width: 350px;\n  padding: 24px;\n  border-radius: 8px;\n`;\n\nexport const ModalTitle = styled.h2`\n  margin: 0;\n  font-family: Poppins;\n  font-size: 18px;\n`;\n\nexport const Container = styled.div`\n  line-height: 0;\n  position: relative;\n  display: block;\n  width: 100%;\n  margin-bottom: 0;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  position: absolute;\n  bottom: 15px;\n  padding-left: 14px;\n  margin: 0;\n  color: var(--color-pastel);\n  font-size: 12px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const Input = styled.input`\n  padding: 14px 18px;\n  width: 100%;\n  height: 49px;\n  margin-top: 24px;\n  margin-bottom: 24px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.palette.text.info};\n  background-color: inherit;\n  color: ${props => props.theme.palette.text.primary};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border-color: ${props => props.theme.palette.text.hint};\n  }\n`;\n\nexport const ErrorText = styled(ErrorMessage)`\n  position: absolute;\n  bottom: -7px;\n  padding-left: 14px;\n  margin: 0;\n  color: var(--color-pastel);\n  font-size: 12px;\n  font-family: Poppins;\n  font-weight: 500;\n  letter-spacing: -0.36px;\n`;\n\nexport const Textarea = styled.textarea`\n  resize: none;\n  padding: 14px 18px;\n  width: 100%;\n  height: 154px;\n  border-radius: 8px;\n  border: 1px solid ${props => props.theme.palette.text.info};\n  background-color: inherit;\n  color: ${props => props.theme.palette.text.primary};\n  font-family: Poppins;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n  box-shadow: none;\n\n  &:focus {\n    border-color: ${props => props.theme.palette.text.hint};\n  }\n`;\n\nexport const Subtitle = styled.h3`\n  margin: 0;\n  margin-top: 14px;\n  margin-bottom: 4px;\n  font-family: Poppins;\n  font-size: 12px;\n  font-weight: 400;\n  color: inherit;\n`;\n\nexport const Text = styled.p`\n  font-family: Poppins;\n  font-size: 14px;\n  color: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n`;\n\nexport const RadioButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nexport const Dot = styled.span`\n  content: '';\n  display: block;\n  width: 14px;\n  height: 14px;\n  border-radius: 50%;\n\n  background-color: transparent;\n\n  &.blue {\n    background-color: var(--color-blue);\n  }\n\n  &.red {\n    background-color: var(--color-pink);\n  }\n\n  &.green {\n    background-color: var(--color-green);\n  }\n\n  &.gray {\n    background-color: rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const ColorOptionLabel = styled.label`\n  position: relative;\n  width: 14px;\n  height: 14px;\n  margin: 0;\n\n  input[type='radio']:checked + ${Dot} {\n    scale: 0.5;\n  }\n`;\n\nexport const RadioButton = styled(Field)`\n  position: absolute;\n  appearance: none;\n  z-index: 5;\n  top: 0;\n  left: 0;\n  border-radius: 50%;\n  margin: 0;\n\n  width: 14px;\n  height: 14px;\n\n  cursor: pointer;\n\n  &:checked.blue {\n    border: 1px solid var(--color-blue);\n  }\n\n  &:checked.red {\n    border: 1px solid var(--color-pink);\n  }\n\n  &:checked.green {\n    border: 1px solid var(--color-green);\n  }\n\n  &:checked.gray {\n    border: 1px solid rgba(128, 128, 128, 0.7);\n  }\n`;\n\nexport const DeadlineBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 40px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-hot-toast';\nimport {\n  ModalTitle,\n  Container,\n  Error,\n  Input,\n  FormContainer,\n  CloseButton,\n} from '../FormCard/CardForm.styled';\nimport BtnAdd from 'components/buttons/btnAdd/BtnAdd';\nimport { BtnCloseBlack } from 'components/buttons/buttons';\nimport { useTheme } from '@mui/material';\n\nconst ColumnForm = ({\n  formTitle,\n  columnTitle,\n  btnText,\n  onSubmit,\n  closeModal,\n}) => {\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(3, 'Title must be at least 3 characters long')\n      .required('Title is required'),\n  });\n\n  const initialValues = {\n    title: columnTitle || '',\n  };\n\n  const handleSubmit = values => {\n    const title = values.title.trim();\n\n    if (!title || title.length < 3) {\n      toast.error('Title must be at least 3 characters long');\n      return;\n    }\n\n    onSubmit(values);\n  };\n\n  const theme = useTheme();\n\n  return (\n    <FormContainer theme={theme}>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        {formik => (\n          <Form>\n            <Container>\n              <Field\n                theme={theme}\n                type=\"text\"\n                name=\"title\"\n                as={Input}\n                placeholder=\"Title\"\n              />\n              <Error name=\"title\" component=\"div\" />\n            </Container>\n\n            <BtnAdd\n              btnTitle={btnText}\n              btnColor={'#BEDBB0'}\n            />\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default ColumnForm;\n","import {\n  Container,\n  Title,\n  IconsBox,\n  IconsButton,\n  Icon,\n} from './TitleColumn.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useState } from 'react';\nimport {\n  useUpdateColumnMutation,\n  useDeleteColumnMutation,\n} from 'redux/boards/boardsApi';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/FormColumn/ColumnCard';\nimport { useTheme } from '@mui/material';\n\nconst TitleColumn = ({ title, owner, columnId }) => {\n  const [open, setOpen] = useState(false);\n\n  const [updateColumn] = useUpdateColumnMutation();\n  const [deleteColumn] = useDeleteColumnMutation();\n\n  const theme = useTheme();\n\n  const closeModal = () => {\n    setOpen(false);\n  };\n\n  const updateColumnHandler = value => {\n    const data = {\n      _id: columnId,\n      owner,\n      title: value.title,\n    };\n\n    updateColumn({ data });\n    closeModal();\n  };\n\n  const deleteColumnHandler = (owner, columnId) => {\n    const data = {\n      _id: columnId,\n      owner,\n    };\n\n    deleteColumn({ data });\n  };\n\n  return (\n    <Container theme={theme}>\n      <Title>{title}</Title>\n\n      <IconsBox>\n        <IconsButton type=\"button\" onClick={() => setOpen(true)}>\n          <Icon>\n            <use href={icon + '#icon-pencil-01'}></use>\n          </Icon>\n        </IconsButton>\n        <IconsButton\n          type=\"button\"\n          onClick={() => deleteColumnHandler(owner, columnId)}\n        >\n          <Icon>\n            <use href={icon + '#icon-trash-04'}></use>\n          </Icon>\n        </IconsButton>\n        <MainModal modalIsOpen={open} closeModal={closeModal}>\n          <ColumnForm\n            formTitle={'Edit column'}\n            btnText={'Edit'}\n            onSubmit={updateColumnHandler}\n            columnTitle={title}\n            closeModal={closeModal}\n          />\n        </MainModal>\n      </IconsBox>\n    </Container>\n  );\n};\n\nexport default TitleColumn;\n","import styled from 'styled-components';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n\nexport const Container = styled.div`\n  width: 334px;\n  height: auto;\n  border-radius: 8px;\n  background-color: ${props => {\n    return props.theme.palette.background.paper;\n  }};\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n  stroke: ${props => {\n    return props.theme.palette.primary.info;\n  }};\n  padding: 14px 24px;\n  margin-bottom: 8px;\n`;\nexport const Title = styled.h4`\n  color: ${props => {\n    return props.theme.palette.text.primary;\n  }};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: normal;\n  margin: 0;\n`;\nexport const Description = styled.div`\n  width: 100%;\n  color: inherit;\n  font-family: Poppins;\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  margin-top: 8px;\n  margin-bottom: 14px;\n`;\nexport const BottomBar = styled.div`\n  margin-top: 14px;\n  border-top: 1px solid;\n  border-color: ${props => {\n    return props.theme.palette.secondary.main;\n  }};\n  padding-top: 14px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\nexport const OptionsBox = styled.div`\n  display: flex;\n`;\n\nexport const Options = styled.div`\n  margin-right: 14px;\n`;\nexport const PriorityBox = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const TextOptions = styled.p`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 8px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\nexport const Text = styled.div`\n  color: inherit;\n  font-family: Poppins;\n  font-size: 10px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n`;\n\nexport const Elipce = styled.div`\n  border-radius: 100%;\n  width: 12px;\n  height: 12px;\n  margin-right: 4px;\n`;\nexport const IconsBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  stroke: inherit;\n`;\n\nexport const IconButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TransferRight = styled.svg`\n  margin-left: auto;\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Edit = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\nexport const Delete = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: inherit;\n`;\n\nexport const MenuMUI = styled(Menu)`\n  overflow: auto;\n\n  direction: rtl;\n\n  ::-webkit-scrollbar {\n    background-color: var(--color-pale-gray);\n    width: 4px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: var(--color-transparent-black);\n    border-radius: 12px;\n    width: 4px;\n  }\n`;\n\nexport const MenuItemMUI = styled(MenuItem)`\n  display: flex;\n  gap: 8px;\n  justify-content: space-between;\n\n  stroke: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n\n  direction: ltr;\n\n  &:hover {\n    color: var(--color-green);\n    stroke: var(--color-green);\n  }\n`;\n\nexport const IconDeadline = styled.svg`\n  width: 16px;\n  height: 16px;\n  stroke: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n","import styled from 'styled-components';\n\nexport const IconDown = styled.svg`\n  width: 18px;\n  height: 18px;\n  // flex-shrink: 0;\n  // margin: 0;\n  stroke: ${props => {\n    return props.theme.palette.text.hint;\n  }};\n`;\n","import { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport dayjs from 'dayjs';\nimport { useState, useEffect } from 'react';\nimport sprite from '../iconSvg/icon.svg';\nimport { IconDown } from './Calendar.styled';\nimport { toast } from 'react-hot-toast';\nimport { useTheme } from '@mui/material';\n\nexport const Calendar = ({ parentState, initial }) => {\n  dayjs().format();\n\n  const theme = useTheme();\n\n  const [dateDeadline, setDateDeadline] = useState(initial ? initial : '');\n\n  useEffect(() => {}, [dateDeadline]);\n\n  return (\n    <>\n      <LocalizationProvider dateAdapter={AdapterDayjs}>\n        <DatePicker\n          views={['month', 'day']}\n          disablePast\n          value={dateDeadline}\n          desktopModeMediaQuery=\"\"\n          onChange={newValue => {\n            if (dayjs(newValue).isBefore(dayjs(), 'day')) {\n              toast.error('invalid date');\n              return;\n            }\n            setDateDeadline(newValue);\n            parentState(newValue);\n          }}\n          slots={{\n            openPickerIcon: () => (\n              <IconDown theme={theme} aria-label=\"chevron-down\">\n                <use href={sprite + '#icon-chevron-down'}></use>\n              </IconDown>\n            ),\n          }}\n          dayOfWeekFormatter={day => day.slice(0, 2)}\n          slotProps={{\n            desktopPaper: {\n              sx: {\n                borderRadius: '8px',\n                '& .MuiPickersLayout-contentWrapper': {\n                  border: '1px solid',\n                  borderColor: 'primary.main',\n                  borderRadius: '8px',\n                },\n                '& .MuiPickersCalendarHeader-labelContainer': {\n                  position: 'absolute',\n                  left: '50%',\n                  transform: 'translateX(-50%)',\n                  width: '100%',\n                  justifyContent: 'center',\n                },\n                '& .MuiPickersCalendarHeader-label': {\n                  color: 'text.primary', // September 2023 (title)\n                  fontFamily: 'Poppins',\n                  fontSize: '16px',\n                  fontStyle: 'normal',\n                  fontWeight: 500,\n                  lineHeight: 'normal',\n                },\n\n                '& .MuiSvgIcon-root': {\n                  fill: 'text.success', // стрілки вправо вліво біля September 2023\n                },\n\n                '& .MuiTypography-root': {\n                  color: 'primary.info', //Назви днів  rgba(22, 22, 22, 0.5)\n                  height: '24px',\n                  marginTop: '14px',\n                },\n                '& .MuiDayCalendar-weekContainer': {\n                  justifyContent: 'space-between',\n                },\n\n                '& .MuiButtonBase-root': {\n                  color: 'text.primary', // числа місяця після вибраної дати\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontStyle: 'normal',\n                  fontWeight: '400',\n                  lineHeight: '18px',\n                },\n                '& .MuiPickersArrowSwitcher-root': {\n                  width: '100%',\n                  justifyContent: 'space-between',\n                },\n                '& .MuiPickersCalendarHeader-switchViewButton': {\n                  display: 'none',\n                },\n                '& .MuiPickersCalendarHeader-root': {\n                  padding: '0',\n                  alignItems: 'baseline',\n                  margin: '0',\n                  borderBottomWidth: '1px',\n                  borderBottomStyle: 'solid',\n                  borderColor: 'text.success', // колір лінії під September 2023\n                },\n\n                '& .MuiPickersArrowSwitcher-button': {\n                  height: '21px',\n                },\n\n                '& .MuiDateCalendar-root': {\n                  width: '233px',\n                  height: '254px',\n                  padding: '18px',\n                  boxSizing: 'border-box',\n                  background: '', // фон всього календаря\n                },\n\n                '& .MuiPickersDay-hiddenDaySpacingFiller': {\n                  height: '24px',\n                  width: '24px',\n                  minWidth: '24px',\n                  maxWidth: '24px',\n                },\n\n                '& .MuiPickersDay-root.Mui-disabled': {\n                  // color: 'text.success', // фон неактивних днів цього місяця\n                  // color: 'grey', // фон неактивних днів цього місяця\n                },\n                \n                '& .Mui-disabled:not(.Mui-selected)': {\n                  // color: 'text.success',\n                },\n\n                '& .MuiPickersDay-root.Mui-disabled:not(.Mui-selected)': {\n                  color: 'text.success', // color неактивні дні цього місяця\n                },\n\n                '& .MuiPickersMonth-monthButton': {\n                  color: 'text.secondary', // текст назви місяця\n                  '&:hover': {\n                    bgcolor: 'primary.main', // ???? ховер при виборі місяця\n                  },\n                },\n                '& .MuiPickersMonth-monthButton.Mui-selected': {\n                  color: 'text.primary', // колір текст назви міс. selected\n                  bgcolor: 'primary.main', // фон назви міс. selected\n                },\n              },\n            },\n            day: {\n              sx: {\n                height: '24px',\n                width: '24px',\n                minWidth: '24px',\n                maxWidth: '24px',\n                fontSize: '14px',\n\n                '&.MuiPickersDay-root.Mui-selected': {\n                  backgroundColor: 'primary.main', // фон вибраної дати\n                  color: 'primary.darker', // колір цифри вибраної дати\n                },\n\n                '&.Mui-selected:hover': {\n                  backgroundColor: '', // ховер при виборі дати\n                },\n                '&.MuiPickersDay-today': {\n                  borderWidth: 1,\n                  borderColor: 'primary.main',\n                  bgcolor: 'primary.main', // фон сьогоднішньої дати навколо цифри\n                  color: 'text.primary', // колір сьогоднішньої дати (цифри)\n                },\n              },\n            },\n            textField: {\n              variant: 'outlined',\n              sx: {\n                '& input': { display: 'none' },\n                '& fieldset': { border: 'none' },\n              },\n            },\n          }}\n        />\n      </LocalizationProvider>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-hot-toast';\n\nimport {\n  FormContainer,\n  ModalTitle,\n  Container,\n  Error,\n  Input,\n  ErrorText,\n  Textarea,\n  Subtitle,\n  Text,\n  ColorOptionLabel,\n  DeadlineBox,\n  RadioButtonContainer,\n  RadioButton,\n  Dot,\n  CloseButton,\n} from './CardForm.styled';\nimport BtnAdd from 'components/buttons/btnAdd/BtnAdd';\nimport { Calendar } from 'components/calendar/Calendar';\nimport dayjs from 'dayjs';\nimport { BtnCloseBlack } from 'components/buttons/buttons';\nimport { useTheme } from '@mui/material';\n\nconst CardForm = ({\n  title,\n  text,\n  priority = 'without',\n  formTitle,\n  btnText,\n  onSubmit,\n  deadline,\n  owner,\n  closeModal,\n}) => {\n  const [selectedDate, setSelectedDate] = useState();\n  const formattedDate = dayjs(selectedDate).format('MM/DD/YYYY');\n  const formattedDateLong = dayjs(selectedDate).format('dddd, MMMM DD');\n  const deadLineDateLong = dayjs(deadline).format('dddd, MMMM DD');\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string()\n      .min(3, 'Title must be at least 3 characters long')\n      .required('Title is required'),\n    text: Yup.string()\n      .min(3, 'Description must be at least 3 characters long')\n      .required('Description is required'),\n  });\n\n  const theme = useTheme();\n\n  const initialValues = {\n    title: title || '',\n    text: text || '',\n    priority: priority || '',\n    deadline,\n  };\n\n  const handleSubmit = values => {\n    const title = values.title.trim();\n    const text = values.text.trim();\n\n    if (!title || title.length < 3) {\n      toast.error('Title must be at least 3 characters long');\n      return;\n    }\n\n    if (!text || text.length < 3) {\n      toast.error('Description must be at least 3 characters long');\n      return;\n    }\n\n    const data = {\n      ...values,\n      deadline: formattedDate,\n      owner,\n    };\n\n    onSubmit(data);\n  };\n\n  return (\n    <FormContainer theme={theme}>\n      <CloseButton type=\"button\" onClick={closeModal}>\n        <BtnCloseBlack />\n      </CloseButton>\n      <ModalTitle>{formTitle}</ModalTitle>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        {formik => (\n          <Form>\n            <Container>\n              <Field\n                theme={theme}\n                type=\"text\"\n                name=\"title\"\n                as={Input}\n                placeholder=\"Title\"\n              />\n              <Error name=\"title\" component=\"div\" />\n            </Container>\n            <Container>\n              <Field\n                theme={theme}\n                as={Textarea}\n                type=\"text\"\n                name=\"text\"\n                placeholder=\"Description\"\n              />\n              <ErrorText name=\"text\" component=\"div\" />\n            </Container>\n\n            <div>\n              <Subtitle>Label color</Subtitle>\n              <RadioButtonContainer>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"low\"\n                    className=\"blue\"\n                  />\n                  <Dot className=\"blue\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"medium\"\n                    className=\"red\"\n                  />\n                  <Dot className=\"red\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"high\"\n                    className=\"green\"\n                  />\n                  <Dot className=\"green\"></Dot>\n                </ColorOptionLabel>\n                <ColorOptionLabel>\n                  <RadioButton\n                    type=\"radio\"\n                    name=\"priority\"\n                    value=\"without\"\n                    className=\"gray\"\n                  />\n                  <Dot className=\"gray\"></Dot>\n                </ColorOptionLabel>\n              </RadioButtonContainer>\n            </div>\n            <div>\n              <Subtitle>Deadline</Subtitle>\n              <DeadlineBox>\n                <Text theme={theme}>\n                  {selectedDate\n                    ? formattedDateLong\n                    : deadLineDateLong || `Today, ${dayjs().format('MMMM D')}`}\n                </Text>\n                <Calendar parentState={setSelectedDate} />\n              </DeadlineBox>\n            </div>\n            <BtnAdd btnTitle={btnText} />\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default CardForm;\n","import { useState } from 'react';\nimport {\n  Container,\n  Description,\n  Title,\n  BottomBar,\n  Options,\n  Elipce,\n  PriorityBox,\n  TextOptions,\n  Text,\n  IconsBox,\n  TransferRight,\n  Edit,\n  Delete,\n  OptionsBox,\n  IconButton,\n  MenuMUI,\n  MenuItemMUI,\n  IconDeadline,\n} from './Card.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport {\n  useReplaceCardMutation,\n  useUpdateCardMutation,\n  useDeleteCardMutation,\n} from 'redux/boards/boardsApi';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport MainModal from 'components/MainModal/MainModal';\nimport CardForm from 'components/FormCard/CardForm';\nimport { useParams } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport { useTheme } from '@mui/material';\n\nconst Card = ({ title, text, priority, deadline, card, boardId, columns }) => {\n  const [openCardModal, setOpenCardModal] = useState(false);\n\n  const [replaceCard] = useReplaceCardMutation();\n  const [updateCard] = useUpdateCardMutation();\n  const [deleteCard] = useDeleteCardMutation();\n\n  const { boardName } = useParams();\n  const theme = useTheme();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const replaceCardHandler = newOwner => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n      newOwner,\n    };\n\n    const boardId = boardName;\n\n    replaceCard({ boardId, data });\n  };\n\n  const updateCardHandler = value => {\n    const data = {\n      ...value,\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    const boardId = boardName;\n\n    updateCard({ boardId, data });\n    closeCardModal();\n  };\n\n  const deleteCardHandler = (boardId, card) => {\n    const data = {\n      owner: card.owner,\n      _id: card._id,\n    };\n\n    deleteCard({ boardId, data });\n  };\n\n  const cardPriorityChecker = priority => {\n    let cardBordredColor = null;\n\n    switch (priority) {\n      case 'low':\n        cardBordredColor = '#8FA1D0';\n        break;\n      case 'medium':\n        cardBordredColor = '#E09CB5';\n        break;\n      case 'high':\n        cardBordredColor = '#BEDBB0';\n        break;\n\n      default:\n        cardBordredColor = 'rgba(128, 128, 128, 0.7)';\n    }\n\n    return cardBordredColor;\n  };\n\n  const isDeadlineToday = deadline => {\n    const today = new Date();\n    const deadlineDate = new Date(deadline);\n    return (\n      today.getFullYear() === deadlineDate.getFullYear() &&\n      today.getMonth() === deadlineDate.getMonth() &&\n      today.getDate() === deadlineDate.getDate()\n    );\n  };\n\n  return (\n    <Container\n      theme={theme}\n      style={{ borderLeft: `4px solid ${cardPriorityChecker(priority)}` }}\n    >\n      <Title theme={theme}>{title}</Title>\n      <Description>\n        <EllipsisText text={text} length={80} />\n      </Description>\n      <BottomBar theme={theme}>\n        <OptionsBox>\n          <Options>\n            <TextOptions>Priority</TextOptions>\n            <PriorityBox>\n              <Elipce\n                style={{ backgroundColor: `${cardPriorityChecker(priority)}` }}\n              ></Elipce>\n              <Text>{priority}</Text>\n            </PriorityBox>\n          </Options>\n          <Options>\n            <TextOptions>Deadline</TextOptions>\n            <Text>{deadline}</Text>\n          </Options>\n        </OptionsBox>\n        <IconsBox>\n          {isDeadlineToday(deadline) && (\n            <IconDeadline theme={theme}>\n              <use href={icon + '#icon-bell-01'}></use>\n            </IconDeadline>\n          )}\n          <Button\n            id=\"basic-button\"\n            aria-controls={open ? 'basic-menu' : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? 'true' : undefined}\n            onClick={handleClick}\n            size=\"small\"\n            sx={{\n              padding: 0,\n              maxWidth: '16px',\n              maxHeight: '16px',\n              minWidth: '16px',\n              minHeight: '16px',\n              border: 'none',\n              '&:hover': {\n                backgroundColor: 'transparent',\n              },\n              '&:focus': {\n                outline: '2px solid #000000',\n              },\n            }}\n          >\n            <TransferRight>\n              <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n            </TransferRight>\n          </Button>\n          <MenuMUI\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              'aria-labelledby': 'basic-button',\n            }}\n          >\n            {columns.map(columm => {\n              const currentColumn = columm._id === card.owner;\n\n              return (\n                <MenuItemMUI\n                  theme={theme}\n                  key={columm._id + '1'}\n                  onClick={() => replaceCardHandler(columm._id)}\n                  disabled={currentColumn}\n                  sx={{\n                    color: currentColumn ? '#bedbb0' : 'text.secondary',\n                    stroke: currentColumn ? '#bedbb0' : 'text.secondary',\n                  }}\n                >\n                  {columm.title}\n                  <TransferRight>\n                    <use href={icon + '#icon-arrow-circle-broken-right'}></use>\n                  </TransferRight>\n                </MenuItemMUI>\n              );\n            })}\n          </MenuMUI>\n\n          <IconButton type=\"button\" onClick={() => setOpenCardModal(true)}>\n            <Edit>\n              <use href={icon + '#icon-pencil-01'}></use>\n            </Edit>\n          </IconButton>\n          <IconButton\n            type=\"button\"\n            onClick={() => deleteCardHandler(boardId, card)}\n          >\n            <Delete>\n              <use href={icon + '#icon-trash-04'}></use>\n            </Delete>\n          </IconButton>\n        </IconsBox>\n      </BottomBar>\n\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Edit card'}\n          btnText={'Edit'}\n          title={card.title}\n          text={card.text}\n          priority={card.priority}\n          deadline={card.deadline}\n          onSubmit={updateCardHandler}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default Card;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-height: 78vh;\n  display: flex;\n  padding: 0 20px 0 20px;\n  overflow-x: auto;\n  overflow-y: hidden;\n\n  ::-webkit-scrollbar {\n    background-color: ${props => props.theme.palette.background.disabled};\n    width: 8px;\n    border-radius: 12px;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background-color: ${props => props.theme.palette.background.hint};\n    border-radius: 12px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 0 32px 0 32px;\n    max-height: 82vh;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 0 24px 0 24px;\n    max-height: 87vh;\n  }\n`;\n\nexport const ColumnsList = styled.ul`\n  max-height: 100%;\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  margin: 0;\n  margin-right: 30px;\n\n  @media screen and (min-width: 768px) {\n    gap: 24px;\n    margin-right: 34px;\n  }\n`;\n\nexport const ColumnsListItem = styled.li``;\n\nexport const Column = styled.div`\n  display: flex;\n  gap: 14px;\n  flex-direction: column;\n`;\n\nexport const GalleryCards = styled.ul`\n  list-style: none;\n  padding: 0;\n  border-radius: 8px;\n  padding-right: 8px;\n  margin: 0;\n  max-height: 58vh;\n  overflow-y: auto;\n  overflow-x: hidden;\n\n  @media screen and (min-width: 768px) {\n    max-height: 63vh;\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-height: 69vh;\n  }\n`;\n","import {\n  ContainerColumn,\n  PlusIconColumn,\n  TitleButtonColumn,\n} from './BtnAdd.styled';\nimport {\n  ButtonPlusColumn,\n} from 'components/buttons/buttons.styled';\nimport icon from '../../iconSvg/icon.svg';\nimport { useTheme } from '@mui/material';\n\nconst BtnAddColumn = ({ data, btnTitle, btnColor, onClick }) => {\n  const theme = useTheme();\n\n  return (\n    <ContainerColumn theme={theme} onClick={onClick}>\n      <ButtonPlusColumn theme={theme}>\n        <PlusIconColumn theme={theme}>\n          <use href={icon + '#icon-plus-1'}></use>\n        </PlusIconColumn>\n      </ButtonPlusColumn>\n      <TitleButtonColumn theme={theme}>{btnTitle}</TitleButtonColumn>\n    </ContainerColumn>\n  );\n};\n\nexport default BtnAddColumn;\n","import { useState } from 'react';\nimport TitleColumn from '../ColumnTitle/TitleColumn';\nimport Card from '../Card/Card';\nimport {\n  Container,\n  ColumnsList,\n  ColumnsListItem,\n  Column,\n  GalleryCards,\n} from './MainDashboard.styled';\nimport BtnAdd from '../../buttons/btnAdd/BtnAdd';\nimport BtnAddColumn from '../../buttons/btnAdd/BtnAddColumn';\nimport {\n  useAddCardMutation,\n  useAddColumnMutation,\n} from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport ColumnForm from 'components/FormColumn/ColumnCard';\nimport CardForm from 'components/FormCard/CardForm';\nimport { useParams } from 'react-router-dom';\nimport { useTheme } from '@mui/material';\n\nconst MainDashboard = ({ columns }) => {\n  const [addCard] = useAddCardMutation();\n  const [addColumn] = useAddColumnMutation();\n\n  const [openCardModal, setOpenCardModal] = useState(false);\n  const [openColumnModal, setOpenColumnModal] = useState(false);\n  const [columnId, setColumnId] = useState('');\n\n  const { boardName } = useParams();\n\n  const theme = useTheme();\n\n  const addCardInColumn = value => {\n    const boardId = boardName;\n\n    addCard({ boardId, data: value });\n    closeCardModal();\n  };\n\n  const closeColumnModal = () => {\n    setOpenColumnModal(false);\n  };\n\n  const openModalCard = columnId => {\n    setColumnId(columnId);\n\n    setOpenCardModal(true);\n  };\n\n  const closeCardModal = () => {\n    setOpenCardModal(false);\n  };\n\n  const addNewColumn = value => {\n    const boardId = boardName;\n\n    addColumn({ boardId, data: value });\n    closeColumnModal();\n  };\n\n  return (\n    <Container theme={theme}>\n      {columns && columns.length > 0 && (\n        <ColumnsList>\n          {columns.map(column => {\n            return (\n              <ColumnsListItem key={column._id}>\n                <Column>\n                  <TitleColumn\n                    title={column.title}\n                    owner={column.owner}\n                    columnId={column._id}\n                  />\n                  <GalleryCards>\n                    {column.cards.map(card => {\n                      return (\n                        <Card\n                          key={card._id}\n                          title={card.title}\n                          text={card.text}\n                          priority={card.priority}\n                          deadline={card.deadline}\n                          owner={card.ovner}\n                          boardId={column.owner}\n                          card={card}\n                          columns={columns}\n                        />\n                      );\n                    })}\n                  </GalleryCards>\n                  <BtnAdd\n                    btnTitle={'Add another card'}\n                    onClick={() => openModalCard(column._id)}\n                  />\n                </Column>\n              </ColumnsListItem>\n            );\n          })}\n        </ColumnsList>\n      )}\n      <BtnAddColumn\n        btnTitle={'Add another column'}\n        onClick={() => setOpenColumnModal(true)}\n      />\n\n      <MainModal modalIsOpen={openColumnModal} closeModal={closeColumnModal}>\n        <ColumnForm\n          formTitle={'Add column'}\n          btnText={'Add'}\n          onSubmit={addNewColumn}\n          closeModal={closeColumnModal}\n        />\n      </MainModal>\n      <MainModal modalIsOpen={openCardModal} closeModal={closeCardModal}>\n        <CardForm\n          formTitle={'Add card'}\n          btnText={'Add'}\n          owner={columnId}\n          onSubmit={addCardInColumn}\n          closeModal={closeCardModal}\n        />\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default MainDashboard;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 90vh;\n  max-height: 90vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 20px;\n\n  @media screen and (min-width: 768px) {\n    padding: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 24px;\n  }\n`;\n\nexport const TextBox = styled.div`\n  width: 486px;\n\n  /* color: var(--color-text-card); */\n  color: ${props => {\n    return props.theme.palette.text.secondary;\n  }};\n\n  text-align: center;\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px; /* 128.571% */\n  letter-spacing: -0.28px;\n`;\n\nexport const Link = styled.button`\n  color: ${props => props.theme.palette.text.hint};\n  font-family: Poppins;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  margin-left: 3px;\n  margin-right: 3px;\n`;\n","import { useState } from 'react';\nimport { Container, Link, TextBox } from './StartBoard.styled';\nimport { useTheme } from '@mui/material';\nimport { useAddBoardMutation } from 'redux/boards/boardsApi';\nimport MainModal from 'components/MainModal/MainModal';\nimport NewBoardForm from 'components/FormBoard/NewBoardForm';\n\nconst StartBoard = () => {\n  const [openModal, setOpenModal] = useState(false);\n\n  const [addBoard] = useAddBoardMutation();\n\n  const closeModal = () => {\n    setOpenModal(false);\n  };\n\n  const handleSubmit = data => {\n    addBoard({ data });\n    closeModal();\n  };\n\n  const theme = useTheme();\n  return (\n    <Container>\n      <TextBox theme={theme}>\n        Before starting your project, it is essential\n        <Link theme={theme} onClick={() => setOpenModal(true)}>\n          to create a board\n        </Link>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </TextBox>\n      <MainModal modalIsOpen={openModal} closeModal={closeModal}>\n        <NewBoardForm\n          formTitle={'New board'}\n          btnText={'Create'}\n          handleSubmit={handleSubmit}\n          closeModal={closeModal}\n        ></NewBoardForm>\n      </MainModal>\n    </Container>\n  );\n};\n\nexport default StartBoard;\n","import { useState, useEffect } from 'react';\nimport { useGetBoardByIdQuery } from 'redux/boards/boardsApi';\nimport HeaderDashboard from './HeaderDashboard/HeaderDashboard';\nimport MainDashboard from './MainDashboard/MainDashboard';\nimport styled from 'styled-components';\nimport { useParams } from 'react-router-dom';\nimport StartBoard from './StartScreen/StartBoard';\nimport { useTheme } from '@mui/material';\n\nconst ScreensPage = () => {\n  const { boardName } = useParams();\n  const { data = {} } = useGetBoardByIdQuery(boardName);\n  const [bgImageDesktop, setBgImageDesktop] = useState(null);\n  const [bgImageTablet, setBgImageTablet] = useState(null);\n  const [bgImageMobile, setBgImageMobile] = useState(null);\n\n  useEffect(() => {\n    if (data.background) {\n      setBgImageDesktop(data.background.desktop);\n      setBgImageTablet(data.background.tablet);\n      setBgImageMobile(data.background.mobile);\n    }\n  }, [data]);\n\n  const theme = useTheme();\n\n  const Container = styled.div`\n    height: 100vh;\n    max-height: 100%;\n    background-image: url(${bgImageMobile});\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center;\n\n    background-color: ${props => {\n      return props.theme.palette.primary.darker;\n    }};\n\n    @media screen and (min-width: 768px) {\n      background-image: url(${bgImageTablet});\n    }\n\n    @media screen and (min-width: 1440px) {\n      background-image: url(${bgImageDesktop});\n      padding: 0 0 0 260px;\n    }\n\n    ::-webkit-scrollbar {\n      background-color: ${theme.palette.background.warning};\n      width: 8px;\n      border-radius: 12px;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background-color: ${theme.palette.background.info};\n      border-radius: 12px;\n    }\n  `;\n\n  return (\n    <Container theme={theme}>\n      {boardName ? (\n        <>\n          <HeaderDashboard boardName={data.title} filterValue={data.filter} />\n\n          <MainDashboard board={data} columns={data.columns} />\n        </>\n      ) : (\n        <StartBoard />\n      )}\n    </Container>\n  );\n};\n\nexport default ScreensPage;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","props","theme","palette","background","paper","text","primary","CloseButton","_templateObject2","Title","_templateObject3","TitleBox","_templateObject4","ResetBox","_templateObject5","secondary","main","ResetTitle","_templateObject6","BtnReset","_templateObject7","BtnBox","_templateObject8","info","Dot","_templateObject9","ColorOptionLabel","_templateObject10","RadioButton","_templateObject11","_ref","onClick","onChange","filterValue","useTheme","_jsxs","children","_jsx","type","BtnCloseBlack","className","name","value","checked","BoardName","Thumb","boardName","_useState","useState","_useState2","_slicedToArray","isMenuOpen","setIsMenuOpen","_useBoardFilterMutati","useBoardFilterMutation","boardFilter","boardId","useParams","toggleMenu","BtnFilter","color","Filters","priotity","IconsBox","IconsButton","Icon","FormContainer","ModalTitle","Error","ErrorMessage","Input","hint","ErrorText","Textarea","Subtitle","Text","RadioButtonContainer","_templateObject12","_templateObject13","Field","_templateObject14","DeadlineBox","_templateObject15","formTitle","columnTitle","btnText","onSubmit","closeModal","validationSchema","Yup","shape","title","min","required","initialValues","Formik","values","trim","length","toast","formik","Form","as","placeholder","component","BtnAdd","btnTitle","btnColor","owner","columnId","open","setOpen","_useUpdateColumnMutat","useUpdateColumnMutation","updateColumn","_useDeleteColumnMutat","useDeleteColumnMutation","deleteColumn","href","icon","data","_id","deleteColumnHandler","MainModal","modalIsOpen","ColumnForm","Description","BottomBar","OptionsBox","Options","PriorityBox","TextOptions","Elipce","IconButton","TransferRight","Edit","Delete","MenuMUI","Menu","_templateObject16","MenuItemMUI","MenuItem","_templateObject17","IconDeadline","_templateObject18","IconDown","Calendar","parentState","initial","dayjs","format","dateDeadline","setDateDeadline","useEffect","_Fragment","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","views","disablePast","desktopModeMediaQuery","newValue","isBefore","slots","openPickerIcon","sprite","dayOfWeekFormatter","day","slice","slotProps","desktopPaper","sx","borderRadius","border","borderColor","position","left","transform","width","justifyContent","fontFamily","fontSize","fontStyle","fontWeight","lineHeight","fill","height","marginTop","margin","padding","display","alignItems","borderBottomWidth","borderBottomStyle","boxSizing","minWidth","maxWidth","bgcolor","backgroundColor","borderWidth","textField","variant","_ref$priority","priority","deadline","selectedDate","setSelectedDate","formattedDate","formattedDateLong","deadLineDateLong","_objectSpread","concat","card","columns","openCardModal","setOpenCardModal","_useReplaceCardMutati","useReplaceCardMutation","replaceCard","_useUpdateCardMutatio","useUpdateCardMutation","updateCard","_useDeleteCardMutatio","useDeleteCardMutation","deleteCard","_useState3","_useState4","anchorEl","setAnchorEl","Boolean","closeCardModal","cardPriorityChecker","cardBordredColor","style","borderLeft","EllipsisText","today","Date","deadlineDate","getFullYear","getMonth","getDate","isDeadlineToday","Button","id","undefined","event","currentTarget","size","maxHeight","minHeight","outline","onClose","MenuListProps","map","columm","currentColumn","newOwner","replaceCardHandler","disabled","stroke","deleteCardHandler","CardForm","ColumnsList","ColumnsListItem","Column","GalleryCards","ContainerColumn","ButtonPlusColumn","PlusIconColumn","TitleButtonColumn","_useAddCardMutation","useAddCardMutation","addCard","_useAddColumnMutation","useAddColumnMutation","addColumn","openColumnModal","setOpenColumnModal","_useState5","_useState6","setColumnId","closeColumnModal","column","TitleColumn","cards","Card","ovner","openModalCard","BtnAddColumn","TextBox","Link","openModal","setOpenModal","_useAddBoardMutation","useAddBoardMutation","addBoard","NewBoardForm","handleSubmit","_useGetBoardByIdQuery2","useGetBoardByIdQuery","bgImageDesktop","setBgImageDesktop","bgImageTablet","setBgImageTablet","bgImageMobile","setBgImageMobile","desktop","tablet","mobile","darker","warning","HeaderDashboard","filter","MainDashboard","board","StartBoard"],"sourceRoot":""}